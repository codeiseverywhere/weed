/**!

 @license
 handlebars v4.7.7

Copyright (C) 2011-2019 by Yehuda Katz

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/
!function(a,b){"object"==typeof exports&&"object"==typeof module?module.exports=b():"function"==typeof define&&define.amd?define([],b):"object"==typeof exports?exports.Handlebars=b():a.Handlebars=b()}(this,function(){return function(a){function b(d){if(c[d])return c[d].exports;var e=c[d]={exports:{},id:d,loaded:!1};return a[d].call(e.exports,e,e.exports,b),e.loaded=!0,e.exports}var c={};return b.m=a,b.c=c,b.p="",b(0)}([function(a,b,c){"use strict";function d(){var a=new h.HandlebarsEnvironment;return n.extend(a,h),a.SafeString=j["default"],a.Exception=l["default"],a.Utils=n,a.escapeExpression=n.escapeExpression,a.VM=p,a.template=function(b){return p.template(b,a)},a}var e=c(1)["default"],f=c(2)["default"];b.__esModule=!0;var g=c(3),h=e(g),i=c(36),j=f(i),k=c(5),l=f(k),m=c(4),n=e(m),o=c(37),p=e(o),q=c(43),r=f(q),s=d();s.create=d,r["default"](s),s["default"]=s,b["default"]=s,a.exports=b["default"]},function(a,b){"use strict";b["default"]=function(a){if(a&&a.__esModule)return a;var b={};if(null!=a)for(var c in a)Object.prototype.hasOwnProperty.call(a,c)&&(b[c]=a[c]);return b["default"]=a,b},b.__esModule=!0},function(a,b){"use strict";b["default"]=function(a){return a&&a.__esModule?a:{"default":a}},b.__esModule=!0},function(a,b,c){"use strict";function d(a,b,c){this.helpers=a||{},this.partials=b||{},this.decorators=c||{},i.registerDefaultHelpers(this),j.registerDefaultDecorators(this)}var e=c(2)["default"];b.__esModule=!0,b.HandlebarsEnvironment=d;var f=c(4),g=c(5),h=e(g),i=c(9),j=c(29),k=c(31),l=e(k),m=c(32),n="4.7.7";b.VERSION=n;var o=8;b.COMPILER_REVISION=o;var p=7;b.LAST_COMPATIBLE_COMPILER_REVISION=p;var q={1:"<= 1.0.rc.2",2:"== 1.0.0-rc.3",3:"== 1.0.0-rc.4",4:"== 1.x.x",5:"== 2.0.0-alpha.x",6:">= 2.0.0-beta.1",7:">= 4.0.0 <4.3.0",8:">= 4.3.0"};b.REVISION_CHANGES=q;var r="[object Object]";d.prototype={constructor:d,logger:l["default"],log:l["default"].log,registerHelper:function(a,b){if(f.toString.call(a)===r){if(b)throw new h["default"]("Arg not supported with multiple helpers");f.extend(this.helpers,a)}else this.helpers[a]=b},unregisterHelper:function(a){delete this.helpers[a]},registerPartial:function(a,b){if(f.toString.call(a)===r)f.extend(this.partials,a);else{if("undefined"==typeof b)throw new h["default"]('Attempting to register a partial called "'+a+'" as undefined');this.partials[a]=b}},unregisterPartial:function(a){delete this.partials[a]},registerDecorator:function(a,b){if(f.toString.call(a)===r){if(b)throw new h["default"]("Arg not supported with multiple decorators");f.extend(this.decorators,a)}else this.decorators[a]=b},unregisterDecorator:function(a){delete this.decorators[a]},resetLoggedPropertyAccesses:function(){m.resetLoggedProperties()}};var s=l["default"].log;b.log=s,b.createFrame=f.createFrame,b.logger=l["default"]},function(a,b){"use strict";function c(a){return k[a]}function d(a){for(var b=1;b<arguments.length;b++)for(var c in arguments[b])Object.prototype.hasOwnProperty.call(arguments[b],c)&&(a[c]=arguments[b][c]);return a}function e(a,b){for(var c=0,d=a.length;c<d;c++)if(a[c]===b)return c;return-1}function f(a){if("string"!=typeof a){if(a&&a.toHTML)return a.toHTML();if(null==a)return"";if(!a)return a+"";a=""+a}return m.test(a)?a.replace(l,c):a}function g(a){return!a&&0!==a||!(!p(a)||0!==a.length)}function h(a){var b=d({},a);return b._parent=a,b}function i(a,b){return a.path=b,a}function j(a,b){return(a?a+".":"")+b}b.__esModule=!0,b.extend=d,b.indexOf=e,b.escapeExpression=f,b.isEmpty=g,b.createFrame=h,b.blockParams=i,b.appendContextPath=j;var k={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;","=":"&#x3D;"},l=/[&<>"'`=]/g,m=/[&<>"'`=]/,n=Object.prototype.toString;b.toString=n;var o=function(a){return"function"==typeof a};o(/x/)&&(b.isFunction=o=function(a){return"function"==typeof a&&"[object Function]"===n.call(a)}),b.isFunction=o;var p=Array.isArray||function(a){return!(!a||"object"!=typeof a)&&"[object Array]"===n.call(a)};b.isArray=p},function(a,b,c){"use strict";function d(a,b){var c=b&&b.loc,g=void 0,h=void 0,i=void 0,j=void 0;c&&(g=c.start.line,h=c.end.line,i=c.start.column,j=c.end.column,a+=" - "+g+":"+i);for(var k=Error.prototype.constructor.call(this,a),l=0;l<f.length;l++)this[f[l]]=k[f[l]];Error.captureStackTrace&&Error.captureStackTrace(this,d);try{c&&(this.lineNumber=g,this.endLineNumber=h,e?(Object.defineProperty(this,"column",{value:i,enumerable:!0}),Object.defineProperty(this,"endColumn",{value:j,enumerable:!0})):(this.column=i,this.endColumn=j))}catch(m){}}var e=c(6)["default"];b.__esModule=!0;var f=["description","fileName","lineNumber","endLineNumber","message","name","number","stack"];d.prototype=new Error,b["default"]=d,a.exports=b["default"]},function(a,b,c){a.exports={"default":c(7),__esModule:!0}},function(a,b,c){var d=c(8);a.exports=function(a,b,c){return d.setDesc(a,b,c)}},function(a,b){var c=Object;a.exports={create:c.create,getProto:c.getPrototypeOf,isEnum:{}.propertyIsEnumerable,getDesc:c.getOwnPropertyDescriptor,setDesc:c.defineProperty,setDescs:c.defineProperties,getKeys:c.keys,getNames:c.getOwnPropertyNames,getSymbols:c.getOwnPropertySymbols,each:[].forEach}},function(a,b,c){"use strict";function d(a){h["default"](a),j["default"](a),l["default"](a),n["default"](a),p["default"](a),r["default"](a),t["default"](a)}function e(a,b,c){a.helpers[b]&&(a.hooks[b]=a.helpers[b],c||delete a.helpers[b])}var f=c(2)["default"];b.__esModule=!0,b.registerDefaultHelpers=d,b.moveHelperToHooks=e;var g=c(10),h=f(g),i=c(11),j=f(i),k=c(24),l=f(k),m=c(25),n=f(m),o=c(26),p=f(o),q=c(27),r=f(q),s=c(28),t=f(s)},function(a,b,c){"use strict";b.__esModule=!0;var d=c(4);b["default"]=function(a){a.registerHelper("blockHelperMissing",function(b,c){var e=c.inverse,f=c.fn;if(b===!0)return f(this);if(b===!1||null==b)return e(this);if(d.isArray(b))return b.length>0?(c.ids&&(c.ids=[c.name]),a.helpers.each(b,c)):e(this);if(c.data&&c.ids){var g=d.createFrame(c.data);g.contextPath=d.appendContextPath(c.data.contextPath,c.name),c={data:g}}return f(b,c)})},a.exports=b["default"]},function(a,b,c){(function(d){"use strict";var e=c(12)["default"],f=c(2)["default"];b.__esModule=!0;var g=c(4),h=c(5),i=f(h);b["default"]=function(a){a.registerHelper("each",function(a,b){function c(b,c,d){l&&(l.key=b,l.index=c,l.first=0===c,l.last=!!d,m&&(l.contextPath=m+b)),k+=f(a[b],{data:l,blockParams:g.blockParams([a[b],b],[m+b,null])})}if(!b)throw new i["default"]("Must pass iterator to #each");var f=b.fn,h=b.inverse,j=0,k="",l=void 0,m=void 0;if(b.data&&b.ids&&(m=g.appendContextPath(b.data.contextPath,b.ids[0])+"."),g.isFunction(a)&&(a=a.call(this)),b.data&&(l=g.createFrame(b.data)),a&&"object"==typeof a)if(g.isArray(a))for(var n=a.length;j<n;j++)j in a&&c(j,j,j===a.length-1);else if(d.Symbol&&a[d.Symbol.iterator]){for(var o=[],p=a[d.Symbol.iterator](),q=p.next();!q.done;q=p.next())o.push(q.value);a=o;for(var n=a.length;j<n;j++)c(j,j,j===a.length-1)}else!function(){var b=void 0;e(a).forEach(function(a){void 0!==b&&c(b,j-1),b=a,j++}),void 0!==b&&c(b,j-1,!0)}();return 0===j&&(k=h(this)),k})},a.exports=b["default"]}).call(b,function(){return this}())},function(a,b,c){a.exports={"default":c(13),__esModule:!0}},function(a,b,c){c(14),a.exports=c(20).Object.keys},function(a,b,c){var d=c(15);c(17)("keys",function(a){return function(b){return a(d(b))}})},function(a,b,c){var d=c(16);a.exports=function(a){return Object(d(a))}},function(a,b){a.exports=function(a){if(void 0==a)throw TypeError("Can't call method on  "+a);return a}},function(a,b,c){var d=c(18),e=c(20),f=c(23);a.exports=function(a,b){var c=(e.Object||{})[a]||Object[a],g={};g[a]=b(c),d(d.S+d.F*f(function(){c(1)}),"Object",g)}},function(a,b,c){var d=c(19),e=c(20),f=c(21),g="prototype",h=function(a,b,c){var i,j,k,l=a&h.F,m=a&h.G,n=a&h.S,o=a&h.P,p=a&h.B,q=a&h.W,r=m?e:e[b]||(e[b]={}),s=m?d:n?d[b]:(d[b]||{})[g];m&&(c=b);for(i in c)j=!l&&s&&i in s,j&&i in r||(k=j?s[i]:c[i],r[i]=m&&"function"!=typeof s[i]?c[i]:p&&j?f(k,d):q&&s[i]==k?function(a){var b=function(b){return this instanceof a?new a(b):a(b)};return b[g]=a[g],b}(k):o&&"function"==typeof k?f(Function.call,k):k,o&&((r[g]||(r[g]={}))[i]=k))};h.F=1,h.G=2,h.S=4,h.P=8,h.B=16,h.W=32,a.exports=h},function(a,b){var c=a.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=c)},function(a,b){var c=a.exports={version:"1.2.6"};"number"==typeof __e&&(__e=c)},function(a,b,c){var d=c(22);a.exports=function(a,b,c){if(d(a),void 0===b)return a;switch(c){case 1:return function(c){return a.call(b,c)};case 2:return function(c,d){return a.call(b,c,d)};case 3:return function(c,d,e){return a.call(b,c,d,e)}}return function(){return a.apply(b,arguments)}}},function(a,b){a.exports=function(a){if("function"!=typeof a)throw TypeError(a+" is not a function!");return a}},function(a,b){a.exports=function(a){try{return!!a()}catch(b){return!0}}},function(a,b,c){"use strict";var d=c(2)["default"];b.__esModule=!0;var e=c(5),f=d(e);b["default"]=function(a){a.registerHelper("helperMissing",function(){if(1!==arguments.length)throw new f["default"]('Missing helper: "'+arguments[arguments.length-1].name+'"')})},a.exports=b["default"]},function(a,b,c){"use strict";var d=c(2)["default"];b.__esModule=!0;var e=c(4),f=c(5),g=d(f);b["default"]=function(a){a.registerHelper("if",function(a,b){if(2!=arguments.length)throw new g["default"]("#if requires exactly one argument");return e.isFunction(a)&&(a=a.call(this)),!b.hash.includeZero&&!a||e.isEmpty(a)?b.inverse(this):b.fn(this)}),a.registerHelper("unless",function(b,c){if(2!=arguments.length)throw new g["default"]("#unless requires exactly one argument");return a.helpers["if"].call(this,b,{fn:c.inverse,inverse:c.fn,hash:c.hash})})},a.exports=b["default"]},function(a,b){"use strict";b.__esModule=!0,b["default"]=function(a){a.registerHelper("log",function(){for(var b=[void 0],c=arguments[arguments.length-1],d=0;d<arguments.length-1;d++)b.push(arguments[d]);var e=1;null!=c.hash.level?e=c.hash.level:c.data&&null!=c.data.level&&(e=c.data.level),b[0]=e,a.log.apply(a,b)})},a.exports=b["default"]},function(a,b){"use strict";b.__esModule=!0,b["default"]=function(a){a.registerHelper("lookup",function(a,b,c){return a?c.lookupProperty(a,b):a})},a.exports=b["default"]},function(a,b,c){"use strict";var d=c(2)["default"];b.__esModule=!0;var e=c(4),f=c(5),g=d(f);b["default"]=function(a){a.registerHelper("with",function(a,b){if(2!=arguments.length)throw new g["default"]("#with requires exactly one argument");e.isFunction(a)&&(a=a.call(this));var c=b.fn;if(e.isEmpty(a))return b.inverse(this);var d=b.data;return b.data&&b.ids&&(d=e.createFrame(b.data),d.contextPath=e.appendContextPath(b.data.contextPath,b.ids[0])),c(a,{data:d,blockParams:e.blockParams([a],[d&&d.contextPath])})})},a.exports=b["default"]},function(a,b,c){"use strict";function d(a){g["default"](a)}var e=c(2)["default"];b.__esModule=!0,b.registerDefaultDecorators=d;var f=c(30),g=e(f)},function(a,b,c){"use strict";b.__esModule=!0;var d=c(4);b["default"]=function(a){a.registerDecorator("inline",function(a,b,c,e){var f=a;return b.partials||(b.partials={},f=function(e,f){var g=c.partials;c.partials=d.extend({},g,b.partials);var h=a(e,f);return c.partials=g,h}),b.partials[e.args[0]]=e.fn,f})},a.exports=b["default"]},function(a,b,c){"use strict";b.__esModule=!0;var d=c(4),e={methodMap:["debug","info","warn","error"],level:"info",lookupLevel:function(a){if("string"==typeof a){var b=d.indexOf(e.methodMap,a.toLowerCase());a=b>=0?b:parseInt(a,10)}return a},log:function(a){if(a=e.lookupLevel(a),"undefined"!=typeof console&&e.lookupLevel(e.level)<=a){var b=e.methodMap[a];console[b]||(b="log");for(var c=arguments.length,d=Array(c>1?c-1:0),f=1;f<c;f++)d[f-1]=arguments[f];console[b].apply(console,d)}}};b["default"]=e,a.exports=b["default"]},function(a,b,c){"use strict";function d(a){var b=i(null);b.constructor=!1,b.__defineGetter__=!1,b.__defineSetter__=!1,b.__lookupGetter__=!1;var c=i(null);return c.__proto__=!1,{properties:{whitelist:l.createNewLookupObject(c,a.allowedProtoProperties),defaultValue:a.allowProtoPropertiesByDefault},methods:{whitelist:l.createNewLookupObject(b,a.allowedProtoMethods),defaultValue:a.allowProtoMethodsByDefault}}}function e(a,b,c){return"function"==typeof a?f(b.methods,c):f(b.properties,c)}function f(a,b){return void 0!==a.whitelist[b]?a.whitelist[b]===!0:void 0!==a.defaultValue?a.defaultValue:(g(b),!1)}function g(a){o[a]!==!0&&(o[a]=!0,n.log("error",'Handlebars: Access has been denied to resolve the property "'+a+'" because it is not an "own property" of its parent.\nYou can add a runtime option to disable the check or this warning:\nSee https://handlebarsjs.com/api-reference/runtime-options.html#options-to-control-prototype-access for details'))}function h(){j(o).forEach(function(a){delete o[a]})}var i=c(33)["default"],j=c(12)["default"],k=c(1)["default"];b.__esModule=!0,b.createProtoAccessControl=d,b.resultIsAllowed=e,b.resetLoggedProperties=h;var l=c(35),m=c(31),n=k(m),o=i(null)},function(a,b,c){a.exports={"default":c(34),__esModule:!0}},function(a,b,c){var d=c(8);a.exports=function(a,b){return d.create(a,b)}},function(a,b,c){"use strict";function d(){for(var a=arguments.length,b=Array(a),c=0;c<a;c++)b[c]=arguments[c];return f.extend.apply(void 0,[e(null)].concat(b))}var e=c(33)["default"];b.__esModule=!0,b.createNewLookupObject=d;var f=c(4)},function(a,b){"use strict";function c(a){this.string=a}b.__esModule=!0,c.prototype.toString=c.prototype.toHTML=function(){return""+this.string},b["default"]=c,a.exports=b["default"]},function(a,b,c){"use strict";function d(a){var b=a&&a[0]||1,c=v.COMPILER_REVISION;if(!(b>=v.LAST_COMPATIBLE_COMPILER_REVISION&&b<=v.COMPILER_REVISION)){if(b<v.LAST_COMPATIBLE_COMPILER_REVISION){var d=v.REVISION_CHANGES[c],e=v.REVISION_CHANGES[b];throw new u["default"]("Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version ("+d+") or downgrade your runtime to an older version ("+e+").")}throw new u["default"]("Template was precompiled with a newer version of Handlebars than the current runtime. Please update your runtime to a newer version ("+a[1]+").")}}function e(a,b){function c(c,d,e){e.hash&&(d=s.extend({},d,e.hash),e.ids&&(e.ids[0]=!0)),c=b.VM.resolvePartial.call(this,c,d,e);var f=s.extend({},e,{hooks:this.hooks,protoAccessControl:this.protoAccessControl}),g=b.VM.invokePartial.call(this,c,d,f);if(null==g&&b.compile&&(e.partials[e.name]=b.compile(c,a.compilerOptions,b),g=e.partials[e.name](d,f)),null!=g){if(e.indent){for(var h=g.split("\n"),i=0,j=h.length;i<j&&(h[i]||i+1!==j);i++)h[i]=e.indent+h[i];g=h.join("\n")}return g}throw new u["default"]("The partial "+e.name+" could not be compiled when running in runtime-only mode")}function d(b){function c(b){return""+a.main(g,b,g.helpers,g.partials,f,i,h)}var e=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],f=e.data;d._setup(e),!e.partial&&a.useData&&(f=j(b,f));var h=void 0,i=a.useBlockParams?[]:void 0;return a.useDepths&&(h=e.depths?b!=e.depths[0]?[b].concat(e.depths):e.depths:[b]),(c=k(a.main,c,g,e.depths||[],f,i))(b,e)}if(!b)throw new u["default"]("No environment passed to template");if(!a||!a.main)throw new u["default"]("Unknown template object: "+typeof a);a.main.decorator=a.main_d,b.VM.checkRevision(a.compiler);var e=a.compiler&&7===a.compiler[0],g={strict:function(a,b,c){if(!(a&&b in a))throw new u["default"]('"'+b+'" not defined in '+a,{loc:c});return g.lookupProperty(a,b)},lookupProperty:function(a,b){var c=a[b];return null==c?c:Object.prototype.hasOwnProperty.call(a,b)?c:y.resultIsAllowed(c,g.protoAccessControl,b)?c:void 0},lookup:function(a,b){for(var c=a.length,d=0;d<c;d++){var e=a[d]&&g.lookupProperty(a[d],b);if(null!=e)return a[d][b]}},lambda:function(a,b){return"function"==typeof a?a.call(b):a},escapeExpression:s.escapeExpression,invokePartial:c,fn:function(b){var c=a[b];return c.decorator=a[b+"_d"],c},programs:[],program:function(a,b,c,d,e){var g=this.programs[a],h=this.fn(a);return b||e||d||c?g=f(this,a,h,b,c,d,e):g||(g=this.programs[a]=f(this,a,h)),g},data:function(a,b){for(;a&&b--;)a=a._parent;return a},mergeIfNeeded:function(a,b){var c=a||b;return a&&b&&a!==b&&(c=s.extend({},b,a)),c},nullContext:n({}),noop:b.VM.noop,compilerInfo:a.compiler};return d.isTop=!0,d._setup=function(c){if(c.partial)g.protoAccessControl=c.protoAccessControl,g.helpers=c.helpers,g.partials=c.partials,g.decorators=c.decorators,g.hooks=c.hooks;else{var d=s.extend({},b.helpers,c.helpers);l(d,g),g.helpers=d,a.usePartial&&(g.partials=g.mergeIfNeeded(c.partials,b.partials)),(a.usePartial||a.useDecorators)&&(g.decorators=s.extend({},b.decorators,c.decorators)),g.hooks={},g.protoAccessControl=y.createProtoAccessControl(c);var f=c.allowCallsToHelperMissing||e;w.moveHelperToHooks(g,"helperMissing",f),w.moveHelperToHooks(g,"blockHelperMissing",f)}},d._child=function(b,c,d,e){if(a.useBlockParams&&!d)throw new u["default"]("must pass block params");if(a.useDepths&&!e)throw new u["default"]("must pass parent depths");return f(g,b,a[b],c,0,d,e)},d}function f(a,b,c,d,e,f,g){function h(b){var e=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],h=g;return!g||b==g[0]||b===a.nullContext&&null===g[0]||(h=[b].concat(g)),c(a,b,a.helpers,a.partials,e.data||d,f&&[e.blockParams].concat(f),h)}return h=k(c,h,a,g,d,f),h.program=b,h.depth=g?g.length:0,h.blockParams=e||0,h}function g(a,b,c){return a?a.call||c.name||(c.name=a,a=c.partials[a]):a="@partial-block"===c.name?c.data["partial-block"]:c.partials[c.name],a}function h(a,b,c){var d=c.data&&c.data["partial-block"];c.partial=!0,c.ids&&(c.data.contextPath=c.ids[0]||c.data.contextPath);var e=void 0;if(c.fn&&c.fn!==i&&!function(){c.data=v.createFrame(c.data);var a=c.fn;e=c.data["partial-block"]=function(b){var c=arguments.length<=1||void 0===arguments[1]?{}:arguments[1];return c.data=v.createFrame(c.data),c.data["partial-block"]=d,a(b,c)},a.partials&&(c.partials=s.extend({},c.partials,a.partials))}(),void 0===a&&e&&(a=e),void 0===a)throw new u["default"]("The partial "+c.name+" could not be found");if(a instanceof Function)return a(b,c)}function i(){return""}function j(a,b){return b&&"root"in b||(b=b?v.createFrame(b):{},b.root=a),b}function k(a,b,c,d,e,f){if(a.decorator){var g={};b=a.decorator(b,g,c,d&&d[0],e,f,d),s.extend(b,g)}return b}function l(a,b){o(a).forEach(function(c){var d=a[c];a[c]=m(d,b)})}function m(a,b){var c=b.lookupProperty;return x.wrapHelper(a,function(a){return s.extend({lookupProperty:c},a)})}var n=c(38)["default"],o=c(12)["default"],p=c(1)["default"],q=c(2)["default"];b.__esModule=!0,b.checkRevision=d,b.template=e,b.wrapProgram=f,b.resolvePartial=g,b.invokePartial=h,b.noop=i;var r=c(4),s=p(r),t=c(5),u=q(t),v=c(3),w=c(9),x=c(42),y=c(32)},function(a,b,c){a.exports={"default":c(39),__esModule:!0}},function(a,b,c){c(40),a.exports=c(20).Object.seal},function(a,b,c){var d=c(41);c(17)("seal",function(a){return function(b){return a&&d(b)?a(b):b}})},function(a,b){a.exports=function(a){return"object"==typeof a?null!==a:"function"==typeof a}},function(a,b){"use strict";function c(a,b){if("function"!=typeof a)return a;var c=function(){var c=arguments[arguments.length-1];return arguments[arguments.length-1]=b(c),a.apply(this,arguments)};return c}b.__esModule=!0,b.wrapHelper=c},function(a,b){(function(c){"use strict";b.__esModule=!0,b["default"]=function(a){var b="undefined"!=typeof c?c:window,d=b.Handlebars;a.noConflict=function(){return b.Handlebars===a&&(b.Handlebars=d),a}},a.exports=b["default"]}).call(b,function(){return this}())}])});
this["SpaceStation"] = this["SpaceStation"] || {};
this["SpaceStation"]["AjaxCart"] = this["SpaceStation"]["AjaxCart"] || {};
this["SpaceStation"]["AjaxCart"]["cart"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data,blockParams) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=container.hooks.helperMissing, alias3=container.escapeExpression, lookupProperty = container.lookupProperty || function(parent, propertyName) {
        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
          return parent[propertyName];
        }
        return undefined
    };

  return ((stack1 = lookupProperty(helpers,"each").call(alias1,(depth0 != null ? lookupProperty(depth0,"items") : depth0),{"name":"each","hash":{},"fn":container.program(2, data, 2, blockParams),"inverse":container.noop,"data":data,"blockParams":blockParams,"loc":{"start":{"line":7,"column":8},"end":{"line":45,"column":17}}})) != null ? stack1 : "")
    + "        <hr class=\"AjaxCart-divider\">\n        <table class=\"AjaxCart-totals\">\n            <tr class=\"AjaxCart-total AjaxCart-total--subtotal\">\n                <th>Subtotal</th>\n                <td>"
    + alias3((lookupProperty(helpers,"AjaxCart_money")||(depth0 && lookupProperty(depth0,"AjaxCart_money"))||alias2).call(alias1,(depth0 != null ? lookupProperty(depth0,"items_subtotal_price") : depth0),(depth0 != null ? lookupProperty(depth0,"money_format") : depth0),{"name":"AjaxCart_money","hash":{},"data":data,"blockParams":blockParams,"loc":{"start":{"line":50,"column":20},"end":{"line":50,"column":72}}}))
    + "</td>\n            </tr>\n"
    + ((stack1 = lookupProperty(helpers,"each").call(alias1,(depth0 != null ? lookupProperty(depth0,"cart_level_discount_applications") : depth0),{"name":"each","hash":{},"fn":container.program(12, data, 2, blockParams),"inverse":container.noop,"data":data,"blockParams":blockParams,"loc":{"start":{"line":52,"column":12},"end":{"line":57,"column":21}}})) != null ? stack1 : "")
    + "            <tr class=\"AjaxCart-total AjaxCart-total--tax\">\n                <th>Tax <span class=\"AjaxCart-total_note\">(calculated in checkout)</span></th>\n                <td>&mdash;</td>\n            </tr>\n            <tr class=\"AjaxCart-total AjaxCart-total--shipping\" data-ajaxcart-shipping>\n                <th>Shipping\n                    <span class=\"AjaxCart-total_note\" data-ajaxcart-shipping-destination></span>\n                    <button type=\"button\" class=\"AjaxCart-shipping_address_edit_button\" data-ajaxcart-shipping-editbutton>(edit)</button>\n                    <form class=\"AjaxCart-shipping_address_form\" data-ajaxcart-shipping-form>\n                        <div class=\"AjaxCart-shipping_address_input FormItem FormItem--stacked\">\n                            <select type=\"text\" name=\"shipping_address[country]\" data-ajaxcart-shipping-countryinput>\n                                <option>Country</option>\n                            </select>\n                        </div>\n                        <div class=\"AjaxCart-shipping_address_input FormItem FormItem--stacked\">\n                            <select type=\"text\" name=\"shipping_address[province]\" data-ajaxcart-shipping-provinceinput>\n                                <option>Province</option>\n                            </select>\n                        </div>\n                        <div class=\"AjaxCart-shipping_address_input FormItem FormItem--stacked\">\n                            <input type=\"text\" name=\"shipping_address[zip]\" placeholder=\"Postal Code\">\n                        </div>\n                        <div class=\"AjaxCart-shipping_address_action FormItem FormItem--actions\">\n                            <button type=\"submit\" class=\"FormItem-action FormItem-action--primary\">Edit</button>\n                        </div>\n                    </form>\n                </th>\n                <td data-ajaxcart-shipping-price>&mdash;</td>\n            </tr>\n            <tr class=\"AjaxCart-total AjaxCart-total--grandtotal\">\n                <th>Estimated Total</th>\n                <td>"
    + alias3((lookupProperty(helpers,"AjaxCart_money")||(depth0 && lookupProperty(depth0,"AjaxCart_money"))||alias2).call(alias1,(depth0 != null ? lookupProperty(depth0,"total_price") : depth0),(depth0 != null ? lookupProperty(depth0,"money_format") : depth0),{"name":"AjaxCart_money","hash":{},"data":data,"blockParams":blockParams,"loc":{"start":{"line":89,"column":20},"end":{"line":89,"column":63}}}))
    + "</td>\n            </tr>\n        </table>\n";
},"2":function(container,depth0,helpers,partials,data,blockParams) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=container.lambda, alias3=container.escapeExpression, lookupProperty = container.lookupProperty || function(parent, propertyName) {
        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
          return parent[propertyName];
        }
        return undefined
    };

  return "            <div class=\"AjaxCart-item\">\n                <div class=\"AjaxCart-item_image\">\n"
    + ((stack1 = lookupProperty(helpers,"if").call(alias1,((stack1 = blockParams[0][0]) != null ? lookupProperty(stack1,"featured_image") : stack1),{"name":"if","hash":{},"fn":container.program(3, data, 0, blockParams),"inverse":container.noop,"data":data,"blockParams":blockParams,"loc":{"start":{"line":10,"column":20},"end":{"line":12,"column":27}}})) != null ? stack1 : "")
    + "                </div>\n                <div class=\"AjaxCart-item_details\">\n                    <h3 class=\"AjaxCart-item_title\"><a href=\""
    + alias3(alias2(((stack1 = blockParams[0][0]) != null ? lookupProperty(stack1,"url") : stack1), depth0))
    + "\">"
    + alias3(alias2(((stack1 = blockParams[0][0]) != null ? lookupProperty(stack1,"product_title") : stack1), depth0))
    + "</a></h3>\n"
    + ((stack1 = lookupProperty(helpers,"if").call(alias1,((stack1 = blockParams[0][0]) != null ? lookupProperty(stack1,"options_with_values") : stack1),{"name":"if","hash":{},"fn":container.program(5, data, 0, blockParams),"inverse":container.noop,"data":data,"blockParams":blockParams,"loc":{"start":{"line":16,"column":20},"end":{"line":27,"column":27}}})) != null ? stack1 : "")
    + "                    <div class=\"AjaxCart-item_quantity_selector\" data-ajaxcart-quantity data-ajaxcart-quantity-lineitem=\""
    + alias3(alias2(((stack1 = blockParams[0][0]) != null ? lookupProperty(stack1,"id") : stack1), depth0))
    + "\">\n                        <input class=\"AjaxCart-item_quantity\" type=\"number\" value=\""
    + alias3(alias2(((stack1 = blockParams[0][0]) != null ? lookupProperty(stack1,"quantity") : stack1), depth0))
    + "\">\n                        <button type=\"button\" class=\"AjaxCart-item_quantity_toggle AjaxCart-item_quantity_toggle--increase\" data-ajaxcart-quantitytoggle=\"1\">+</button>\n                        <button type=\"button\" class=\"AjaxCart-item_quantity_toggle AjaxCart-item_quantity_toggle--decrease\" data-ajaxcart-quantitytoggle=\"-1\">-</button>\n                    </div>\n                    <button type=\"button\" class=\"AjaxCart-item_remove\" data-ajaxcart-remove data-ajaxcart-remove-lineitem=\""
    + alias3(alias2(((stack1 = blockParams[0][0]) != null ? lookupProperty(stack1,"id") : stack1), depth0))
    + "\">Remove</button>\n"
    + ((stack1 = lookupProperty(helpers,"each").call(alias1,((stack1 = blockParams[0][0]) != null ? lookupProperty(stack1,"line_level_discount_applications") : stack1),{"name":"each","hash":{},"fn":container.program(9, data, 2, blockParams),"inverse":container.noop,"data":data,"blockParams":blockParams,"loc":{"start":{"line":34,"column":20},"end":{"line":41,"column":29}}})) != null ? stack1 : "")
    + "                    <span class=\"AjaxCart-item_price AjaxCart-item_price--total\">"
    + alias3((lookupProperty(helpers,"AjaxCart_money")||(depth0 && lookupProperty(depth0,"AjaxCart_money"))||container.hooks.helperMissing).call(alias1,((stack1 = blockParams[0][0]) != null ? lookupProperty(stack1,"final_line_price") : stack1),(depth0 != null ? lookupProperty(depth0,"money_format") : depth0),{"name":"AjaxCart_money","hash":{},"data":data,"blockParams":blockParams,"loc":{"start":{"line":42,"column":81},"end":{"line":42,"column":134}}}))
    + "</span>\n                </div>\n            </div>\n";
},"3":function(container,depth0,helpers,partials,data,blockParams) {
    var stack1, alias1=container.escapeExpression, lookupProperty = container.lookupProperty || function(parent, propertyName) {
        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
          return parent[propertyName];
        }
        return undefined
    };

  return "                        <img src=\""
    + alias1((lookupProperty(helpers,"AjaxCart_img-url")||(depth0 && lookupProperty(depth0,"AjaxCart_img-url"))||container.hooks.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),((stack1 = ((stack1 = blockParams[1][0]) != null ? lookupProperty(stack1,"featured_image") : stack1)) != null ? lookupProperty(stack1,"url") : stack1),"200x",{"name":"AjaxCart_img-url","hash":{},"data":data,"blockParams":blockParams,"loc":{"start":{"line":11,"column":34},"end":{"line":11,"column":85}}}))
    + "\" alt=\""
    + alias1(container.lambda(((stack1 = ((stack1 = blockParams[1][0]) != null ? lookupProperty(stack1,"featured_image") : stack1)) != null ? lookupProperty(stack1,"alt") : stack1), depth0))
    + "\">\n";
},"5":function(container,depth0,helpers,partials,data,blockParams) {
    var stack1, lookupProperty = container.lookupProperty || function(parent, propertyName) {
        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
          return parent[propertyName];
        }
        return undefined
    };

  return "                        <div class=\"AjaxCart-item_options\">\n"
    + ((stack1 = lookupProperty(helpers,"each").call(depth0 != null ? depth0 : (container.nullContext || {}),((stack1 = blockParams[1][0]) != null ? lookupProperty(stack1,"options_with_values") : stack1),{"name":"each","hash":{},"fn":container.program(6, data, 2, blockParams),"inverse":container.noop,"data":data,"blockParams":blockParams,"loc":{"start":{"line":18,"column":28},"end":{"line":25,"column":37}}})) != null ? stack1 : "")
    + "                        </div>\n";
},"6":function(container,depth0,helpers,partials,data,blockParams) {
    var stack1, lookupProperty = container.lookupProperty || function(parent, propertyName) {
        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
          return parent[propertyName];
        }
        return undefined
    };

  return ((stack1 = (lookupProperty(helpers,"AjaxCart_not-default-option")||(depth0 && lookupProperty(depth0,"AjaxCart_not-default-option"))||container.hooks.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),blockParams[0][0],{"name":"AjaxCart_not-default-option","hash":{},"fn":container.program(7, data, 0, blockParams),"inverse":container.noop,"data":data,"blockParams":blockParams,"loc":{"start":{"line":19,"column":32},"end":{"line":24,"column":64}}})) != null ? stack1 : "");
},"7":function(container,depth0,helpers,partials,data,blockParams) {
    var stack1, alias1=container.lambda, alias2=container.escapeExpression, lookupProperty = container.lookupProperty || function(parent, propertyName) {
        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
          return parent[propertyName];
        }
        return undefined
    };

  return "                                    <div class=\"AjaxCart-item_option\">\n                                        <span class=\"AjaxCart-item_option_title\">"
    + alias2(alias1(((stack1 = blockParams[1][0]) != null ? lookupProperty(stack1,"name") : stack1), depth0))
    + "</span>:\n                                        <span class=\"AjaxCart-item_option_value\">"
    + alias2(alias1(((stack1 = blockParams[1][0]) != null ? lookupProperty(stack1,"value") : stack1), depth0))
    + "</span>\n                                    </div>\n";
},"9":function(container,depth0,helpers,partials,data,blockParams) {
    var stack1, alias1=container.escapeExpression, alias2=depth0 != null ? depth0 : (container.nullContext || {}), lookupProperty = container.lookupProperty || function(parent, propertyName) {
        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
          return parent[propertyName];
        }
        return undefined
    };

  return "                        <div class=\"AjaxCart-item_discount\">\n                            "
    + alias1(container.lambda(((stack1 = ((stack1 = blockParams[0][0]) != null ? lookupProperty(stack1,"discount_application") : stack1)) != null ? lookupProperty(stack1,"title") : stack1), depth0))
    + ": <span class=\"AjaxCart-item_price AjaxCart-item_price--discount\">"
    + alias1((lookupProperty(helpers,"AjaxCart_money")||(depth0 && lookupProperty(depth0,"AjaxCart_money"))||container.hooks.helperMissing).call(alias2,((stack1 = blockParams[0][0]) != null ? lookupProperty(stack1,"amount") : stack1),(depth0 != null ? lookupProperty(depth0,"money_format") : depth0),{"name":"AjaxCart_money","hash":{},"data":data,"blockParams":blockParams,"loc":{"start":{"line":36,"column":133},"end":{"line":36,"column":180}}}))
    + "</span>\n"
    + ((stack1 = lookupProperty(helpers,"if").call(alias2,((stack1 = ((stack1 = blockParams[0][0]) != null ? lookupProperty(stack1,"discount_application") : stack1)) != null ? lookupProperty(stack1,"description") : stack1),{"name":"if","hash":{},"fn":container.program(10, data, 0, blockParams),"inverse":container.noop,"data":data,"blockParams":blockParams,"loc":{"start":{"line":37,"column":28},"end":{"line":39,"column":35}}})) != null ? stack1 : "")
    + "                        </div>\n";
},"10":function(container,depth0,helpers,partials,data,blockParams) {
    var stack1, lookupProperty = container.lookupProperty || function(parent, propertyName) {
        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
          return parent[propertyName];
        }
        return undefined
    };

  return "                                <div class=\"AjaxCart-item_discount_description\">"
    + container.escapeExpression(container.lambda(((stack1 = ((stack1 = blockParams[1][0]) != null ? lookupProperty(stack1,"discount_application") : stack1)) != null ? lookupProperty(stack1,"description") : stack1), depth0))
    + "</div>\n";
},"12":function(container,depth0,helpers,partials,data,blockParams) {
    var stack1, alias1=container.escapeExpression, lookupProperty = container.lookupProperty || function(parent, propertyName) {
        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
          return parent[propertyName];
        }
        return undefined
    };

  return "                <tr class=\"AjaxCart-total AjaxCart-total--discount\">\n                    <th>Promotion <span class=\"AjaxCart-total_note\">("
    + alias1(container.lambda(((stack1 = blockParams[0][0]) != null ? lookupProperty(stack1,"title") : stack1), depth0))
    + ")</span></th>\n                    <td>"
    + alias1((lookupProperty(helpers,"AjaxCart_money")||(depth0 && lookupProperty(depth0,"AjaxCart_money"))||container.hooks.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || {}),((stack1 = blockParams[0][0]) != null ? lookupProperty(stack1,"total_allocated_amount") : stack1),(depth0 != null ? lookupProperty(depth0,"money_format") : depth0),{"name":"AjaxCart_money","hash":{},"data":data,"blockParams":blockParams,"loc":{"start":{"line":55,"column":24},"end":{"line":55,"column":87}}}))
    + "</td>\n                </tr>\n";
},"14":function(container,depth0,helpers,partials,data) {
    return "        <div class=\"AjaxCart-empty_state\">Nothing here!</div>\n";
},"compiler":[8,">= 4.3.0"],"main":function(container,depth0,helpers,partials,data,blockParams) {
    var stack1, lookupProperty = container.lookupProperty || function(parent, propertyName) {
        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
          return parent[propertyName];
        }
        return undefined
    };

  return "<div class=\"AjaxCart\">\n    <hgroup class=\"AjaxCart-cart_header\">\n        <button class=\"AjaxCart-dismiss\" type=\"button\" data-dismiss=\"offcanvas\">Dismiss</button>\n        <h2 class=\"AjaxCart-cart_title\">Your Cart</h2>\n    </hgroup>\n"
    + ((stack1 = lookupProperty(helpers,"if").call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? lookupProperty(depth0,"items") : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0, blockParams),"inverse":container.program(14, data, 0, blockParams),"data":data,"blockParams":blockParams,"loc":{"start":{"line":6,"column":4},"end":{"line":94,"column":11}}})) != null ? stack1 : "")
    + "</div>\n";
},"useData":true,"useBlockParams":true});
this["SpaceStation"]["AjaxCart"]["cart_error"] = Handlebars.template({"compiler":[8,">= 4.3.0"],"main":function(container,depth0,helpers,partials,data) {
    var helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=container.hooks.helperMissing, alias3="function", alias4=container.escapeExpression, lookupProperty = container.lookupProperty || function(parent, propertyName) {
        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
          return parent[propertyName];
        }
        return undefined
    };

  return "<div class=\"AjaxCart AjaxCart--error\">\n    <span>"
    + alias4(((helper = (helper = lookupProperty(helpers,"friendly_error") || (depth0 != null ? lookupProperty(depth0,"friendly_error") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"friendly_error","hash":{},"data":data,"loc":{"start":{"line":2,"column":10},"end":{"line":2,"column":28}}}) : helper)))
    + "</span>\n    <span class=\"AjaxCart-error_message\">"
    + alias4(((helper = (helper = lookupProperty(helpers,"error") || (depth0 != null ? lookupProperty(depth0,"error") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"error","hash":{},"data":data,"loc":{"start":{"line":3,"column":41},"end":{"line":3,"column":50}}}) : helper)))
    + "</span>\n</div>";
},"useData":true});
!function(e){function n(){}function t(e,n){return function(){e.apply(n,arguments)}}function o(e){if("object"!=typeof this)throw new TypeError("Promises must be constructed via new");if("function"!=typeof e)throw new TypeError("not a function");this._state=0,this._handled=!1,this._value=void 0,this._deferreds=[],s(e,this)}function i(e,n){for(;3===e._state;)e=e._value;return 0===e._state?void e._deferreds.push(n):(e._handled=!0,void o._immediateFn(function(){var t=1===e._state?n.onFulfilled:n.onRejected;if(null===t)return void(1===e._state?r:u)(n.promise,e._value);var o;try{o=t(e._value)}catch(i){return void u(n.promise,i)}r(n.promise,o)}))}function r(e,n){try{if(n===e)throw new TypeError("A promise cannot be resolved with itself.");if(n&&("object"==typeof n||"function"==typeof n)){var i=n.then;if(n instanceof o)return e._state=3,e._value=n,void f(e);if("function"==typeof i)return void s(t(i,n),e)}e._state=1,e._value=n,f(e)}catch(r){u(e,r)}}function u(e,n){e._state=2,e._value=n,f(e)}function f(e){2===e._state&&0===e._deferreds.length&&o._immediateFn(function(){e._handled||o._unhandledRejectionFn(e._value)});for(var n=0,t=e._deferreds.length;n<t;n++)i(e,e._deferreds[n]);e._deferreds=null}function c(e,n,t){this.onFulfilled="function"==typeof e?e:null,this.onRejected="function"==typeof n?n:null,this.promise=t}function s(e,n){var t=!1;try{e(function(e){t||(t=!0,r(n,e))},function(e){t||(t=!0,u(n,e))})}catch(o){if(t)return;t=!0,u(n,o)}}var a=setTimeout;o.prototype["catch"]=function(e){return this.then(null,e)},o.prototype.then=function(e,t){var o=new this.constructor(n);return i(this,new c(e,t,o)),o},o.all=function(e){var n=Array.prototype.slice.call(e);return new o(function(e,t){function o(r,u){try{if(u&&("object"==typeof u||"function"==typeof u)){var f=u.then;if("function"==typeof f)return void f.call(u,function(e){o(r,e)},t)}n[r]=u,0===--i&&e(n)}catch(c){t(c)}}if(0===n.length)return e([]);for(var i=n.length,r=0;r<n.length;r++)o(r,n[r])})},o.resolve=function(e){return e&&"object"==typeof e&&e.constructor===o?e:new o(function(n){n(e)})},o.reject=function(e){return new o(function(n,t){t(e)})},o.race=function(e){return new o(function(n,t){for(var o=0,i=e.length;o<i;o++)e[o].then(n,t)})},o._immediateFn="function"==typeof setImmediate&&function(e){setImmediate(e)}||function(e){a(e,0)},o._unhandledRejectionFn=function(e){"undefined"!=typeof console&&console&&console.warn("Possible Unhandled Promise Rejection:",e)},o._setImmediateFn=function(e){o._immediateFn=e},o._setUnhandledRejectionFn=function(e){o._unhandledRejectionFn=e},"undefined"!=typeof module&&module.exports?module.exports=o:e.Promise||(e.Promise=o)}(this);
//https://github.com/JamesMGreene/Function.name/blob/master/Function.name.js
(function() {

var fnNameMatchRegex = /^\s*function\s+([^\(\s]*)\s*/;

function _name() {
  var match, name;
  if (this === Function || this === Function.prototype.constructor) {
    name = "Function";
  }
  else if (this !== Function.prototype) {
    match = ("" + this).match(fnNameMatchRegex);
    name = match && match[1];
  }
  return name || "";
}

// Inspect the polyfill-ability of this browser
var needsPolyfill = !("name" in Function.prototype && "name" in (function x() {}));
var canDefineProp = typeof Object.defineProperty === "function" &&
  (function() {
    var result;
    try {
      Object.defineProperty(Function.prototype, "_xyz", {
        get: function() {
          return "blah";
        },
        configurable: true
      });
      result = Function.prototype._xyz === "blah";
      delete Function.prototype._xyz;
    }
    catch (e) {
      result = false;
    }
    return result;
  })();
var canDefineGetter = typeof Object.prototype.__defineGetter__ === "function" &&
  (function() {
    var result;
    try {
      Function.prototype.__defineGetter__("_abc", function() {
        return "foo";
      });
      result = Function.prototype._abc === "foo";
      delete Function.prototype._abc;
    }
    catch (e) {
      result = false;
    }
    return result;
  })();



// Add the "private" property for testing, even if the real property can be polyfilled
Function.prototype._name = _name;


// Polyfill it!
// For:
//  * IE >=9 <12
//  * Chrome <33
if (needsPolyfill) {
  // For:
  //  * IE >=9 <12
  //  * Chrome >=5 <33
  if (canDefineProp) {
    Object.defineProperty(Function.prototype, "name", {
      get: function() {
        var name = _name.call(this);

        // Since named function definitions have immutable names, also memoize the
        // output by defining the `name` property directly on this Function
        // instance so that this polyfill will not need to be invoked again
        if (this !== Function.prototype) {
          Object.defineProperty(this, "name", {
            value: name,
            configurable: true
          });
        }

        return name;
      },
      configurable: true
    });
  }
  // For:
  //  * Chrome <5
  else if (canDefineGetter) {
    // NOTE:
    // The snippet:
    //
    //     x.__defineGetter__('y', z);
    //
    // ...is essentially equivalent to:
    //
    //     Object.defineProperty(x, 'y', {
    //       get: z,
    //       configurable: true,  // <-- key difference #1
    //       enumerable: true     // <-- key difference #2
    //     });
    //
    Function.prototype.__defineGetter__("name", function() {
      var name = _name.call(this);

      // Since named function definitions have immutable names, also memoize the
      // output by defining the `name` property directly on this Function
      // instance so that this polyfill will not need to be invoked again
      if (this !== Function.prototype) {
        this.__defineGetter__("name", function() { return name; });
      }

      return name;
    });
  }
}

})();
/*global define, window, document*/

(function (root, factory) {
    "use strict";
    if (typeof define === 'function' && define.amd) {
        define("Behaviors", ["jquery"], factory);
    } else {
        root.Behaviors = factory(root.jQuery);
    }
}(this, function ($) {
    "use strict";

    var module = {},
        behavior_registry = {},
        content_ready_listeners = [],
        ElementMissingError = error("ElementMissingError");
    
    /* Throttle an event handler.
     *
     * Returns a function which, no matter how frequently it's called, will
     * only trigger a maximum of once per timeout period. More specifically,
     * the first event will always be processed, then, no events will process
     * until the end of the timeout period. If one or more events occurred
     * during this period, the last event recieved will trigger immediately
     * after the end of the timeout period, as well as restart the throttling
     * period. Any preceding events will be discarded.
     *
     * Not to be confused with a debounce, which only fires the event handler
     * at the end of a string of events spaced closer than the timeout period.
     *
     * The nature of this function means that any passed in function's return
     * value will be discarded.
     */
    function throttle_single(func, timeout) {
        var lastTimeout, afterLastArgs, afterLastThis;

        function unthrottle() {
            if (afterLastArgs !== undefined) {
                func.apply(afterLastThis, afterLastArgs);
                afterLastArgs = undefined;
                lastTimeout = window.setTimeout(unthrottle, timeout);
            } else {
                lastTimeout = undefined;
            }
        }

        return function () {
            var myThis = this, myArgs = [], i;

            for (i = 0; i < arguments.length; i += 1) {
                myArgs.push(arguments[i]);
            }

            if (lastTimeout === undefined) {
                func.apply(myThis, myArgs);
                lastTimeout = window.setTimeout(unthrottle, timeout);
            } else {
                afterLastArgs = myArgs;
                afterLastThis = myThis;
            }
        };
    }

    function Behavior(elem) {
        //Do something to elem
        this.$elem = $(elem);
    }

    /* Find a behavior's markup.
     *
     * The $context argument passed to this function is the jQuery element that
     * will be searched for behaviors. Any additional arguments will be passed
     * to Behavior.locate and ultimately to the behavior's constructor.
     */
    Behavior.find_markup = function ($context) {
        var results = [], i, splitArgs = [], Class = this;

        for (i = 1; i < arguments.length; i += 1) {
            splitArgs.push(arguments[i]);
        }
        
        function processElem(index, elem) {
            var locateArgs = [elem].concat(splitArgs);

            results.push(Class.locate.apply(Class, locateArgs));
        }
        
        $context.filter(Class.QUERY).each(processElem);
        $context.find(Class.QUERY).each(processElem);

        return results;
    };

    /* Locate a behavior onto an element, returning an instance of that
     * behavior that you can work with.
     *
     * A behavior locates onto an element by instantiating an instance of
     * itself and installing it onto the markup's jQuery data. Therefore, we
     * will only instantiate that behavior once; and further calls to .locate
     * instead return the same object. Thus, it is safe to use .locate as a
     * general accessor - it is idempotent.
     *
     * The elem argument indicates the element that the behavior should locate
     * onto. Further arguments are passed onto the constructor.
     *
     * TODO: Is there a non-jQuery way of handling this?
     */
    Behavior.locate = function (elem, ...objectArgs) {
        var $elem = $(elem), new_object, i, Class = this,
            rc = $elem.data("behaviors-registered-classes");
        
        if ($elem.length === 0) {
            throw new ElementMissingError("Attempted to locate a Behavior onto an empty element query.");
        }

        if (rc === undefined) {
            rc = {};
        }

        if (rc[Class.QUERY] === undefined) {
            rc[Class.QUERY] = new Class(elem, ...objectArgs);
        } else {
            new_object = rc[Class.QUERY];
        }

        $elem.data("behaviors-registered-classes", rc);

        return new_object;
    };

    /* Respond to the presence of new content on the page.
     *
     * By default, we attempt to find markup on all children of the context.
     * Subclasses may do something crazier, like say delay behavior processing
     * until some third-party API is loaded.
     *
     * Consider this roughly equivalent to $(document).ready() callbacks.
     */
    Behavior.content_ready = function ($context) {
        var Class = this;

        Class.find_markup($context);
    };
    
    /* Respond to the impending removal of content from the page.
     * 
     * Most behaviors that only attach event handlers to their own content are
     * safe and do not need to implement content removal support: they will
     * inherently "fall away".
     * 
     * However, behaviors that run a constant animation kernel or attach event
     * handlers to elements outside of their own ownership must provide a
     * mechanism to detach those event handlers and stop those kernels.
     */
    Behavior.content_removal = function ($context) {
        var Class = this,
            $attached_elems = $context.find(Class.QUERY);
        
        //Iterate through each element and see if our behavior has located upon
        //them. We don't just call .find_markup/.locate since we don't want to
        //risk initializing something just to tear it down one cycle later.
        $attached_elems.each(function (index, attach_elem) {
            var $elem = $(attach_elem),
                rc = $elem.data("behaviors-registered-classes");
            
            if (rc === undefined) {
                return;
            }
            
            if (rc[Class.QUERY] === undefined) {
                return;
            }
            
            if (rc[Class.QUERY].deinitialize === undefined) {
                return;
            }
            
            rc[Class.QUERY].deinitialize();
        });
    };

    /* Register a behavior so that it can respond to global events such as new
     * content becoming ready.
     *
     * It is not always appropriate to register your behavior to recieve load
     * events. Generally, if this is a behavior you would initialize yourself,
     * perhaps with special arguments, then you should not register that here.
     */
    function register_behavior(Class, name) {
        if (name === undefined) {
            name = Class.QUERY;
        }

        if (behavior_registry[name] === Class) {
            console.warn("Attempted to register the same behavior twice to the same CSS selector \"" + name + "\".");
            return;
        } else if (behavior_registry[name] !== undefined) {
            console.error("Attempted to register a second behavior onto CSS selector \""
                + name + "\". Only one behavior may be registered to a given CSS selector "
                + "at a given time. The offending classes are " + Class.name
                + " and " + behavior_registry[name].name + ".");
            
            return;
        }

        behavior_registry[name] = Class;
    }
    
    /* Register a function that is called when content is ready.
     * 
     * This function should only be used for things that are not a Behavior.
     * Proper behaviors should be registered using register_behavior for future
     * uses. Non-behavior listeners get registered here so that future uses of
     * behavior registration do not conflict with non-Behavior listeners.
     */
    function register_content_listener(func) {
        content_ready_listeners.push(func);
    }

    /* Indicate that some new content is ready.
     *
     * The given content will be passed onto all registered behaviors.
     *
     * CMS/frameworks with their own ready mechanism will need to ship their
     * own replacement/wrapper for this function that pushes calls to this
     * function over to that mechanism; and calls from that mechanism need to
     * come back here.
     */
    function content_ready($context) {
        var k, i;
        
        function do_later(obj, func) {
            window.setTimeout(func.bind(obj, $context), 0);
        }
        
        for (i = 0; i < content_ready_listeners.length; i += 1) {
            do_later(undefined, content_ready_listeners[i]);
        }

        for (k in behavior_registry) {
            if (behavior_registry.hasOwnProperty(k)) {
                do_later(behavior_registry[k], behavior_registry[k].content_ready);
            }
        }
    }
    
    /* Indicate that content is about to be removed.
     * 
     * Registered behaviors with destructors will be called upon to remove any
     * external event handlers or animation kernels preventing them from being
     * terminated by the JS runtime.
     * 
     * TODO: Add content_removal listener functions.
     */
    function content_removal($context) {
        var k, i;
        
        function do_later(obj, func) {
            window.setTimeout(func.bind(obj, $context), 0);
        }
        
        for (k in behavior_registry) {
            if (behavior_registry.hasOwnProperty(k)) {
                do_later(behavior_registry[k], behavior_registry[k].content_removal);
            }
        }
    }
    
    function error(error_class_name, ParentClass) {
        if (error_class_name === undefined) {
            throw new Error("Please name your error subclass.");
        }

        if (!(ParentClass instanceof Function)) {
            ParentClass = Error;
        }

        var SubError = function (message) {
            var err = new Error(message);
            err.name = error_class_name;

            this.name = error_class_name;
            this.message = err.message;
            if (err.stack) {
                this.stack = err.stack;
            }
        };

        SubError.prototype = new ParentClass("u dont c me");
        SubError.prototype.constructor = SubError;
        SubError.prototype.name = error_class_name;

        delete SubError.prototype.stack;

        return SubError;
    }
    
    function inherit(ChildClass, ParentClass) {
        var k;

        //Use the prototyping system to copy methods from parent to child.
        ChildClass.prototype = Object.create(ParentClass.prototype);
        ChildClass.prototype.constructor = ChildClass;
        ChildClass.prototype.parent = ParentClass.prototype;

        //Manually copy class-level methods from parent to child.
        for (k in ParentClass) {
            if (ParentClass.hasOwnProperty(k)) {
                ChildClass[k] = ParentClass[k];
            }
        }
    }

    function init(ChildClass, object, args) {
        ChildClass.prototype.parent.constructor.apply(object, args);
    }
    
    /* By default, report the initial page load to registered behaviors.
     */
    $(document).ready(function () {
        content_ready($(document));
    });
    
    module.ElementMissingError = ElementMissingError;
    module.throttle_single = throttle_single;
    module.Behavior = Behavior;
    module.error = error;
    module.inherit = inherit;
    module.init = init;
    module.register_behavior = register_behavior;
    module.content_ready = content_ready;
    module.content_removal = content_removal;
    module.register_content_listener = register_content_listener;

    return module;
}));

(window.Behaviors.Hooks = function(Behaviors, $) {
    "use strict";

    /**
     * Manages global hooks for behaviors.
     * 
     * A global hook is not tied to any specific instance of a behavior; unlike
     * events. You add hooks to your behavior by adding one as a property of
     * your class, defining it's hook types, and triggering them in your
     * behavior's methods. Third-party code can then hook into your class by
     * attaching to the class's global hooks mechanism.
     * 
     * Hooks are only to be used in cases where you don't particularly care
     * about *which* behavior you are talking to, only that you want to
     * intercept all of them. They are thus distinct from events, which are
     * fired on a specific behavior and can be used to link different, specific
     * behaviors.
     */
    function Hooks() {
        this.hooks = {};
    };

    /**
     * Define a hook name.
     * 
     * @param {string} hook_name The name of the hook to attach to.
     */
    Hooks.prototype.define_hook_type = function(hook_name) {
        if (!this.hooks.hasOwnProperty(hook_name)) {
            this.hooks[hook_name] = [];
        }
    }

    /**
     * An attached hook callback. Can optionally filter the hook's inherent
     * value.
     * 
     * @callback AttachedHook
     * @param {*} value The inherent hook value, which depends on which hook is
     * being attached.
     * 
     * May have already been filtered by a previously installed hook function.
     * 
     * @param {...*} context Any further context values.
     * 
     * These are always the hook's inherent values and cannot be filtered by
     * user code. By convention, the first context value is the hooked
     * Behavior instance.
     * 
     * @returns The filtered value.
     * 
     * Returning `undefined` (either explicitly, or by not having a `return`
     * statement in your function) indicates that your hook does not wish to
     * change the value.
     */

    /**
     * Attach to a particular named hook.
     * 
     * @param {string} hook_name The name of the hook to attach to.
     * @param {AttachedHook} impl The instance to be called at hook time.
     * @throws Error if the `hook_name` is invalid.
     */
    Hooks.prototype.attach = function(hook_name, impl) {
        this.hooks[hook_name].push(impl);
    }

    /**
     * Trigger a given named hook.
     * 
     * @param {string} hook_name The hook to trigger.
     * @param {*} value The hook value, which hook functions will be expected
     * to modify.
     * @param {Behaviors.Behavior} instance The current behavior being hooked.
     * @param {*} * 
     * @returns The hook value, optionally modified by any attached hooks.
     */
    Hooks.prototype.trigger = function(hook_name, value, instance) {
        var i, new_value, context = [value, instance];
        for (i = 3; i < arguments.length; i += 1) {
            context.push(arguments[i]);
        }

        for (i = 0; i < this.hooks[hook_name].length; i += 1) {
            new_value = this.hooks[hook_name][i].apply(this, context);
            if (new_value !== undefined) {
                context[0] = new_value;
            }
        }

        return context[0];
    }

    return Hooks;
}(window.Behaviors,
    window.jQuery));
(function () {
  var MutationObserver,
    Util,
    WeakMap,
    getComputedStyle,
    getComputedStyleRX,
    bind = function (fn, me) {
      return function () {
        return fn.apply(me, arguments);
      };
    },
    indexOf =
      [].indexOf ||
      function (item) {
        for (var i = 0, l = this.length; i < l; i++) {
          if (i in this && this[i] === item) return i;
        }
        return -1;
      };

  Util = (function () {
    function Util() {}

    Util.prototype.extend = function (custom, defaults) {
      var key, value;
      for (key in defaults) {
        value = defaults[key];
        if (custom[key] == null) {
          custom[key] = value;
        }
      }
      return custom;
    };

    Util.prototype.isMobile = function (agent) {
      return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
        agent
      );
    };

    Util.prototype.createEvent = function (event, bubble, cancel, detail) {
      var customEvent;
      if (bubble == null) {
        bubble = false;
      }
      if (cancel == null) {
        cancel = false;
      }
      if (detail == null) {
        detail = null;
      }
      if (document.createEvent != null) {
        customEvent = document.createEvent("CustomEvent");
        customEvent.initCustomEvent(event, bubble, cancel, detail);
      } else if (document.createEventObject != null) {
        customEvent = document.createEventObject();
        customEvent.eventType = event;
      } else {
        customEvent.eventName = event;
      }
      return customEvent;
    };

    Util.prototype.emitEvent = function (elem, event) {
      if (elem.dispatchEvent != null) {
        return elem.dispatchEvent(event);
      } else if (event in (elem != null)) {
        return elem[event]();
      } else if ("on" + event in (elem != null)) {
        return elem["on" + event]();
      }
    };

    Util.prototype.addEvent = function (elem, event, fn) {
      if (elem.addEventListener != null) {
        return elem.addEventListener(event, fn, false);
      } else if (elem.attachEvent != null) {
        return elem.attachEvent("on" + event, fn);
      } else {
        return (elem[event] = fn);
      }
    };

    Util.prototype.removeEvent = function (elem, event, fn) {
      if (elem.removeEventListener != null) {
        return elem.removeEventListener(event, fn, false);
      } else if (elem.detachEvent != null) {
        return elem.detachEvent("on" + event, fn);
      } else {
        return delete elem[event];
      }
    };

    Util.prototype.innerHeight = function () {
      if ("innerHeight" in window) {
        return window.innerHeight;
      } else {
        return document.documentElement.clientHeight;
      }
    };

    return Util;
  })();

  WeakMap =
    this.WeakMap ||
    this.MozWeakMap ||
    (WeakMap = (function () {
      function WeakMap() {
        this.keys = [];
        this.values = [];
      }

      WeakMap.prototype.get = function (key) {
        var i, item, j, len, ref;
        ref = this.keys;
        for (i = j = 0, len = ref.length; j < len; i = ++j) {
          item = ref[i];
          if (item === key) {
            return this.values[i];
          }
        }
      };

      WeakMap.prototype.set = function (key, value) {
        var i, item, j, len, ref;
        ref = this.keys;
        for (i = j = 0, len = ref.length; j < len; i = ++j) {
          item = ref[i];
          if (item === key) {
            this.values[i] = value;
            return;
          }
        }
        this.keys.push(key);
        return this.values.push(value);
      };

      return WeakMap;
    })());

  MutationObserver =
    this.MutationObserver ||
    this.WebkitMutationObserver ||
    this.MozMutationObserver ||
    (MutationObserver = (function () {
      function MutationObserver() {
        if (typeof console !== "undefined" && console !== null) {
          console.warn("MutationObserver is not supported by your browser.");
        }
        if (typeof console !== "undefined" && console !== null) {
          console.warn(
            "WOW.js cannot detect dom mutations, please call .sync() after loading new content."
          );
        }
      }

      MutationObserver.notSupported = true;

      MutationObserver.prototype.observe = function () {};

      return MutationObserver;
    })());

  getComputedStyle =
    this.getComputedStyle ||
    function (el, pseudo) {
      this.getPropertyValue = function (prop) {
        var ref;
        if (prop === "float") {
          prop = "styleFloat";
        }
        if (getComputedStyleRX.test(prop)) {
          prop.replace(getComputedStyleRX, function (_, _char) {
            return _char.toUpperCase();
          });
        }
        return ((ref = el.currentStyle) != null ? ref[prop] : void 0) || null;
      };
      return this;
    };

  getComputedStyleRX = /(\-([a-z]){1})/g;

  this.WOW = (function () {
    WOW.prototype.defaults = {
      boxClass: "wow",
      animateClass: "animated",
      offset: 0,
      mobile: true,
      live: true,
      callback: null,
      scrollContainer: null,
    };

    function WOW(options) {
      if (options == null) {
        options = {};
      }
      this.scrollCallback = bind(this.scrollCallback, this);
      this.scrollHandler = bind(this.scrollHandler, this);
      this.resetAnimation = bind(this.resetAnimation, this);
      this.start = bind(this.start, this);
      this.scrolled = true;
      this.config = this.util().extend(options, this.defaults);
      if (options.scrollContainer != null) {
        this.config.scrollContainer = document.querySelector(
          options.scrollContainer
        );
      }
      this.animationNameCache = new WeakMap();
      this.wowEvent = this.util().createEvent(this.config.boxClass);
    }

    WOW.prototype.init = function () {
      var ref;
      this.element = window.document.documentElement;
      if ((ref = document.readyState) === "interactive" || ref === "complete") {
        this.start();
      } else {
        this.util().addEvent(document, "DOMContentLoaded", this.start);
      }
      return (this.finished = []);
    };

    WOW.prototype.start = function () {
      var box, j, len, ref;
      this.stopped = false;
      this.boxes = function () {
        var j, len, ref, results;
        ref = this.element.querySelectorAll("." + this.config.boxClass);
        results = [];
        for (j = 0, len = ref.length; j < len; j++) {
          box = ref[j];
          results.push(box);
        }
        return results;
      }.call(this);
      this.all = function () {
        var j, len, ref, results;
        ref = this.boxes;
        results = [];
        for (j = 0, len = ref.length; j < len; j++) {
          box = ref[j];
          results.push(box);
        }
        return results;
      }.call(this);
      if (this.boxes.length) {
        if (this.disabled()) {
          this.resetStyle();
        } else {
          ref = this.boxes;
          for (j = 0, len = ref.length; j < len; j++) {
            box = ref[j];
            this.applyStyle(box, true);
          }
        }
      }
      if (!this.disabled()) {
        this.util().addEvent(
          this.config.scrollContainer || window,
          "scroll",
          this.scrollHandler
        );
        this.util().addEvent(window, "resize", this.scrollHandler);
        this.interval = setInterval(this.scrollCallback, 50);
      }
      if (this.config.live) {
        return new MutationObserver(
          (function (_this) {
            return function (records) {
              var k, len1, node, record, results;
              results = [];
              for (k = 0, len1 = records.length; k < len1; k++) {
                record = records[k];
                results.push(
                  function () {
                    var l, len2, ref1, results1;
                    ref1 = record.addedNodes || [];
                    results1 = [];
                    for (l = 0, len2 = ref1.length; l < len2; l++) {
                      node = ref1[l];
                      results1.push(this.doSync(node));
                    }
                    return results1;
                  }.call(_this)
                );
              }
              return results;
            };
          })(this)
        ).observe(document.body, {
          childList: true,
          subtree: true,
        });
      }
    };

    WOW.prototype.stop = function () {
      this.stopped = true;
      this.util().removeEvent(
        this.config.scrollContainer || window,
        "scroll",
        this.scrollHandler
      );
      this.util().removeEvent(window, "resize", this.scrollHandler);
      if (this.interval != null) {
        return clearInterval(this.interval);
      }
    };

    WOW.prototype.sync = function (element) {
      if (MutationObserver.notSupported) {
        return this.doSync(this.element);
      }
    };

    WOW.prototype.doSync = function (element) {
      var box, j, len, ref, results;
      if (element == null) {
        element = this.element;
      }
      if (element.nodeType !== 1) {
        return;
      }
      element = element.parentNode || element;
      ref = element.querySelectorAll("." + this.config.boxClass);
      results = [];
      for (j = 0, len = ref.length; j < len; j++) {
        box = ref[j];
        if (indexOf.call(this.all, box) < 0) {
          this.boxes.push(box);
          this.all.push(box);
          if (this.stopped || this.disabled()) {
            this.resetStyle();
          } else {
            this.applyStyle(box, true);
          }
          results.push((this.scrolled = true));
        } else {
          results.push(void 0);
        }
      }
      return results;
    };

    WOW.prototype.show = function (box) {
      this.applyStyle(box);
      box.className = box.className + " " + this.config.animateClass;
      if (this.config.callback != null) {
        this.config.callback(box);
      }
      this.util().emitEvent(box, this.wowEvent);
      this.util().addEvent(box, "animationend", this.resetAnimation);
      this.util().addEvent(box, "oanimationend", this.resetAnimation);
      this.util().addEvent(box, "webkitAnimationEnd", this.resetAnimation);
      this.util().addEvent(box, "MSAnimationEnd", this.resetAnimation);
      return box;
    };

    WOW.prototype.applyStyle = function (box, hidden) {
      var delay, duration, iteration;
      duration = box.getAttribute("data-wow-duration");
      delay = box.getAttribute("data-wow-delay");
      iteration = box.getAttribute("data-wow-iteration");
      return this.animate(
        (function (_this) {
          return function () {
            return _this.customStyle(box, hidden, duration, delay, iteration);
          };
        })(this)
      );
    };

    WOW.prototype.animate = (function () {
      if ("requestAnimationFrame" in window) {
        return function (callback) {
          return window.requestAnimationFrame(callback);
        };
      } else {
        return function (callback) {
          return callback();
        };
      }
    })();

    WOW.prototype.resetStyle = function () {
      var box, j, len, ref, results;
      ref = this.boxes;
      results = [];
      for (j = 0, len = ref.length; j < len; j++) {
        box = ref[j];
        results.push((box.style.visibility = "visible"));
      }
      return results;
    };

    WOW.prototype.resetAnimation = function (event) {
      var target;
      if (event.type.toLowerCase().indexOf("animationend") >= 0) {
        target = event.target || event.srcElement;
        return (target.className = target.className
          .replace(this.config.animateClass, "")
          .trim());
      }
    };

    WOW.prototype.customStyle = function (
      box,
      hidden,
      duration,
      delay,
      iteration
    ) {
      if (hidden) {
        this.cacheAnimationName(box);
      }
      box.style.visibility = hidden ? "hidden" : "visible";
      if (duration) {
        this.vendorSet(box.style, {
          animationDuration: duration,
        });
      }
      if (delay) {
        this.vendorSet(box.style, {
          animationDelay: delay,
        });
      }
      if (iteration) {
        this.vendorSet(box.style, {
          animationIterationCount: iteration,
        });
      }
      this.vendorSet(box.style, {
        animationName: hidden ? "none" : this.cachedAnimationName(box),
      });
      return box;
    };

    WOW.prototype.vendors = ["moz", "webkit"];

    WOW.prototype.vendorSet = function (elem, properties) {
      var name, results, value, vendor;
      results = [];
      for (name in properties) {
        value = properties[name];
        elem["" + name] = value;
        results.push(
          function () {
            var j, len, ref, results1;
            ref = this.vendors;
            results1 = [];
            for (j = 0, len = ref.length; j < len; j++) {
              vendor = ref[j];
              results1.push(
                (elem[
                  "" + vendor + name.charAt(0).toUpperCase() + name.substr(1)
                ] = value)
              );
            }
            return results1;
          }.call(this)
        );
      }
      return results;
    };

    WOW.prototype.vendorCSS = function (elem, property) {
      var j, len, ref, result, style, vendor;
      style = getComputedStyle(elem);
      result = style.getPropertyCSSValue(property);
      ref = this.vendors;
      for (j = 0, len = ref.length; j < len; j++) {
        vendor = ref[j];
        result =
          result || style.getPropertyCSSValue("-" + vendor + "-" + property);
      }
      return result;
    };

    WOW.prototype.animationName = function (box) {
      var animationName;
      try {
        animationName = this.vendorCSS(box, "animation-name").cssText;
      } catch (_error) {
        animationName = getComputedStyle(box).getPropertyValue(
          "animation-name"
        );
      }
      if (animationName === "none") {
        return "";
      } else {
        return animationName;
      }
    };

    WOW.prototype.cacheAnimationName = function (box) {
      return this.animationNameCache.set(box, this.animationName(box));
    };

    WOW.prototype.cachedAnimationName = function (box) {
      return this.animationNameCache.get(box);
    };

    WOW.prototype.scrollHandler = function () {
      return (this.scrolled = true);
    };

    WOW.prototype.scrollCallback = function () {
      var box;
      if (this.scrolled) {
        this.scrolled = false;
        this.boxes = function () {
          var j, len, ref, results;
          ref = this.boxes;
          results = [];
          for (j = 0, len = ref.length; j < len; j++) {
            box = ref[j];
            if (!box) {
              continue;
            }
            if (this.isVisible(box)) {
              this.show(box);
              continue;
            }
            results.push(box);
          }
          return results;
        }.call(this);
        if (!(this.boxes.length || this.config.live)) {
          return this.stop();
        }
      }
    };

    WOW.prototype.offsetTop = function (element) {
      var top;
      while (element.offsetTop === void 0) {
        element = element.parentNode;
      }
      top = element.offsetTop;
      while ((element = element.offsetParent)) {
        top += element.offsetTop;
      }
      return top;
    };

    WOW.prototype.isVisible = function (box) {
      var bottom, offset, top, viewBottom, viewTop;
      offset = box.getAttribute("data-wow-offset") || this.config.offset;
      viewTop =
        (this.config.scrollContainer &&
          this.config.scrollContainer.scrollTop) ||
        window.pageYOffset;
      viewBottom =
        viewTop +
        Math.min(this.element.clientHeight, this.util().innerHeight()) -
        offset;
      top = this.offsetTop(box);
      bottom = top + box.clientHeight;
      return top <= viewBottom && bottom >= viewTop;
    };

    WOW.prototype.util = function () {
      return this._util != null ? this._util : (this._util = new Util());
    };

    WOW.prototype.disabled = function () {
      return !this.config.mobile && this.util().isMobile(navigator.userAgent);
    };

    return WOW;
  })();
}.call(this));

/**
 * Swiper 5.4.1
 * Most modern mobile touch slider and framework with hardware accelerated transitions
 * http://swiperjs.com
 *
 * Copyright 2014-2020 Vladimir Kharlampidi
 *
 * Released under the MIT License
 *
 * Released on: May 20, 2020
 */

!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).Swiper=t()}(this,(function(){"use strict";function e(e){return null!==e&&"object"==typeof e&&"constructor"in e&&e.constructor===Object}function t(i,s){void 0===i&&(i={}),void 0===s&&(s={}),Object.keys(s).forEach((function(a){void 0===i[a]?i[a]=s[a]:e(s[a])&&e(i[a])&&Object.keys(s[a]).length>0&&t(i[a],s[a])}))}var i="undefined"!=typeof document?document:{},s={body:{},addEventListener:function(){},removeEventListener:function(){},activeElement:{blur:function(){},nodeName:""},querySelector:function(){return null},querySelectorAll:function(){return[]},getElementById:function(){return null},createEvent:function(){return{initEvent:function(){}}},createElement:function(){return{children:[],childNodes:[],style:{},setAttribute:function(){},getElementsByTagName:function(){return[]}}},createElementNS:function(){return{}},importNode:function(){return null},location:{hash:"",host:"",hostname:"",href:"",origin:"",pathname:"",protocol:"",search:""}};t(i,s);var a="undefined"!=typeof window?window:{};t(a,{document:s,navigator:{userAgent:""},location:{hash:"",host:"",hostname:"",href:"",origin:"",pathname:"",protocol:"",search:""},history:{replaceState:function(){},pushState:function(){},go:function(){},back:function(){}},CustomEvent:function(){return this},addEventListener:function(){},removeEventListener:function(){},getComputedStyle:function(){return{getPropertyValue:function(){return""}}},Image:function(){},Date:function(){},screen:{},setTimeout:function(){},clearTimeout:function(){},matchMedia:function(){return{}}});var r=function(e){for(var t=0;t<e.length;t+=1)this[t]=e[t];return this.length=e.length,this};function n(e,t){var s=[],n=0;if(e&&!t&&e instanceof r)return e;if(e)if("string"==typeof e){var o,l,d=e.trim();if(d.indexOf("<")>=0&&d.indexOf(">")>=0){var h="div";for(0===d.indexOf("<li")&&(h="ul"),0===d.indexOf("<tr")&&(h="tbody"),0!==d.indexOf("<td")&&0!==d.indexOf("<th")||(h="tr"),0===d.indexOf("<tbody")&&(h="table"),0===d.indexOf("<option")&&(h="select"),(l=i.createElement(h)).innerHTML=d,n=0;n<l.childNodes.length;n+=1)s.push(l.childNodes[n])}else for(o=t||"#"!==e[0]||e.match(/[ .<>:~]/)?(t||i).querySelectorAll(e.trim()):[i.getElementById(e.trim().split("#")[1])],n=0;n<o.length;n+=1)o[n]&&s.push(o[n])}else if(e.nodeType||e===a||e===i)s.push(e);else if(e.length>0&&e[0].nodeType)for(n=0;n<e.length;n+=1)s.push(e[n]);return new r(s)}function o(e){for(var t=[],i=0;i<e.length;i+=1)-1===t.indexOf(e[i])&&t.push(e[i]);return t}n.fn=r.prototype,n.Class=r,n.Dom7=r;var l={addClass:function(e){if(void 0===e)return this;for(var t=e.split(" "),i=0;i<t.length;i+=1)for(var s=0;s<this.length;s+=1)void 0!==this[s]&&void 0!==this[s].classList&&this[s].classList.add(t[i]);return this},removeClass:function(e){for(var t=e.split(" "),i=0;i<t.length;i+=1)for(var s=0;s<this.length;s+=1)void 0!==this[s]&&void 0!==this[s].classList&&this[s].classList.remove(t[i]);return this},hasClass:function(e){return!!this[0]&&this[0].classList.contains(e)},toggleClass:function(e){for(var t=e.split(" "),i=0;i<t.length;i+=1)for(var s=0;s<this.length;s+=1)void 0!==this[s]&&void 0!==this[s].classList&&this[s].classList.toggle(t[i]);return this},attr:function(e,t){var i=arguments;if(1===arguments.length&&"string"==typeof e)return this[0]?this[0].getAttribute(e):void 0;for(var s=0;s<this.length;s+=1)if(2===i.length)this[s].setAttribute(e,t);else for(var a in e)this[s][a]=e[a],this[s].setAttribute(a,e[a]);return this},removeAttr:function(e){for(var t=0;t<this.length;t+=1)this[t].removeAttribute(e);return this},data:function(e,t){var i;if(void 0!==t){for(var s=0;s<this.length;s+=1)(i=this[s]).dom7ElementDataStorage||(i.dom7ElementDataStorage={}),i.dom7ElementDataStorage[e]=t;return this}if(i=this[0]){if(i.dom7ElementDataStorage&&e in i.dom7ElementDataStorage)return i.dom7ElementDataStorage[e];var a=i.getAttribute("data-"+e);return a||void 0}},transform:function(e){for(var t=0;t<this.length;t+=1){var i=this[t].style;i.webkitTransform=e,i.transform=e}return this},transition:function(e){"string"!=typeof e&&(e+="ms");for(var t=0;t<this.length;t+=1){var i=this[t].style;i.webkitTransitionDuration=e,i.transitionDuration=e}return this},on:function(){for(var e,t=[],i=arguments.length;i--;)t[i]=arguments[i];var s=t[0],a=t[1],r=t[2],o=t[3];function l(e){var t=e.target;if(t){var i=e.target.dom7EventData||[];if(i.indexOf(e)<0&&i.unshift(e),n(t).is(a))r.apply(t,i);else for(var s=n(t).parents(),o=0;o<s.length;o+=1)n(s[o]).is(a)&&r.apply(s[o],i)}}function d(e){var t=e&&e.target&&e.target.dom7EventData||[];t.indexOf(e)<0&&t.unshift(e),r.apply(this,t)}"function"==typeof t[1]&&(s=(e=t)[0],r=e[1],o=e[2],a=void 0),o||(o=!1);for(var h,p=s.split(" "),c=0;c<this.length;c+=1){var u=this[c];if(a)for(h=0;h<p.length;h+=1){var v=p[h];u.dom7LiveListeners||(u.dom7LiveListeners={}),u.dom7LiveListeners[v]||(u.dom7LiveListeners[v]=[]),u.dom7LiveListeners[v].push({listener:r,proxyListener:l}),u.addEventListener(v,l,o)}else for(h=0;h<p.length;h+=1){var f=p[h];u.dom7Listeners||(u.dom7Listeners={}),u.dom7Listeners[f]||(u.dom7Listeners[f]=[]),u.dom7Listeners[f].push({listener:r,proxyListener:d}),u.addEventListener(f,d,o)}}return this},off:function(){for(var e,t=[],i=arguments.length;i--;)t[i]=arguments[i];var s=t[0],a=t[1],r=t[2],n=t[3];"function"==typeof t[1]&&(s=(e=t)[0],r=e[1],n=e[2],a=void 0),n||(n=!1);for(var o=s.split(" "),l=0;l<o.length;l+=1)for(var d=o[l],h=0;h<this.length;h+=1){var p=this[h],c=void 0;if(!a&&p.dom7Listeners?c=p.dom7Listeners[d]:a&&p.dom7LiveListeners&&(c=p.dom7LiveListeners[d]),c&&c.length)for(var u=c.length-1;u>=0;u-=1){var v=c[u];r&&v.listener===r||r&&v.listener&&v.listener.dom7proxy&&v.listener.dom7proxy===r?(p.removeEventListener(d,v.proxyListener,n),c.splice(u,1)):r||(p.removeEventListener(d,v.proxyListener,n),c.splice(u,1))}}return this},trigger:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];for(var s=e[0].split(" "),r=e[1],n=0;n<s.length;n+=1)for(var o=s[n],l=0;l<this.length;l+=1){var d=this[l],h=void 0;try{h=new a.CustomEvent(o,{detail:r,bubbles:!0,cancelable:!0})}catch(e){(h=i.createEvent("Event")).initEvent(o,!0,!0),h.detail=r}d.dom7EventData=e.filter((function(e,t){return t>0})),d.dispatchEvent(h),d.dom7EventData=[],delete d.dom7EventData}return this},transitionEnd:function(e){var t,i=["webkitTransitionEnd","transitionend"],s=this;function a(r){if(r.target===this)for(e.call(this,r),t=0;t<i.length;t+=1)s.off(i[t],a)}if(e)for(t=0;t<i.length;t+=1)s.on(i[t],a);return this},outerWidth:function(e){if(this.length>0){if(e){var t=this.styles();return this[0].offsetWidth+parseFloat(t.getPropertyValue("margin-right"))+parseFloat(t.getPropertyValue("margin-left"))}return this[0].offsetWidth}return null},outerHeight:function(e){if(this.length>0){if(e){var t=this.styles();return this[0].offsetHeight+parseFloat(t.getPropertyValue("margin-top"))+parseFloat(t.getPropertyValue("margin-bottom"))}return this[0].offsetHeight}return null},offset:function(){if(this.length>0){var e=this[0],t=e.getBoundingClientRect(),s=i.body,r=e.clientTop||s.clientTop||0,n=e.clientLeft||s.clientLeft||0,o=e===a?a.scrollY:e.scrollTop,l=e===a?a.scrollX:e.scrollLeft;return{top:t.top+o-r,left:t.left+l-n}}return null},css:function(e,t){var i;if(1===arguments.length){if("string"!=typeof e){for(i=0;i<this.length;i+=1)for(var s in e)this[i].style[s]=e[s];return this}if(this[0])return a.getComputedStyle(this[0],null).getPropertyValue(e)}if(2===arguments.length&&"string"==typeof e){for(i=0;i<this.length;i+=1)this[i].style[e]=t;return this}return this},each:function(e){if(!e)return this;for(var t=0;t<this.length;t+=1)if(!1===e.call(this[t],t,this[t]))return this;return this},html:function(e){if(void 0===e)return this[0]?this[0].innerHTML:void 0;for(var t=0;t<this.length;t+=1)this[t].innerHTML=e;return this},text:function(e){if(void 0===e)return this[0]?this[0].textContent.trim():null;for(var t=0;t<this.length;t+=1)this[t].textContent=e;return this},is:function(e){var t,s,o=this[0];if(!o||void 0===e)return!1;if("string"==typeof e){if(o.matches)return o.matches(e);if(o.webkitMatchesSelector)return o.webkitMatchesSelector(e);if(o.msMatchesSelector)return o.msMatchesSelector(e);for(t=n(e),s=0;s<t.length;s+=1)if(t[s]===o)return!0;return!1}if(e===i)return o===i;if(e===a)return o===a;if(e.nodeType||e instanceof r){for(t=e.nodeType?[e]:e,s=0;s<t.length;s+=1)if(t[s]===o)return!0;return!1}return!1},index:function(){var e,t=this[0];if(t){for(e=0;null!==(t=t.previousSibling);)1===t.nodeType&&(e+=1);return e}},eq:function(e){if(void 0===e)return this;var t,i=this.length;return new r(e>i-1?[]:e<0?(t=i+e)<0?[]:[this[t]]:[this[e]])},append:function(){for(var e,t=[],s=arguments.length;s--;)t[s]=arguments[s];for(var a=0;a<t.length;a+=1){e=t[a];for(var n=0;n<this.length;n+=1)if("string"==typeof e){var o=i.createElement("div");for(o.innerHTML=e;o.firstChild;)this[n].appendChild(o.firstChild)}else if(e instanceof r)for(var l=0;l<e.length;l+=1)this[n].appendChild(e[l]);else this[n].appendChild(e)}return this},prepend:function(e){var t,s;for(t=0;t<this.length;t+=1)if("string"==typeof e){var a=i.createElement("div");for(a.innerHTML=e,s=a.childNodes.length-1;s>=0;s-=1)this[t].insertBefore(a.childNodes[s],this[t].childNodes[0])}else if(e instanceof r)for(s=0;s<e.length;s+=1)this[t].insertBefore(e[s],this[t].childNodes[0]);else this[t].insertBefore(e,this[t].childNodes[0]);return this},next:function(e){return this.length>0?e?this[0].nextElementSibling&&n(this[0].nextElementSibling).is(e)?new r([this[0].nextElementSibling]):new r([]):this[0].nextElementSibling?new r([this[0].nextElementSibling]):new r([]):new r([])},nextAll:function(e){var t=[],i=this[0];if(!i)return new r([]);for(;i.nextElementSibling;){var s=i.nextElementSibling;e?n(s).is(e)&&t.push(s):t.push(s),i=s}return new r(t)},prev:function(e){if(this.length>0){var t=this[0];return e?t.previousElementSibling&&n(t.previousElementSibling).is(e)?new r([t.previousElementSibling]):new r([]):t.previousElementSibling?new r([t.previousElementSibling]):new r([])}return new r([])},prevAll:function(e){var t=[],i=this[0];if(!i)return new r([]);for(;i.previousElementSibling;){var s=i.previousElementSibling;e?n(s).is(e)&&t.push(s):t.push(s),i=s}return new r(t)},parent:function(e){for(var t=[],i=0;i<this.length;i+=1)null!==this[i].parentNode&&(e?n(this[i].parentNode).is(e)&&t.push(this[i].parentNode):t.push(this[i].parentNode));return n(o(t))},parents:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var s=this[i].parentNode;s;)e?n(s).is(e)&&t.push(s):t.push(s),s=s.parentNode;return n(o(t))},closest:function(e){var t=this;return void 0===e?new r([]):(t.is(e)||(t=t.parents(e).eq(0)),t)},find:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var s=this[i].querySelectorAll(e),a=0;a<s.length;a+=1)t.push(s[a]);return new r(t)},children:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var s=this[i].childNodes,a=0;a<s.length;a+=1)e?1===s[a].nodeType&&n(s[a]).is(e)&&t.push(s[a]):1===s[a].nodeType&&t.push(s[a]);return new r(o(t))},filter:function(e){for(var t=[],i=0;i<this.length;i+=1)e.call(this[i],i,this[i])&&t.push(this[i]);return new r(t)},remove:function(){for(var e=0;e<this.length;e+=1)this[e].parentNode&&this[e].parentNode.removeChild(this[e]);return this},add:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i,s,a=this;for(i=0;i<e.length;i+=1){var r=n(e[i]);for(s=0;s<r.length;s+=1)a[a.length]=r[s],a.length+=1}return a},styles:function(){return this[0]?a.getComputedStyle(this[0],null):{}}};Object.keys(l).forEach((function(e){n.fn[e]=n.fn[e]||l[e]}));var d={deleteProps:function(e){var t=e;Object.keys(t).forEach((function(e){try{t[e]=null}catch(e){}try{delete t[e]}catch(e){}}))},nextTick:function(e,t){return void 0===t&&(t=0),setTimeout(e,t)},now:function(){return Date.now()},getTranslate:function(e,t){var i,s,r;void 0===t&&(t="x");var n=a.getComputedStyle(e,null);return a.WebKitCSSMatrix?((s=n.transform||n.webkitTransform).split(",").length>6&&(s=s.split(", ").map((function(e){return e.replace(",",".")})).join(", ")),r=new a.WebKitCSSMatrix("none"===s?"":s)):i=(r=n.MozTransform||n.OTransform||n.MsTransform||n.msTransform||n.transform||n.getPropertyValue("transform").replace("translate(","matrix(1, 0, 0, 1,")).toString().split(","),"x"===t&&(s=a.WebKitCSSMatrix?r.m41:16===i.length?parseFloat(i[12]):parseFloat(i[4])),"y"===t&&(s=a.WebKitCSSMatrix?r.m42:16===i.length?parseFloat(i[13]):parseFloat(i[5])),s||0},parseUrlQuery:function(e){var t,i,s,r,n={},o=e||a.location.href;if("string"==typeof o&&o.length)for(r=(i=(o=o.indexOf("?")>-1?o.replace(/\S*\?/,""):"").split("&").filter((function(e){return""!==e}))).length,t=0;t<r;t+=1)s=i[t].replace(/#\S+/g,"").split("="),n[decodeURIComponent(s[0])]=void 0===s[1]?void 0:decodeURIComponent(s[1])||"";return n},isObject:function(e){return"object"==typeof e&&null!==e&&e.constructor&&e.constructor===Object},extend:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];for(var i=Object(e[0]),s=1;s<e.length;s+=1){var a=e[s];if(null!=a)for(var r=Object.keys(Object(a)),n=0,o=r.length;n<o;n+=1){var l=r[n],h=Object.getOwnPropertyDescriptor(a,l);void 0!==h&&h.enumerable&&(d.isObject(i[l])&&d.isObject(a[l])?d.extend(i[l],a[l]):!d.isObject(i[l])&&d.isObject(a[l])?(i[l]={},d.extend(i[l],a[l])):i[l]=a[l])}}return i}},h={touch:!!("ontouchstart"in a||a.DocumentTouch&&i instanceof a.DocumentTouch),pointerEvents:!!a.PointerEvent&&"maxTouchPoints"in a.navigator&&a.navigator.maxTouchPoints>=0,observer:"MutationObserver"in a||"WebkitMutationObserver"in a,passiveListener:function(){var e=!1;try{var t=Object.defineProperty({},"passive",{get:function(){e=!0}});a.addEventListener("testPassiveListener",null,t)}catch(e){}return e}(),gestures:"ongesturestart"in a},p=function(e){void 0===e&&(e={});var t=this;t.params=e,t.eventsListeners={},t.params&&t.params.on&&Object.keys(t.params.on).forEach((function(e){t.on(e,t.params.on[e])}))},c={components:{configurable:!0}};p.prototype.on=function(e,t,i){var s=this;if("function"!=typeof t)return s;var a=i?"unshift":"push";return e.split(" ").forEach((function(e){s.eventsListeners[e]||(s.eventsListeners[e]=[]),s.eventsListeners[e][a](t)})),s},p.prototype.once=function(e,t,i){var s=this;if("function"!=typeof t)return s;function a(){for(var i=[],r=arguments.length;r--;)i[r]=arguments[r];s.off(e,a),a.f7proxy&&delete a.f7proxy,t.apply(s,i)}return a.f7proxy=t,s.on(e,a,i)},p.prototype.off=function(e,t){var i=this;return i.eventsListeners?(e.split(" ").forEach((function(e){void 0===t?i.eventsListeners[e]=[]:i.eventsListeners[e]&&i.eventsListeners[e].length&&i.eventsListeners[e].forEach((function(s,a){(s===t||s.f7proxy&&s.f7proxy===t)&&i.eventsListeners[e].splice(a,1)}))})),i):i},p.prototype.emit=function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i,s,a,r=this;if(!r.eventsListeners)return r;"string"==typeof e[0]||Array.isArray(e[0])?(i=e[0],s=e.slice(1,e.length),a=r):(i=e[0].events,s=e[0].data,a=e[0].context||r);var n=Array.isArray(i)?i:i.split(" ");return n.forEach((function(e){if(r.eventsListeners&&r.eventsListeners[e]){var t=[];r.eventsListeners[e].forEach((function(e){t.push(e)})),t.forEach((function(e){e.apply(a,s)}))}})),r},p.prototype.useModulesParams=function(e){var t=this;t.modules&&Object.keys(t.modules).forEach((function(i){var s=t.modules[i];s.params&&d.extend(e,s.params)}))},p.prototype.useModules=function(e){void 0===e&&(e={});var t=this;t.modules&&Object.keys(t.modules).forEach((function(i){var s=t.modules[i],a=e[i]||{};s.instance&&Object.keys(s.instance).forEach((function(e){var i=s.instance[e];t[e]="function"==typeof i?i.bind(t):i})),s.on&&t.on&&Object.keys(s.on).forEach((function(e){t.on(e,s.on[e])})),s.create&&s.create.bind(t)(a)}))},c.components.set=function(e){this.use&&this.use(e)},p.installModule=function(e){for(var t=[],i=arguments.length-1;i-- >0;)t[i]=arguments[i+1];var s=this;s.prototype.modules||(s.prototype.modules={});var a=e.name||Object.keys(s.prototype.modules).length+"_"+d.now();return s.prototype.modules[a]=e,e.proto&&Object.keys(e.proto).forEach((function(t){s.prototype[t]=e.proto[t]})),e.static&&Object.keys(e.static).forEach((function(t){s[t]=e.static[t]})),e.install&&e.install.apply(s,t),s},p.use=function(e){for(var t=[],i=arguments.length-1;i-- >0;)t[i]=arguments[i+1];var s=this;return Array.isArray(e)?(e.forEach((function(e){return s.installModule(e)})),s):s.installModule.apply(s,[e].concat(t))},Object.defineProperties(p,c);var u={updateSize:function(){var e,t,i=this.$el;e=void 0!==this.params.width?this.params.width:i[0].clientWidth,t=void 0!==this.params.height?this.params.height:i[0].clientHeight,0===e&&this.isHorizontal()||0===t&&this.isVertical()||(e=e-parseInt(i.css("padding-left"),10)-parseInt(i.css("padding-right"),10),t=t-parseInt(i.css("padding-top"),10)-parseInt(i.css("padding-bottom"),10),d.extend(this,{width:e,height:t,size:this.isHorizontal()?e:t}))},updateSlides:function(){var e=this.params,t=this.$wrapperEl,i=this.size,s=this.rtlTranslate,r=this.wrongRTL,n=this.virtual&&e.virtual.enabled,o=n?this.virtual.slides.length:this.slides.length,l=t.children("."+this.params.slideClass),h=n?this.virtual.slides.length:l.length,p=[],c=[],u=[];function v(t){return!e.cssMode||t!==l.length-1}var f=e.slidesOffsetBefore;"function"==typeof f&&(f=e.slidesOffsetBefore.call(this));var m=e.slidesOffsetAfter;"function"==typeof m&&(m=e.slidesOffsetAfter.call(this));var g=this.snapGrid.length,b=this.snapGrid.length,w=e.spaceBetween,y=-f,x=0,E=0;if(void 0!==i){var T,S;"string"==typeof w&&w.indexOf("%")>=0&&(w=parseFloat(w.replace("%",""))/100*i),this.virtualSize=-w,s?l.css({marginLeft:"",marginTop:""}):l.css({marginRight:"",marginBottom:""}),e.slidesPerColumn>1&&(T=Math.floor(h/e.slidesPerColumn)===h/this.params.slidesPerColumn?h:Math.ceil(h/e.slidesPerColumn)*e.slidesPerColumn,"auto"!==e.slidesPerView&&"row"===e.slidesPerColumnFill&&(T=Math.max(T,e.slidesPerView*e.slidesPerColumn)));for(var C,M=e.slidesPerColumn,P=T/M,z=Math.floor(h/e.slidesPerColumn),k=0;k<h;k+=1){S=0;var $=l.eq(k);if(e.slidesPerColumn>1){var L=void 0,I=void 0,O=void 0;if("row"===e.slidesPerColumnFill&&e.slidesPerGroup>1){var D=Math.floor(k/(e.slidesPerGroup*e.slidesPerColumn)),A=k-e.slidesPerColumn*e.slidesPerGroup*D,G=0===D?e.slidesPerGroup:Math.min(Math.ceil((h-D*M*e.slidesPerGroup)/M),e.slidesPerGroup);L=(I=A-(O=Math.floor(A/G))*G+D*e.slidesPerGroup)+O*T/M,$.css({"-webkit-box-ordinal-group":L,"-moz-box-ordinal-group":L,"-ms-flex-order":L,"-webkit-order":L,order:L})}else"column"===e.slidesPerColumnFill?(O=k-(I=Math.floor(k/M))*M,(I>z||I===z&&O===M-1)&&(O+=1)>=M&&(O=0,I+=1)):I=k-(O=Math.floor(k/P))*P;$.css("margin-"+(this.isHorizontal()?"top":"left"),0!==O&&e.spaceBetween&&e.spaceBetween+"px")}if("none"!==$.css("display")){if("auto"===e.slidesPerView){var H=a.getComputedStyle($[0],null),B=$[0].style.transform,N=$[0].style.webkitTransform;if(B&&($[0].style.transform="none"),N&&($[0].style.webkitTransform="none"),e.roundLengths)S=this.isHorizontal()?$.outerWidth(!0):$.outerHeight(!0);else if(this.isHorizontal()){var X=parseFloat(H.getPropertyValue("width")),V=parseFloat(H.getPropertyValue("padding-left")),Y=parseFloat(H.getPropertyValue("padding-right")),F=parseFloat(H.getPropertyValue("margin-left")),W=parseFloat(H.getPropertyValue("margin-right")),R=H.getPropertyValue("box-sizing");S=R&&"border-box"===R?X+F+W:X+V+Y+F+W}else{var q=parseFloat(H.getPropertyValue("height")),j=parseFloat(H.getPropertyValue("padding-top")),K=parseFloat(H.getPropertyValue("padding-bottom")),U=parseFloat(H.getPropertyValue("margin-top")),_=parseFloat(H.getPropertyValue("margin-bottom")),Z=H.getPropertyValue("box-sizing");S=Z&&"border-box"===Z?q+U+_:q+j+K+U+_}B&&($[0].style.transform=B),N&&($[0].style.webkitTransform=N),e.roundLengths&&(S=Math.floor(S))}else S=(i-(e.slidesPerView-1)*w)/e.slidesPerView,e.roundLengths&&(S=Math.floor(S)),l[k]&&(this.isHorizontal()?l[k].style.width=S+"px":l[k].style.height=S+"px");l[k]&&(l[k].swiperSlideSize=S),u.push(S),e.centeredSlides?(y=y+S/2+x/2+w,0===x&&0!==k&&(y=y-i/2-w),0===k&&(y=y-i/2-w),Math.abs(y)<.001&&(y=0),e.roundLengths&&(y=Math.floor(y)),E%e.slidesPerGroup==0&&p.push(y),c.push(y)):(e.roundLengths&&(y=Math.floor(y)),(E-Math.min(this.params.slidesPerGroupSkip,E))%this.params.slidesPerGroup==0&&p.push(y),c.push(y),y=y+S+w),this.virtualSize+=S+w,x=S,E+=1}}if(this.virtualSize=Math.max(this.virtualSize,i)+m,s&&r&&("slide"===e.effect||"coverflow"===e.effect)&&t.css({width:this.virtualSize+e.spaceBetween+"px"}),e.setWrapperSize&&(this.isHorizontal()?t.css({width:this.virtualSize+e.spaceBetween+"px"}):t.css({height:this.virtualSize+e.spaceBetween+"px"})),e.slidesPerColumn>1&&(this.virtualSize=(S+e.spaceBetween)*T,this.virtualSize=Math.ceil(this.virtualSize/e.slidesPerColumn)-e.spaceBetween,this.isHorizontal()?t.css({width:this.virtualSize+e.spaceBetween+"px"}):t.css({height:this.virtualSize+e.spaceBetween+"px"}),e.centeredSlides)){C=[];for(var Q=0;Q<p.length;Q+=1){var J=p[Q];e.roundLengths&&(J=Math.floor(J)),p[Q]<this.virtualSize+p[0]&&C.push(J)}p=C}if(!e.centeredSlides){C=[];for(var ee=0;ee<p.length;ee+=1){var te=p[ee];e.roundLengths&&(te=Math.floor(te)),p[ee]<=this.virtualSize-i&&C.push(te)}p=C,Math.floor(this.virtualSize-i)-Math.floor(p[p.length-1])>1&&p.push(this.virtualSize-i)}if(0===p.length&&(p=[0]),0!==e.spaceBetween&&(this.isHorizontal()?s?l.filter(v).css({marginLeft:w+"px"}):l.filter(v).css({marginRight:w+"px"}):l.filter(v).css({marginBottom:w+"px"})),e.centeredSlides&&e.centeredSlidesBounds){var ie=0;u.forEach((function(t){ie+=t+(e.spaceBetween?e.spaceBetween:0)}));var se=(ie-=e.spaceBetween)-i;p=p.map((function(e){return e<0?-f:e>se?se+m:e}))}if(e.centerInsufficientSlides){var ae=0;if(u.forEach((function(t){ae+=t+(e.spaceBetween?e.spaceBetween:0)})),(ae-=e.spaceBetween)<i){var re=(i-ae)/2;p.forEach((function(e,t){p[t]=e-re})),c.forEach((function(e,t){c[t]=e+re}))}}d.extend(this,{slides:l,snapGrid:p,slidesGrid:c,slidesSizesGrid:u}),h!==o&&this.emit("slidesLengthChange"),p.length!==g&&(this.params.watchOverflow&&this.checkOverflow(),this.emit("snapGridLengthChange")),c.length!==b&&this.emit("slidesGridLengthChange"),(e.watchSlidesProgress||e.watchSlidesVisibility)&&this.updateSlidesOffset()}},updateAutoHeight:function(e){var t,i=[],s=0;if("number"==typeof e?this.setTransition(e):!0===e&&this.setTransition(this.params.speed),"auto"!==this.params.slidesPerView&&this.params.slidesPerView>1)if(this.params.centeredSlides)this.visibleSlides.each((function(e,t){i.push(t)}));else for(t=0;t<Math.ceil(this.params.slidesPerView);t+=1){var a=this.activeIndex+t;if(a>this.slides.length)break;i.push(this.slides.eq(a)[0])}else i.push(this.slides.eq(this.activeIndex)[0]);for(t=0;t<i.length;t+=1)if(void 0!==i[t]){var r=i[t].offsetHeight;s=r>s?r:s}s&&this.$wrapperEl.css("height",s+"px")},updateSlidesOffset:function(){for(var e=this.slides,t=0;t<e.length;t+=1)e[t].swiperSlideOffset=this.isHorizontal()?e[t].offsetLeft:e[t].offsetTop},updateSlidesProgress:function(e){void 0===e&&(e=this&&this.translate||0);var t=this.params,i=this.slides,s=this.rtlTranslate;if(0!==i.length){void 0===i[0].swiperSlideOffset&&this.updateSlidesOffset();var a=-e;s&&(a=e),i.removeClass(t.slideVisibleClass),this.visibleSlidesIndexes=[],this.visibleSlides=[];for(var r=0;r<i.length;r+=1){var o=i[r],l=(a+(t.centeredSlides?this.minTranslate():0)-o.swiperSlideOffset)/(o.swiperSlideSize+t.spaceBetween);if(t.watchSlidesVisibility||t.centeredSlides&&t.autoHeight){var d=-(a-o.swiperSlideOffset),h=d+this.slidesSizesGrid[r];(d>=0&&d<this.size-1||h>1&&h<=this.size||d<=0&&h>=this.size)&&(this.visibleSlides.push(o),this.visibleSlidesIndexes.push(r),i.eq(r).addClass(t.slideVisibleClass))}o.progress=s?-l:l}this.visibleSlides=n(this.visibleSlides)}},updateProgress:function(e){if(void 0===e){var t=this.rtlTranslate?-1:1;e=this&&this.translate&&this.translate*t||0}var i=this.params,s=this.maxTranslate()-this.minTranslate(),a=this.progress,r=this.isBeginning,n=this.isEnd,o=r,l=n;0===s?(a=0,r=!0,n=!0):(r=(a=(e-this.minTranslate())/s)<=0,n=a>=1),d.extend(this,{progress:a,isBeginning:r,isEnd:n}),(i.watchSlidesProgress||i.watchSlidesVisibility||i.centeredSlides&&i.autoHeight)&&this.updateSlidesProgress(e),r&&!o&&this.emit("reachBeginning toEdge"),n&&!l&&this.emit("reachEnd toEdge"),(o&&!r||l&&!n)&&this.emit("fromEdge"),this.emit("progress",a)},updateSlidesClasses:function(){var e,t=this.slides,i=this.params,s=this.$wrapperEl,a=this.activeIndex,r=this.realIndex,n=this.virtual&&i.virtual.enabled;t.removeClass(i.slideActiveClass+" "+i.slideNextClass+" "+i.slidePrevClass+" "+i.slideDuplicateActiveClass+" "+i.slideDuplicateNextClass+" "+i.slideDuplicatePrevClass),(e=n?this.$wrapperEl.find("."+i.slideClass+'[data-swiper-slide-index="'+a+'"]'):t.eq(a)).addClass(i.slideActiveClass),i.loop&&(e.hasClass(i.slideDuplicateClass)?s.children("."+i.slideClass+":not(."+i.slideDuplicateClass+')[data-swiper-slide-index="'+r+'"]').addClass(i.slideDuplicateActiveClass):s.children("."+i.slideClass+"."+i.slideDuplicateClass+'[data-swiper-slide-index="'+r+'"]').addClass(i.slideDuplicateActiveClass));var o=e.nextAll("."+i.slideClass).eq(0).addClass(i.slideNextClass);i.loop&&0===o.length&&(o=t.eq(0)).addClass(i.slideNextClass);var l=e.prevAll("."+i.slideClass).eq(0).addClass(i.slidePrevClass);i.loop&&0===l.length&&(l=t.eq(-1)).addClass(i.slidePrevClass),i.loop&&(o.hasClass(i.slideDuplicateClass)?s.children("."+i.slideClass+":not(."+i.slideDuplicateClass+')[data-swiper-slide-index="'+o.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicateNextClass):s.children("."+i.slideClass+"."+i.slideDuplicateClass+'[data-swiper-slide-index="'+o.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicateNextClass),l.hasClass(i.slideDuplicateClass)?s.children("."+i.slideClass+":not(."+i.slideDuplicateClass+')[data-swiper-slide-index="'+l.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicatePrevClass):s.children("."+i.slideClass+"."+i.slideDuplicateClass+'[data-swiper-slide-index="'+l.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicatePrevClass))},updateActiveIndex:function(e){var t,i=this.rtlTranslate?this.translate:-this.translate,s=this.slidesGrid,a=this.snapGrid,r=this.params,n=this.activeIndex,o=this.realIndex,l=this.snapIndex,h=e;if(void 0===h){for(var p=0;p<s.length;p+=1)void 0!==s[p+1]?i>=s[p]&&i<s[p+1]-(s[p+1]-s[p])/2?h=p:i>=s[p]&&i<s[p+1]&&(h=p+1):i>=s[p]&&(h=p);r.normalizeSlideIndex&&(h<0||void 0===h)&&(h=0)}if(a.indexOf(i)>=0)t=a.indexOf(i);else{var c=Math.min(r.slidesPerGroupSkip,h);t=c+Math.floor((h-c)/r.slidesPerGroup)}if(t>=a.length&&(t=a.length-1),h!==n){var u=parseInt(this.slides.eq(h).attr("data-swiper-slide-index")||h,10);d.extend(this,{snapIndex:t,realIndex:u,previousIndex:n,activeIndex:h}),this.emit("activeIndexChange"),this.emit("snapIndexChange"),o!==u&&this.emit("realIndexChange"),(this.initialized||this.params.runCallbacksOnInit)&&this.emit("slideChange")}else t!==l&&(this.snapIndex=t,this.emit("snapIndexChange"))},updateClickedSlide:function(e){var t=this.params,i=n(e.target).closest("."+t.slideClass)[0],s=!1;if(i)for(var a=0;a<this.slides.length;a+=1)this.slides[a]===i&&(s=!0);if(!i||!s)return this.clickedSlide=void 0,void(this.clickedIndex=void 0);this.clickedSlide=i,this.virtual&&this.params.virtual.enabled?this.clickedIndex=parseInt(n(i).attr("data-swiper-slide-index"),10):this.clickedIndex=n(i).index(),t.slideToClickedSlide&&void 0!==this.clickedIndex&&this.clickedIndex!==this.activeIndex&&this.slideToClickedSlide()}};var v={getTranslate:function(e){void 0===e&&(e=this.isHorizontal()?"x":"y");var t=this.params,i=this.rtlTranslate,s=this.translate,a=this.$wrapperEl;if(t.virtualTranslate)return i?-s:s;if(t.cssMode)return s;var r=d.getTranslate(a[0],e);return i&&(r=-r),r||0},setTranslate:function(e,t){var i=this.rtlTranslate,s=this.params,a=this.$wrapperEl,r=this.wrapperEl,n=this.progress,o=0,l=0;this.isHorizontal()?o=i?-e:e:l=e,s.roundLengths&&(o=Math.floor(o),l=Math.floor(l)),s.cssMode?r[this.isHorizontal()?"scrollLeft":"scrollTop"]=this.isHorizontal()?-o:-l:s.virtualTranslate||a.transform("translate3d("+o+"px, "+l+"px, 0px)"),this.previousTranslate=this.translate,this.translate=this.isHorizontal()?o:l;var d=this.maxTranslate()-this.minTranslate();(0===d?0:(e-this.minTranslate())/d)!==n&&this.updateProgress(e),this.emit("setTranslate",this.translate,t)},minTranslate:function(){return-this.snapGrid[0]},maxTranslate:function(){return-this.snapGrid[this.snapGrid.length-1]},translateTo:function(e,t,i,s,a){var r;void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0),void 0===s&&(s=!0);var n=this,o=n.params,l=n.wrapperEl;if(n.animating&&o.preventInteractionOnTransition)return!1;var d,h=n.minTranslate(),p=n.maxTranslate();if(d=s&&e>h?h:s&&e<p?p:e,n.updateProgress(d),o.cssMode){var c=n.isHorizontal();return 0===t?l[c?"scrollLeft":"scrollTop"]=-d:l.scrollTo?l.scrollTo(((r={})[c?"left":"top"]=-d,r.behavior="smooth",r)):l[c?"scrollLeft":"scrollTop"]=-d,!0}return 0===t?(n.setTransition(0),n.setTranslate(d),i&&(n.emit("beforeTransitionStart",t,a),n.emit("transitionEnd"))):(n.setTransition(t),n.setTranslate(d),i&&(n.emit("beforeTransitionStart",t,a),n.emit("transitionStart")),n.animating||(n.animating=!0,n.onTranslateToWrapperTransitionEnd||(n.onTranslateToWrapperTransitionEnd=function(e){n&&!n.destroyed&&e.target===this&&(n.$wrapperEl[0].removeEventListener("transitionend",n.onTranslateToWrapperTransitionEnd),n.$wrapperEl[0].removeEventListener("webkitTransitionEnd",n.onTranslateToWrapperTransitionEnd),n.onTranslateToWrapperTransitionEnd=null,delete n.onTranslateToWrapperTransitionEnd,i&&n.emit("transitionEnd"))}),n.$wrapperEl[0].addEventListener("transitionend",n.onTranslateToWrapperTransitionEnd),n.$wrapperEl[0].addEventListener("webkitTransitionEnd",n.onTranslateToWrapperTransitionEnd))),!0}};var f={setTransition:function(e,t){this.params.cssMode||this.$wrapperEl.transition(e),this.emit("setTransition",e,t)},transitionStart:function(e,t){void 0===e&&(e=!0);var i=this.activeIndex,s=this.params,a=this.previousIndex;if(!s.cssMode){s.autoHeight&&this.updateAutoHeight();var r=t;if(r||(r=i>a?"next":i<a?"prev":"reset"),this.emit("transitionStart"),e&&i!==a){if("reset"===r)return void this.emit("slideResetTransitionStart");this.emit("slideChangeTransitionStart"),"next"===r?this.emit("slideNextTransitionStart"):this.emit("slidePrevTransitionStart")}}},transitionEnd:function(e,t){void 0===e&&(e=!0);var i=this.activeIndex,s=this.previousIndex,a=this.params;if(this.animating=!1,!a.cssMode){this.setTransition(0);var r=t;if(r||(r=i>s?"next":i<s?"prev":"reset"),this.emit("transitionEnd"),e&&i!==s){if("reset"===r)return void this.emit("slideResetTransitionEnd");this.emit("slideChangeTransitionEnd"),"next"===r?this.emit("slideNextTransitionEnd"):this.emit("slidePrevTransitionEnd")}}}};var m={slideTo:function(e,t,i,s){var a;void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0);var r=this,n=e;n<0&&(n=0);var o=r.params,l=r.snapGrid,d=r.slidesGrid,h=r.previousIndex,p=r.activeIndex,c=r.rtlTranslate,u=r.wrapperEl;if(r.animating&&o.preventInteractionOnTransition)return!1;var v=Math.min(r.params.slidesPerGroupSkip,n),f=v+Math.floor((n-v)/r.params.slidesPerGroup);f>=l.length&&(f=l.length-1),(p||o.initialSlide||0)===(h||0)&&i&&r.emit("beforeSlideChangeStart");var m,g=-l[f];if(r.updateProgress(g),o.normalizeSlideIndex)for(var b=0;b<d.length;b+=1)-Math.floor(100*g)>=Math.floor(100*d[b])&&(n=b);if(r.initialized&&n!==p){if(!r.allowSlideNext&&g<r.translate&&g<r.minTranslate())return!1;if(!r.allowSlidePrev&&g>r.translate&&g>r.maxTranslate()&&(p||0)!==n)return!1}if(m=n>p?"next":n<p?"prev":"reset",c&&-g===r.translate||!c&&g===r.translate)return r.updateActiveIndex(n),o.autoHeight&&r.updateAutoHeight(),r.updateSlidesClasses(),"slide"!==o.effect&&r.setTranslate(g),"reset"!==m&&(r.transitionStart(i,m),r.transitionEnd(i,m)),!1;if(o.cssMode){var w=r.isHorizontal(),y=-g;return c&&(y=u.scrollWidth-u.offsetWidth-y),0===t?u[w?"scrollLeft":"scrollTop"]=y:u.scrollTo?u.scrollTo(((a={})[w?"left":"top"]=y,a.behavior="smooth",a)):u[w?"scrollLeft":"scrollTop"]=y,!0}return 0===t?(r.setTransition(0),r.setTranslate(g),r.updateActiveIndex(n),r.updateSlidesClasses(),r.emit("beforeTransitionStart",t,s),r.transitionStart(i,m),r.transitionEnd(i,m)):(r.setTransition(t),r.setTranslate(g),r.updateActiveIndex(n),r.updateSlidesClasses(),r.emit("beforeTransitionStart",t,s),r.transitionStart(i,m),r.animating||(r.animating=!0,r.onSlideToWrapperTransitionEnd||(r.onSlideToWrapperTransitionEnd=function(e){r&&!r.destroyed&&e.target===this&&(r.$wrapperEl[0].removeEventListener("transitionend",r.onSlideToWrapperTransitionEnd),r.$wrapperEl[0].removeEventListener("webkitTransitionEnd",r.onSlideToWrapperTransitionEnd),r.onSlideToWrapperTransitionEnd=null,delete r.onSlideToWrapperTransitionEnd,r.transitionEnd(i,m))}),r.$wrapperEl[0].addEventListener("transitionend",r.onSlideToWrapperTransitionEnd),r.$wrapperEl[0].addEventListener("webkitTransitionEnd",r.onSlideToWrapperTransitionEnd))),!0},slideToLoop:function(e,t,i,s){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0);var a=e;return this.params.loop&&(a+=this.loopedSlides),this.slideTo(a,t,i,s)},slideNext:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var s=this.params,a=this.animating,r=this.activeIndex<s.slidesPerGroupSkip?1:s.slidesPerGroup;if(s.loop){if(a)return!1;this.loopFix(),this._clientLeft=this.$wrapperEl[0].clientLeft}return this.slideTo(this.activeIndex+r,e,t,i)},slidePrev:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var s=this.params,a=this.animating,r=this.snapGrid,n=this.slidesGrid,o=this.rtlTranslate;if(s.loop){if(a)return!1;this.loopFix(),this._clientLeft=this.$wrapperEl[0].clientLeft}function l(e){return e<0?-Math.floor(Math.abs(e)):Math.floor(e)}var d,h=l(o?this.translate:-this.translate),p=r.map((function(e){return l(e)})),c=(n.map((function(e){return l(e)})),r[p.indexOf(h)],r[p.indexOf(h)-1]);return void 0===c&&s.cssMode&&r.forEach((function(e){!c&&h>=e&&(c=e)})),void 0!==c&&(d=n.indexOf(c))<0&&(d=this.activeIndex-1),this.slideTo(d,e,t,i)},slideReset:function(e,t,i){return void 0===e&&(e=this.params.speed),void 0===t&&(t=!0),this.slideTo(this.activeIndex,e,t,i)},slideToClosest:function(e,t,i,s){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0),void 0===s&&(s=.5);var a=this.activeIndex,r=Math.min(this.params.slidesPerGroupSkip,a),n=r+Math.floor((a-r)/this.params.slidesPerGroup),o=this.rtlTranslate?this.translate:-this.translate;if(o>=this.snapGrid[n]){var l=this.snapGrid[n];o-l>(this.snapGrid[n+1]-l)*s&&(a+=this.params.slidesPerGroup)}else{var d=this.snapGrid[n-1];o-d<=(this.snapGrid[n]-d)*s&&(a-=this.params.slidesPerGroup)}return a=Math.max(a,0),a=Math.min(a,this.slidesGrid.length-1),this.slideTo(a,e,t,i)},slideToClickedSlide:function(){var e,t=this,i=t.params,s=t.$wrapperEl,a="auto"===i.slidesPerView?t.slidesPerViewDynamic():i.slidesPerView,r=t.clickedIndex;if(i.loop){if(t.animating)return;e=parseInt(n(t.clickedSlide).attr("data-swiper-slide-index"),10),i.centeredSlides?r<t.loopedSlides-a/2||r>t.slides.length-t.loopedSlides+a/2?(t.loopFix(),r=s.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+i.slideDuplicateClass+")").eq(0).index(),d.nextTick((function(){t.slideTo(r)}))):t.slideTo(r):r>t.slides.length-a?(t.loopFix(),r=s.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+i.slideDuplicateClass+")").eq(0).index(),d.nextTick((function(){t.slideTo(r)}))):t.slideTo(r)}else t.slideTo(r)}};var g={loopCreate:function(){var e=this,t=e.params,s=e.$wrapperEl;s.children("."+t.slideClass+"."+t.slideDuplicateClass).remove();var a=s.children("."+t.slideClass);if(t.loopFillGroupWithBlank){var r=t.slidesPerGroup-a.length%t.slidesPerGroup;if(r!==t.slidesPerGroup){for(var o=0;o<r;o+=1){var l=n(i.createElement("div")).addClass(t.slideClass+" "+t.slideBlankClass);s.append(l)}a=s.children("."+t.slideClass)}}"auto"!==t.slidesPerView||t.loopedSlides||(t.loopedSlides=a.length),e.loopedSlides=Math.ceil(parseFloat(t.loopedSlides||t.slidesPerView,10)),e.loopedSlides+=t.loopAdditionalSlides,e.loopedSlides>a.length&&(e.loopedSlides=a.length);var d=[],h=[];a.each((function(t,i){var s=n(i);t<e.loopedSlides&&h.push(i),t<a.length&&t>=a.length-e.loopedSlides&&d.push(i),s.attr("data-swiper-slide-index",t)}));for(var p=0;p<h.length;p+=1)s.append(n(h[p].cloneNode(!0)).addClass(t.slideDuplicateClass));for(var c=d.length-1;c>=0;c-=1)s.prepend(n(d[c].cloneNode(!0)).addClass(t.slideDuplicateClass))},loopFix:function(){this.emit("beforeLoopFix");var e,t=this.activeIndex,i=this.slides,s=this.loopedSlides,a=this.allowSlidePrev,r=this.allowSlideNext,n=this.snapGrid,o=this.rtlTranslate;this.allowSlidePrev=!0,this.allowSlideNext=!0;var l=-n[t]-this.getTranslate();if(t<s)e=i.length-3*s+t,e+=s,this.slideTo(e,0,!1,!0)&&0!==l&&this.setTranslate((o?-this.translate:this.translate)-l);else if(t>=i.length-s){e=-i.length+t+s,e+=s,this.slideTo(e,0,!1,!0)&&0!==l&&this.setTranslate((o?-this.translate:this.translate)-l)}this.allowSlidePrev=a,this.allowSlideNext=r,this.emit("loopFix")},loopDestroy:function(){var e=this.$wrapperEl,t=this.params,i=this.slides;e.children("."+t.slideClass+"."+t.slideDuplicateClass+",."+t.slideClass+"."+t.slideBlankClass).remove(),i.removeAttr("data-swiper-slide-index")}};var b={setGrabCursor:function(e){if(!(h.touch||!this.params.simulateTouch||this.params.watchOverflow&&this.isLocked||this.params.cssMode)){var t=this.el;t.style.cursor="move",t.style.cursor=e?"-webkit-grabbing":"-webkit-grab",t.style.cursor=e?"-moz-grabbin":"-moz-grab",t.style.cursor=e?"grabbing":"grab"}},unsetGrabCursor:function(){h.touch||this.params.watchOverflow&&this.isLocked||this.params.cssMode||(this.el.style.cursor="")}};var w,y,x,E,T,S,C,M,P,z,k,$,L,I,O,D={appendSlide:function(e){var t=this.$wrapperEl,i=this.params;if(i.loop&&this.loopDestroy(),"object"==typeof e&&"length"in e)for(var s=0;s<e.length;s+=1)e[s]&&t.append(e[s]);else t.append(e);i.loop&&this.loopCreate(),i.observer&&h.observer||this.update()},prependSlide:function(e){var t=this.params,i=this.$wrapperEl,s=this.activeIndex;t.loop&&this.loopDestroy();var a=s+1;if("object"==typeof e&&"length"in e){for(var r=0;r<e.length;r+=1)e[r]&&i.prepend(e[r]);a=s+e.length}else i.prepend(e);t.loop&&this.loopCreate(),t.observer&&h.observer||this.update(),this.slideTo(a,0,!1)},addSlide:function(e,t){var i=this.$wrapperEl,s=this.params,a=this.activeIndex;s.loop&&(a-=this.loopedSlides,this.loopDestroy(),this.slides=i.children("."+s.slideClass));var r=this.slides.length;if(e<=0)this.prependSlide(t);else if(e>=r)this.appendSlide(t);else{for(var n=a>e?a+1:a,o=[],l=r-1;l>=e;l-=1){var d=this.slides.eq(l);d.remove(),o.unshift(d)}if("object"==typeof t&&"length"in t){for(var p=0;p<t.length;p+=1)t[p]&&i.append(t[p]);n=a>e?a+t.length:a}else i.append(t);for(var c=0;c<o.length;c+=1)i.append(o[c]);s.loop&&this.loopCreate(),s.observer&&h.observer||this.update(),s.loop?this.slideTo(n+this.loopedSlides,0,!1):this.slideTo(n,0,!1)}},removeSlide:function(e){var t=this.params,i=this.$wrapperEl,s=this.activeIndex;t.loop&&(s-=this.loopedSlides,this.loopDestroy(),this.slides=i.children("."+t.slideClass));var a,r=s;if("object"==typeof e&&"length"in e){for(var n=0;n<e.length;n+=1)a=e[n],this.slides[a]&&this.slides.eq(a).remove(),a<r&&(r-=1);r=Math.max(r,0)}else a=e,this.slides[a]&&this.slides.eq(a).remove(),a<r&&(r-=1),r=Math.max(r,0);t.loop&&this.loopCreate(),t.observer&&h.observer||this.update(),t.loop?this.slideTo(r+this.loopedSlides,0,!1):this.slideTo(r,0,!1)},removeAllSlides:function(){for(var e=[],t=0;t<this.slides.length;t+=1)e.push(t);this.removeSlide(e)}},A=(w=a.navigator.platform,y=a.navigator.userAgent,x={ios:!1,android:!1,androidChrome:!1,desktop:!1,iphone:!1,ipod:!1,ipad:!1,edge:!1,ie:!1,firefox:!1,macos:!1,windows:!1,cordova:!(!a.cordova&&!a.phonegap),phonegap:!(!a.cordova&&!a.phonegap),electron:!1},E=a.screen.width,T=a.screen.height,S=y.match(/(Android);?[\s\/]+([\d.]+)?/),C=y.match(/(iPad).*OS\s([\d_]+)/),M=y.match(/(iPod)(.*OS\s([\d_]+))?/),P=!C&&y.match(/(iPhone\sOS|iOS)\s([\d_]+)/),z=y.indexOf("MSIE ")>=0||y.indexOf("Trident/")>=0,k=y.indexOf("Edge/")>=0,$=y.indexOf("Gecko/")>=0&&y.indexOf("Firefox/")>=0,L="Win32"===w,I=y.toLowerCase().indexOf("electron")>=0,O="MacIntel"===w,!C&&O&&h.touch&&(1024===E&&1366===T||834===E&&1194===T||834===E&&1112===T||768===E&&1024===T)&&(C=y.match(/(Version)\/([\d.]+)/),O=!1),x.ie=z,x.edge=k,x.firefox=$,S&&!L&&(x.os="android",x.osVersion=S[2],x.android=!0,x.androidChrome=y.toLowerCase().indexOf("chrome")>=0),(C||P||M)&&(x.os="ios",x.ios=!0),P&&!M&&(x.osVersion=P[2].replace(/_/g,"."),x.iphone=!0),C&&(x.osVersion=C[2].replace(/_/g,"."),x.ipad=!0),M&&(x.osVersion=M[3]?M[3].replace(/_/g,"."):null,x.ipod=!0),x.ios&&x.osVersion&&y.indexOf("Version/")>=0&&"10"===x.osVersion.split(".")[0]&&(x.osVersion=y.toLowerCase().split("version/")[1].split(" ")[0]),x.webView=!(!(P||C||M)||!y.match(/.*AppleWebKit(?!.*Safari)/i)&&!a.navigator.standalone)||a.matchMedia&&a.matchMedia("(display-mode: standalone)").matches,x.webview=x.webView,x.standalone=x.webView,x.desktop=!(x.ios||x.android)||I,x.desktop&&(x.electron=I,x.macos=O,x.windows=L,x.macos&&(x.os="macos"),x.windows&&(x.os="windows")),x.pixelRatio=a.devicePixelRatio||1,x);function G(e){var t=this.touchEventsData,s=this.params,r=this.touches;if(!this.animating||!s.preventInteractionOnTransition){var o=e;o.originalEvent&&(o=o.originalEvent);var l=n(o.target);if(("wrapper"!==s.touchEventsTarget||l.closest(this.wrapperEl).length)&&(t.isTouchEvent="touchstart"===o.type,(t.isTouchEvent||!("which"in o)||3!==o.which)&&!(!t.isTouchEvent&&"button"in o&&o.button>0||t.isTouched&&t.isMoved)))if(s.noSwiping&&l.closest(s.noSwipingSelector?s.noSwipingSelector:"."+s.noSwipingClass)[0])this.allowClick=!0;else if(!s.swipeHandler||l.closest(s.swipeHandler)[0]){r.currentX="touchstart"===o.type?o.targetTouches[0].pageX:o.pageX,r.currentY="touchstart"===o.type?o.targetTouches[0].pageY:o.pageY;var h=r.currentX,p=r.currentY,c=s.edgeSwipeDetection||s.iOSEdgeSwipeDetection,u=s.edgeSwipeThreshold||s.iOSEdgeSwipeThreshold;if(!c||!(h<=u||h>=a.screen.width-u)){if(d.extend(t,{isTouched:!0,isMoved:!1,allowTouchCallbacks:!0,isScrolling:void 0,startMoving:void 0}),r.startX=h,r.startY=p,t.touchStartTime=d.now(),this.allowClick=!0,this.updateSize(),this.swipeDirection=void 0,s.threshold>0&&(t.allowThresholdMove=!1),"touchstart"!==o.type){var v=!0;l.is(t.formElements)&&(v=!1),i.activeElement&&n(i.activeElement).is(t.formElements)&&i.activeElement!==l[0]&&i.activeElement.blur();var f=v&&this.allowTouchMove&&s.touchStartPreventDefault;(s.touchStartForcePreventDefault||f)&&o.preventDefault()}this.emit("touchStart",o)}}}}function H(e){var t=this.touchEventsData,s=this.params,a=this.touches,r=this.rtlTranslate,o=e;if(o.originalEvent&&(o=o.originalEvent),t.isTouched){if(!t.isTouchEvent||"touchmove"===o.type){var l="touchmove"===o.type&&o.targetTouches&&(o.targetTouches[0]||o.changedTouches[0]),h="touchmove"===o.type?l.pageX:o.pageX,p="touchmove"===o.type?l.pageY:o.pageY;if(o.preventedByNestedSwiper)return a.startX=h,void(a.startY=p);if(!this.allowTouchMove)return this.allowClick=!1,void(t.isTouched&&(d.extend(a,{startX:h,startY:p,currentX:h,currentY:p}),t.touchStartTime=d.now()));if(t.isTouchEvent&&s.touchReleaseOnEdges&&!s.loop)if(this.isVertical()){if(p<a.startY&&this.translate<=this.maxTranslate()||p>a.startY&&this.translate>=this.minTranslate())return t.isTouched=!1,void(t.isMoved=!1)}else if(h<a.startX&&this.translate<=this.maxTranslate()||h>a.startX&&this.translate>=this.minTranslate())return;if(t.isTouchEvent&&i.activeElement&&o.target===i.activeElement&&n(o.target).is(t.formElements))return t.isMoved=!0,void(this.allowClick=!1);if(t.allowTouchCallbacks&&this.emit("touchMove",o),!(o.targetTouches&&o.targetTouches.length>1)){a.currentX=h,a.currentY=p;var c=a.currentX-a.startX,u=a.currentY-a.startY;if(!(this.params.threshold&&Math.sqrt(Math.pow(c,2)+Math.pow(u,2))<this.params.threshold)){var v;if(void 0===t.isScrolling)this.isHorizontal()&&a.currentY===a.startY||this.isVertical()&&a.currentX===a.startX?t.isScrolling=!1:c*c+u*u>=25&&(v=180*Math.atan2(Math.abs(u),Math.abs(c))/Math.PI,t.isScrolling=this.isHorizontal()?v>s.touchAngle:90-v>s.touchAngle);if(t.isScrolling&&this.emit("touchMoveOpposite",o),void 0===t.startMoving&&(a.currentX===a.startX&&a.currentY===a.startY||(t.startMoving=!0)),t.isScrolling)t.isTouched=!1;else if(t.startMoving){this.allowClick=!1,!s.cssMode&&o.cancelable&&o.preventDefault(),s.touchMoveStopPropagation&&!s.nested&&o.stopPropagation(),t.isMoved||(s.loop&&this.loopFix(),t.startTranslate=this.getTranslate(),this.setTransition(0),this.animating&&this.$wrapperEl.trigger("webkitTransitionEnd transitionend"),t.allowMomentumBounce=!1,!s.grabCursor||!0!==this.allowSlideNext&&!0!==this.allowSlidePrev||this.setGrabCursor(!0),this.emit("sliderFirstMove",o)),this.emit("sliderMove",o),t.isMoved=!0;var f=this.isHorizontal()?c:u;a.diff=f,f*=s.touchRatio,r&&(f=-f),this.swipeDirection=f>0?"prev":"next",t.currentTranslate=f+t.startTranslate;var m=!0,g=s.resistanceRatio;if(s.touchReleaseOnEdges&&(g=0),f>0&&t.currentTranslate>this.minTranslate()?(m=!1,s.resistance&&(t.currentTranslate=this.minTranslate()-1+Math.pow(-this.minTranslate()+t.startTranslate+f,g))):f<0&&t.currentTranslate<this.maxTranslate()&&(m=!1,s.resistance&&(t.currentTranslate=this.maxTranslate()+1-Math.pow(this.maxTranslate()-t.startTranslate-f,g))),m&&(o.preventedByNestedSwiper=!0),!this.allowSlideNext&&"next"===this.swipeDirection&&t.currentTranslate<t.startTranslate&&(t.currentTranslate=t.startTranslate),!this.allowSlidePrev&&"prev"===this.swipeDirection&&t.currentTranslate>t.startTranslate&&(t.currentTranslate=t.startTranslate),s.threshold>0){if(!(Math.abs(f)>s.threshold||t.allowThresholdMove))return void(t.currentTranslate=t.startTranslate);if(!t.allowThresholdMove)return t.allowThresholdMove=!0,a.startX=a.currentX,a.startY=a.currentY,t.currentTranslate=t.startTranslate,void(a.diff=this.isHorizontal()?a.currentX-a.startX:a.currentY-a.startY)}s.followFinger&&!s.cssMode&&((s.freeMode||s.watchSlidesProgress||s.watchSlidesVisibility)&&(this.updateActiveIndex(),this.updateSlidesClasses()),s.freeMode&&(0===t.velocities.length&&t.velocities.push({position:a[this.isHorizontal()?"startX":"startY"],time:t.touchStartTime}),t.velocities.push({position:a[this.isHorizontal()?"currentX":"currentY"],time:d.now()})),this.updateProgress(t.currentTranslate),this.setTranslate(t.currentTranslate))}}}}}else t.startMoving&&t.isScrolling&&this.emit("touchMoveOpposite",o)}function B(e){var t=this,i=t.touchEventsData,s=t.params,a=t.touches,r=t.rtlTranslate,n=t.$wrapperEl,o=t.slidesGrid,l=t.snapGrid,h=e;if(h.originalEvent&&(h=h.originalEvent),i.allowTouchCallbacks&&t.emit("touchEnd",h),i.allowTouchCallbacks=!1,!i.isTouched)return i.isMoved&&s.grabCursor&&t.setGrabCursor(!1),i.isMoved=!1,void(i.startMoving=!1);s.grabCursor&&i.isMoved&&i.isTouched&&(!0===t.allowSlideNext||!0===t.allowSlidePrev)&&t.setGrabCursor(!1);var p,c=d.now(),u=c-i.touchStartTime;if(t.allowClick&&(t.updateClickedSlide(h),t.emit("tap click",h),u<300&&c-i.lastClickTime<300&&t.emit("doubleTap doubleClick",h)),i.lastClickTime=d.now(),d.nextTick((function(){t.destroyed||(t.allowClick=!0)})),!i.isTouched||!i.isMoved||!t.swipeDirection||0===a.diff||i.currentTranslate===i.startTranslate)return i.isTouched=!1,i.isMoved=!1,void(i.startMoving=!1);if(i.isTouched=!1,i.isMoved=!1,i.startMoving=!1,p=s.followFinger?r?t.translate:-t.translate:-i.currentTranslate,!s.cssMode)if(s.freeMode){if(p<-t.minTranslate())return void t.slideTo(t.activeIndex);if(p>-t.maxTranslate())return void(t.slides.length<l.length?t.slideTo(l.length-1):t.slideTo(t.slides.length-1));if(s.freeModeMomentum){if(i.velocities.length>1){var v=i.velocities.pop(),f=i.velocities.pop(),m=v.position-f.position,g=v.time-f.time;t.velocity=m/g,t.velocity/=2,Math.abs(t.velocity)<s.freeModeMinimumVelocity&&(t.velocity=0),(g>150||d.now()-v.time>300)&&(t.velocity=0)}else t.velocity=0;t.velocity*=s.freeModeMomentumVelocityRatio,i.velocities.length=0;var b=1e3*s.freeModeMomentumRatio,w=t.velocity*b,y=t.translate+w;r&&(y=-y);var x,E,T=!1,S=20*Math.abs(t.velocity)*s.freeModeMomentumBounceRatio;if(y<t.maxTranslate())s.freeModeMomentumBounce?(y+t.maxTranslate()<-S&&(y=t.maxTranslate()-S),x=t.maxTranslate(),T=!0,i.allowMomentumBounce=!0):y=t.maxTranslate(),s.loop&&s.centeredSlides&&(E=!0);else if(y>t.minTranslate())s.freeModeMomentumBounce?(y-t.minTranslate()>S&&(y=t.minTranslate()+S),x=t.minTranslate(),T=!0,i.allowMomentumBounce=!0):y=t.minTranslate(),s.loop&&s.centeredSlides&&(E=!0);else if(s.freeModeSticky){for(var C,M=0;M<l.length;M+=1)if(l[M]>-y){C=M;break}y=-(y=Math.abs(l[C]-y)<Math.abs(l[C-1]-y)||"next"===t.swipeDirection?l[C]:l[C-1])}if(E&&t.once("transitionEnd",(function(){t.loopFix()})),0!==t.velocity){if(b=r?Math.abs((-y-t.translate)/t.velocity):Math.abs((y-t.translate)/t.velocity),s.freeModeSticky){var P=Math.abs((r?-y:y)-t.translate),z=t.slidesSizesGrid[t.activeIndex];b=P<z?s.speed:P<2*z?1.5*s.speed:2.5*s.speed}}else if(s.freeModeSticky)return void t.slideToClosest();s.freeModeMomentumBounce&&T?(t.updateProgress(x),t.setTransition(b),t.setTranslate(y),t.transitionStart(!0,t.swipeDirection),t.animating=!0,n.transitionEnd((function(){t&&!t.destroyed&&i.allowMomentumBounce&&(t.emit("momentumBounce"),t.setTransition(s.speed),setTimeout((function(){t.setTranslate(x),n.transitionEnd((function(){t&&!t.destroyed&&t.transitionEnd()}))}),0))}))):t.velocity?(t.updateProgress(y),t.setTransition(b),t.setTranslate(y),t.transitionStart(!0,t.swipeDirection),t.animating||(t.animating=!0,n.transitionEnd((function(){t&&!t.destroyed&&t.transitionEnd()})))):t.updateProgress(y),t.updateActiveIndex(),t.updateSlidesClasses()}else if(s.freeModeSticky)return void t.slideToClosest();(!s.freeModeMomentum||u>=s.longSwipesMs)&&(t.updateProgress(),t.updateActiveIndex(),t.updateSlidesClasses())}else{for(var k=0,$=t.slidesSizesGrid[0],L=0;L<o.length;L+=L<s.slidesPerGroupSkip?1:s.slidesPerGroup){var I=L<s.slidesPerGroupSkip-1?1:s.slidesPerGroup;void 0!==o[L+I]?p>=o[L]&&p<o[L+I]&&(k=L,$=o[L+I]-o[L]):p>=o[L]&&(k=L,$=o[o.length-1]-o[o.length-2])}var O=(p-o[k])/$,D=k<s.slidesPerGroupSkip-1?1:s.slidesPerGroup;if(u>s.longSwipesMs){if(!s.longSwipes)return void t.slideTo(t.activeIndex);"next"===t.swipeDirection&&(O>=s.longSwipesRatio?t.slideTo(k+D):t.slideTo(k)),"prev"===t.swipeDirection&&(O>1-s.longSwipesRatio?t.slideTo(k+D):t.slideTo(k))}else{if(!s.shortSwipes)return void t.slideTo(t.activeIndex);t.navigation&&(h.target===t.navigation.nextEl||h.target===t.navigation.prevEl)?h.target===t.navigation.nextEl?t.slideTo(k+D):t.slideTo(k):("next"===t.swipeDirection&&t.slideTo(k+D),"prev"===t.swipeDirection&&t.slideTo(k))}}}function N(){var e=this.params,t=this.el;if(!t||0!==t.offsetWidth){e.breakpoints&&this.setBreakpoint();var i=this.allowSlideNext,s=this.allowSlidePrev,a=this.snapGrid;this.allowSlideNext=!0,this.allowSlidePrev=!0,this.updateSize(),this.updateSlides(),this.updateSlidesClasses(),("auto"===e.slidesPerView||e.slidesPerView>1)&&this.isEnd&&!this.params.centeredSlides?this.slideTo(this.slides.length-1,0,!1,!0):this.slideTo(this.activeIndex,0,!1,!0),this.autoplay&&this.autoplay.running&&this.autoplay.paused&&this.autoplay.run(),this.allowSlidePrev=s,this.allowSlideNext=i,this.params.watchOverflow&&a!==this.snapGrid&&this.checkOverflow()}}function X(e){this.allowClick||(this.params.preventClicks&&e.preventDefault(),this.params.preventClicksPropagation&&this.animating&&(e.stopPropagation(),e.stopImmediatePropagation()))}function V(){var e=this.wrapperEl,t=this.rtlTranslate;this.previousTranslate=this.translate,this.isHorizontal()?this.translate=t?e.scrollWidth-e.offsetWidth-e.scrollLeft:-e.scrollLeft:this.translate=-e.scrollTop,-0===this.translate&&(this.translate=0),this.updateActiveIndex(),this.updateSlidesClasses();var i=this.maxTranslate()-this.minTranslate();(0===i?0:(this.translate-this.minTranslate())/i)!==this.progress&&this.updateProgress(t?-this.translate:this.translate),this.emit("setTranslate",this.translate,!1)}var Y=!1;function F(){}var W={init:!0,direction:"horizontal",touchEventsTarget:"container",initialSlide:0,speed:300,cssMode:!1,updateOnWindowResize:!0,preventInteractionOnTransition:!1,edgeSwipeDetection:!1,edgeSwipeThreshold:20,freeMode:!1,freeModeMomentum:!0,freeModeMomentumRatio:1,freeModeMomentumBounce:!0,freeModeMomentumBounceRatio:1,freeModeMomentumVelocityRatio:1,freeModeSticky:!1,freeModeMinimumVelocity:.02,autoHeight:!1,setWrapperSize:!1,virtualTranslate:!1,effect:"slide",breakpoints:void 0,spaceBetween:0,slidesPerView:1,slidesPerColumn:1,slidesPerColumnFill:"column",slidesPerGroup:1,slidesPerGroupSkip:0,centeredSlides:!1,centeredSlidesBounds:!1,slidesOffsetBefore:0,slidesOffsetAfter:0,normalizeSlideIndex:!0,centerInsufficientSlides:!1,watchOverflow:!1,roundLengths:!1,touchRatio:1,touchAngle:45,simulateTouch:!0,shortSwipes:!0,longSwipes:!0,longSwipesRatio:.5,longSwipesMs:300,followFinger:!0,allowTouchMove:!0,threshold:0,touchMoveStopPropagation:!1,touchStartPreventDefault:!0,touchStartForcePreventDefault:!1,touchReleaseOnEdges:!1,uniqueNavElements:!0,resistance:!0,resistanceRatio:.85,watchSlidesProgress:!1,watchSlidesVisibility:!1,grabCursor:!1,preventClicks:!0,preventClicksPropagation:!0,slideToClickedSlide:!1,preloadImages:!0,updateOnImagesReady:!0,loop:!1,loopAdditionalSlides:0,loopedSlides:null,loopFillGroupWithBlank:!1,allowSlidePrev:!0,allowSlideNext:!0,swipeHandler:null,noSwiping:!0,noSwipingClass:"swiper-no-swiping",noSwipingSelector:null,passiveListeners:!0,containerModifierClass:"swiper-container-",slideClass:"swiper-slide",slideBlankClass:"swiper-slide-invisible-blank",slideActiveClass:"swiper-slide-active",slideDuplicateActiveClass:"swiper-slide-duplicate-active",slideVisibleClass:"swiper-slide-visible",slideDuplicateClass:"swiper-slide-duplicate",slideNextClass:"swiper-slide-next",slideDuplicateNextClass:"swiper-slide-duplicate-next",slidePrevClass:"swiper-slide-prev",slideDuplicatePrevClass:"swiper-slide-duplicate-prev",wrapperClass:"swiper-wrapper",runCallbacksOnInit:!0},R={update:u,translate:v,transition:f,slide:m,loop:g,grabCursor:b,manipulation:D,events:{attachEvents:function(){var e=this.params,t=this.touchEvents,s=this.el,a=this.wrapperEl;this.onTouchStart=G.bind(this),this.onTouchMove=H.bind(this),this.onTouchEnd=B.bind(this),e.cssMode&&(this.onScroll=V.bind(this)),this.onClick=X.bind(this);var r=!!e.nested;if(!h.touch&&h.pointerEvents)s.addEventListener(t.start,this.onTouchStart,!1),i.addEventListener(t.move,this.onTouchMove,r),i.addEventListener(t.end,this.onTouchEnd,!1);else{if(h.touch){var n=!("touchstart"!==t.start||!h.passiveListener||!e.passiveListeners)&&{passive:!0,capture:!1};s.addEventListener(t.start,this.onTouchStart,n),s.addEventListener(t.move,this.onTouchMove,h.passiveListener?{passive:!1,capture:r}:r),s.addEventListener(t.end,this.onTouchEnd,n),t.cancel&&s.addEventListener(t.cancel,this.onTouchEnd,n),Y||(i.addEventListener("touchstart",F),Y=!0)}(e.simulateTouch&&!A.ios&&!A.android||e.simulateTouch&&!h.touch&&A.ios)&&(s.addEventListener("mousedown",this.onTouchStart,!1),i.addEventListener("mousemove",this.onTouchMove,r),i.addEventListener("mouseup",this.onTouchEnd,!1))}(e.preventClicks||e.preventClicksPropagation)&&s.addEventListener("click",this.onClick,!0),e.cssMode&&a.addEventListener("scroll",this.onScroll),e.updateOnWindowResize?this.on(A.ios||A.android?"resize orientationchange observerUpdate":"resize observerUpdate",N,!0):this.on("observerUpdate",N,!0)},detachEvents:function(){var e=this.params,t=this.touchEvents,s=this.el,a=this.wrapperEl,r=!!e.nested;if(!h.touch&&h.pointerEvents)s.removeEventListener(t.start,this.onTouchStart,!1),i.removeEventListener(t.move,this.onTouchMove,r),i.removeEventListener(t.end,this.onTouchEnd,!1);else{if(h.touch){var n=!("onTouchStart"!==t.start||!h.passiveListener||!e.passiveListeners)&&{passive:!0,capture:!1};s.removeEventListener(t.start,this.onTouchStart,n),s.removeEventListener(t.move,this.onTouchMove,r),s.removeEventListener(t.end,this.onTouchEnd,n),t.cancel&&s.removeEventListener(t.cancel,this.onTouchEnd,n)}(e.simulateTouch&&!A.ios&&!A.android||e.simulateTouch&&!h.touch&&A.ios)&&(s.removeEventListener("mousedown",this.onTouchStart,!1),i.removeEventListener("mousemove",this.onTouchMove,r),i.removeEventListener("mouseup",this.onTouchEnd,!1))}(e.preventClicks||e.preventClicksPropagation)&&s.removeEventListener("click",this.onClick,!0),e.cssMode&&a.removeEventListener("scroll",this.onScroll),this.off(A.ios||A.android?"resize orientationchange observerUpdate":"resize observerUpdate",N)}},breakpoints:{setBreakpoint:function(){var e=this.activeIndex,t=this.initialized,i=this.loopedSlides;void 0===i&&(i=0);var s=this.params,a=this.$el,r=s.breakpoints;if(r&&(!r||0!==Object.keys(r).length)){var n=this.getBreakpoint(r);if(n&&this.currentBreakpoint!==n){var o=n in r?r[n]:void 0;o&&["slidesPerView","spaceBetween","slidesPerGroup","slidesPerGroupSkip","slidesPerColumn"].forEach((function(e){var t=o[e];void 0!==t&&(o[e]="slidesPerView"!==e||"AUTO"!==t&&"auto"!==t?"slidesPerView"===e?parseFloat(t):parseInt(t,10):"auto")}));var l=o||this.originalParams,h=s.slidesPerColumn>1,p=l.slidesPerColumn>1;h&&!p?a.removeClass(s.containerModifierClass+"multirow "+s.containerModifierClass+"multirow-column"):!h&&p&&(a.addClass(s.containerModifierClass+"multirow"),"column"===l.slidesPerColumnFill&&a.addClass(s.containerModifierClass+"multirow-column"));var c=l.direction&&l.direction!==s.direction,u=s.loop&&(l.slidesPerView!==s.slidesPerView||c);c&&t&&this.changeDirection(),d.extend(this.params,l),d.extend(this,{allowTouchMove:this.params.allowTouchMove,allowSlideNext:this.params.allowSlideNext,allowSlidePrev:this.params.allowSlidePrev}),this.currentBreakpoint=n,u&&t&&(this.loopDestroy(),this.loopCreate(),this.updateSlides(),this.slideTo(e-i+this.loopedSlides,0,!1)),this.emit("breakpoint",l)}}},getBreakpoint:function(e){if(e){var t=!1,i=Object.keys(e).map((function(e){if("string"==typeof e&&0===e.indexOf("@")){var t=parseFloat(e.substr(1));return{value:a.innerHeight*t,point:e}}return{value:e,point:e}}));i.sort((function(e,t){return parseInt(e.value,10)-parseInt(t.value,10)}));for(var s=0;s<i.length;s+=1){var r=i[s],n=r.point;r.value<=a.innerWidth&&(t=n)}return t||"max"}}},checkOverflow:{checkOverflow:function(){var e=this.params,t=this.isLocked,i=this.slides.length>0&&e.slidesOffsetBefore+e.spaceBetween*(this.slides.length-1)+this.slides[0].offsetWidth*this.slides.length;e.slidesOffsetBefore&&e.slidesOffsetAfter&&i?this.isLocked=i<=this.size:this.isLocked=1===this.snapGrid.length,this.allowSlideNext=!this.isLocked,this.allowSlidePrev=!this.isLocked,t!==this.isLocked&&this.emit(this.isLocked?"lock":"unlock"),t&&t!==this.isLocked&&(this.isEnd=!1,this.navigation.update())}},classes:{addClasses:function(){var e=this.classNames,t=this.params,i=this.rtl,s=this.$el,a=[];a.push("initialized"),a.push(t.direction),t.freeMode&&a.push("free-mode"),t.autoHeight&&a.push("autoheight"),i&&a.push("rtl"),t.slidesPerColumn>1&&(a.push("multirow"),"column"===t.slidesPerColumnFill&&a.push("multirow-column")),A.android&&a.push("android"),A.ios&&a.push("ios"),t.cssMode&&a.push("css-mode"),a.forEach((function(i){e.push(t.containerModifierClass+i)})),s.addClass(e.join(" "))},removeClasses:function(){var e=this.$el,t=this.classNames;e.removeClass(t.join(" "))}},images:{loadImage:function(e,t,i,s,r,o){var l;function d(){o&&o()}n(e).parent("picture")[0]||e.complete&&r?d():t?((l=new a.Image).onload=d,l.onerror=d,s&&(l.sizes=s),i&&(l.srcset=i),t&&(l.src=t)):d()},preloadImages:function(){var e=this;function t(){null!=e&&e&&!e.destroyed&&(void 0!==e.imagesLoaded&&(e.imagesLoaded+=1),e.imagesLoaded===e.imagesToLoad.length&&(e.params.updateOnImagesReady&&e.update(),e.emit("imagesReady")))}e.imagesToLoad=e.$el.find("img");for(var i=0;i<e.imagesToLoad.length;i+=1){var s=e.imagesToLoad[i];e.loadImage(s,s.currentSrc||s.getAttribute("src"),s.srcset||s.getAttribute("srcset"),s.sizes||s.getAttribute("sizes"),!0,t)}}}},q={},j=function(e){function t(){for(var i,s,a,r=[],o=arguments.length;o--;)r[o]=arguments[o];1===r.length&&r[0].constructor&&r[0].constructor===Object?a=r[0]:(s=(i=r)[0],a=i[1]),a||(a={}),a=d.extend({},a),s&&!a.el&&(a.el=s),e.call(this,a),Object.keys(R).forEach((function(e){Object.keys(R[e]).forEach((function(i){t.prototype[i]||(t.prototype[i]=R[e][i])}))}));var l=this;void 0===l.modules&&(l.modules={}),Object.keys(l.modules).forEach((function(e){var t=l.modules[e];if(t.params){var i=Object.keys(t.params)[0],s=t.params[i];if("object"!=typeof s||null===s)return;if(!(i in a)||!("enabled"in s))return;!0===a[i]&&(a[i]={enabled:!0}),"object"!=typeof a[i]||"enabled"in a[i]||(a[i].enabled=!0),a[i]||(a[i]={enabled:!1})}}));var p=d.extend({},W);l.useModulesParams(p),l.params=d.extend({},p,q,a),l.originalParams=d.extend({},l.params),l.passedParams=d.extend({},a),l.$=n;var c=n(l.params.el);if(s=c[0]){if(c.length>1){var u=[];return c.each((function(e,i){var s=d.extend({},a,{el:i});u.push(new t(s))})),u}var v,f,m;return s.swiper=l,c.data("swiper",l),s&&s.shadowRoot&&s.shadowRoot.querySelector?(v=n(s.shadowRoot.querySelector("."+l.params.wrapperClass))).children=function(e){return c.children(e)}:v=c.children("."+l.params.wrapperClass),d.extend(l,{$el:c,el:s,$wrapperEl:v,wrapperEl:v[0],classNames:[],slides:n(),slidesGrid:[],snapGrid:[],slidesSizesGrid:[],isHorizontal:function(){return"horizontal"===l.params.direction},isVertical:function(){return"vertical"===l.params.direction},rtl:"rtl"===s.dir.toLowerCase()||"rtl"===c.css("direction"),rtlTranslate:"horizontal"===l.params.direction&&("rtl"===s.dir.toLowerCase()||"rtl"===c.css("direction")),wrongRTL:"-webkit-box"===v.css("display"),activeIndex:0,realIndex:0,isBeginning:!0,isEnd:!1,translate:0,previousTranslate:0,progress:0,velocity:0,animating:!1,allowSlideNext:l.params.allowSlideNext,allowSlidePrev:l.params.allowSlidePrev,touchEvents:(f=["touchstart","touchmove","touchend","touchcancel"],m=["mousedown","mousemove","mouseup"],h.pointerEvents&&(m=["pointerdown","pointermove","pointerup"]),l.touchEventsTouch={start:f[0],move:f[1],end:f[2],cancel:f[3]},l.touchEventsDesktop={start:m[0],move:m[1],end:m[2]},h.touch||!l.params.simulateTouch?l.touchEventsTouch:l.touchEventsDesktop),touchEventsData:{isTouched:void 0,isMoved:void 0,allowTouchCallbacks:void 0,touchStartTime:void 0,isScrolling:void 0,currentTranslate:void 0,startTranslate:void 0,allowThresholdMove:void 0,formElements:"input, select, option, textarea, button, video, label",lastClickTime:d.now(),clickTimeout:void 0,velocities:[],allowMomentumBounce:void 0,isTouchEvent:void 0,startMoving:void 0},allowClick:!0,allowTouchMove:l.params.allowTouchMove,touches:{startX:0,startY:0,currentX:0,currentY:0,diff:0},imagesToLoad:[],imagesLoaded:0}),l.useModules(),l.params.init&&l.init(),l}}e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t;var i={extendedDefaults:{configurable:!0},defaults:{configurable:!0},Class:{configurable:!0},$:{configurable:!0}};return t.prototype.slidesPerViewDynamic=function(){var e=this.params,t=this.slides,i=this.slidesGrid,s=this.size,a=this.activeIndex,r=1;if(e.centeredSlides){for(var n,o=t[a].swiperSlideSize,l=a+1;l<t.length;l+=1)t[l]&&!n&&(r+=1,(o+=t[l].swiperSlideSize)>s&&(n=!0));for(var d=a-1;d>=0;d-=1)t[d]&&!n&&(r+=1,(o+=t[d].swiperSlideSize)>s&&(n=!0))}else for(var h=a+1;h<t.length;h+=1)i[h]-i[a]<s&&(r+=1);return r},t.prototype.update=function(){var e=this;if(e&&!e.destroyed){var t=e.snapGrid,i=e.params;i.breakpoints&&e.setBreakpoint(),e.updateSize(),e.updateSlides(),e.updateProgress(),e.updateSlidesClasses(),e.params.freeMode?(s(),e.params.autoHeight&&e.updateAutoHeight()):(("auto"===e.params.slidesPerView||e.params.slidesPerView>1)&&e.isEnd&&!e.params.centeredSlides?e.slideTo(e.slides.length-1,0,!1,!0):e.slideTo(e.activeIndex,0,!1,!0))||s(),i.watchOverflow&&t!==e.snapGrid&&e.checkOverflow(),e.emit("update")}function s(){var t=e.rtlTranslate?-1*e.translate:e.translate,i=Math.min(Math.max(t,e.maxTranslate()),e.minTranslate());e.setTranslate(i),e.updateActiveIndex(),e.updateSlidesClasses()}},t.prototype.changeDirection=function(e,t){void 0===t&&(t=!0);var i=this.params.direction;return e||(e="horizontal"===i?"vertical":"horizontal"),e===i||"horizontal"!==e&&"vertical"!==e||(this.$el.removeClass(""+this.params.containerModifierClass+i).addClass(""+this.params.containerModifierClass+e),this.params.direction=e,this.slides.each((function(t,i){"vertical"===e?i.style.width="":i.style.height=""})),this.emit("changeDirection"),t&&this.update()),this},t.prototype.init=function(){this.initialized||(this.emit("beforeInit"),this.params.breakpoints&&this.setBreakpoint(),this.addClasses(),this.params.loop&&this.loopCreate(),this.updateSize(),this.updateSlides(),this.params.watchOverflow&&this.checkOverflow(),this.params.grabCursor&&this.setGrabCursor(),this.params.preloadImages&&this.preloadImages(),this.params.loop?this.slideTo(this.params.initialSlide+this.loopedSlides,0,this.params.runCallbacksOnInit):this.slideTo(this.params.initialSlide,0,this.params.runCallbacksOnInit),this.attachEvents(),this.initialized=!0,this.emit("init"))},t.prototype.destroy=function(e,t){void 0===e&&(e=!0),void 0===t&&(t=!0);var i=this,s=i.params,a=i.$el,r=i.$wrapperEl,n=i.slides;return void 0===i.params||i.destroyed||(i.emit("beforeDestroy"),i.initialized=!1,i.detachEvents(),s.loop&&i.loopDestroy(),t&&(i.removeClasses(),a.removeAttr("style"),r.removeAttr("style"),n&&n.length&&n.removeClass([s.slideVisibleClass,s.slideActiveClass,s.slideNextClass,s.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-slide-index")),i.emit("destroy"),Object.keys(i.eventsListeners).forEach((function(e){i.off(e)})),!1!==e&&(i.$el[0].swiper=null,i.$el.data("swiper",null),d.deleteProps(i)),i.destroyed=!0),null},t.extendDefaults=function(e){d.extend(q,e)},i.extendedDefaults.get=function(){return q},i.defaults.get=function(){return W},i.Class.get=function(){return e},i.$.get=function(){return n},Object.defineProperties(t,i),t}(p),K={name:"device",proto:{device:A},static:{device:A}},U={name:"support",proto:{support:h},static:{support:h}},_={isEdge:!!a.navigator.userAgent.match(/Edge/g),isSafari:function(){var e=a.navigator.userAgent.toLowerCase();return e.indexOf("safari")>=0&&e.indexOf("chrome")<0&&e.indexOf("android")<0}(),isUiWebView:/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(a.navigator.userAgent)},Z={name:"browser",proto:{browser:_},static:{browser:_}},Q={name:"resize",create:function(){var e=this;d.extend(e,{resize:{resizeHandler:function(){e&&!e.destroyed&&e.initialized&&(e.emit("beforeResize"),e.emit("resize"))},orientationChangeHandler:function(){e&&!e.destroyed&&e.initialized&&e.emit("orientationchange")}}})},on:{init:function(){a.addEventListener("resize",this.resize.resizeHandler),a.addEventListener("orientationchange",this.resize.orientationChangeHandler)},destroy:function(){a.removeEventListener("resize",this.resize.resizeHandler),a.removeEventListener("orientationchange",this.resize.orientationChangeHandler)}}},J={func:a.MutationObserver||a.WebkitMutationObserver,attach:function(e,t){void 0===t&&(t={});var i=this,s=new(0,J.func)((function(e){if(1!==e.length){var t=function(){i.emit("observerUpdate",e[0])};a.requestAnimationFrame?a.requestAnimationFrame(t):a.setTimeout(t,0)}else i.emit("observerUpdate",e[0])}));s.observe(e,{attributes:void 0===t.attributes||t.attributes,childList:void 0===t.childList||t.childList,characterData:void 0===t.characterData||t.characterData}),i.observer.observers.push(s)},init:function(){if(h.observer&&this.params.observer){if(this.params.observeParents)for(var e=this.$el.parents(),t=0;t<e.length;t+=1)this.observer.attach(e[t]);this.observer.attach(this.$el[0],{childList:this.params.observeSlideChildren}),this.observer.attach(this.$wrapperEl[0],{attributes:!1})}},destroy:function(){this.observer.observers.forEach((function(e){e.disconnect()})),this.observer.observers=[]}},ee={name:"observer",params:{observer:!1,observeParents:!1,observeSlideChildren:!1},create:function(){d.extend(this,{observer:{init:J.init.bind(this),attach:J.attach.bind(this),destroy:J.destroy.bind(this),observers:[]}})},on:{init:function(){this.observer.init()},destroy:function(){this.observer.destroy()}}},te={update:function(e){var t=this,i=t.params,s=i.slidesPerView,a=i.slidesPerGroup,r=i.centeredSlides,n=t.params.virtual,o=n.addSlidesBefore,l=n.addSlidesAfter,h=t.virtual,p=h.from,c=h.to,u=h.slides,v=h.slidesGrid,f=h.renderSlide,m=h.offset;t.updateActiveIndex();var g,b,w,y=t.activeIndex||0;g=t.rtlTranslate?"right":t.isHorizontal()?"left":"top",r?(b=Math.floor(s/2)+a+o,w=Math.floor(s/2)+a+l):(b=s+(a-1)+o,w=a+l);var x=Math.max((y||0)-w,0),E=Math.min((y||0)+b,u.length-1),T=(t.slidesGrid[x]||0)-(t.slidesGrid[0]||0);function S(){t.updateSlides(),t.updateProgress(),t.updateSlidesClasses(),t.lazy&&t.params.lazy.enabled&&t.lazy.load()}if(d.extend(t.virtual,{from:x,to:E,offset:T,slidesGrid:t.slidesGrid}),p===x&&c===E&&!e)return t.slidesGrid!==v&&T!==m&&t.slides.css(g,T+"px"),void t.updateProgress();if(t.params.virtual.renderExternal)return t.params.virtual.renderExternal.call(t,{offset:T,from:x,to:E,slides:function(){for(var e=[],t=x;t<=E;t+=1)e.push(u[t]);return e}()}),void S();var C=[],M=[];if(e)t.$wrapperEl.find("."+t.params.slideClass).remove();else for(var P=p;P<=c;P+=1)(P<x||P>E)&&t.$wrapperEl.find("."+t.params.slideClass+'[data-swiper-slide-index="'+P+'"]').remove();for(var z=0;z<u.length;z+=1)z>=x&&z<=E&&(void 0===c||e?M.push(z):(z>c&&M.push(z),z<p&&C.push(z)));M.forEach((function(e){t.$wrapperEl.append(f(u[e],e))})),C.sort((function(e,t){return t-e})).forEach((function(e){t.$wrapperEl.prepend(f(u[e],e))})),t.$wrapperEl.children(".swiper-slide").css(g,T+"px"),S()},renderSlide:function(e,t){var i=this.params.virtual;if(i.cache&&this.virtual.cache[t])return this.virtual.cache[t];var s=i.renderSlide?n(i.renderSlide.call(this,e,t)):n('<div class="'+this.params.slideClass+'" data-swiper-slide-index="'+t+'">'+e+"</div>");return s.attr("data-swiper-slide-index")||s.attr("data-swiper-slide-index",t),i.cache&&(this.virtual.cache[t]=s),s},appendSlide:function(e){if("object"==typeof e&&"length"in e)for(var t=0;t<e.length;t+=1)e[t]&&this.virtual.slides.push(e[t]);else this.virtual.slides.push(e);this.virtual.update(!0)},prependSlide:function(e){var t=this.activeIndex,i=t+1,s=1;if(Array.isArray(e)){for(var a=0;a<e.length;a+=1)e[a]&&this.virtual.slides.unshift(e[a]);i=t+e.length,s=e.length}else this.virtual.slides.unshift(e);if(this.params.virtual.cache){var r=this.virtual.cache,n={};Object.keys(r).forEach((function(e){var t=r[e],i=t.attr("data-swiper-slide-index");i&&t.attr("data-swiper-slide-index",parseInt(i,10)+1),n[parseInt(e,10)+s]=t})),this.virtual.cache=n}this.virtual.update(!0),this.slideTo(i,0)},removeSlide:function(e){if(null!=e){var t=this.activeIndex;if(Array.isArray(e))for(var i=e.length-1;i>=0;i-=1)this.virtual.slides.splice(e[i],1),this.params.virtual.cache&&delete this.virtual.cache[e[i]],e[i]<t&&(t-=1),t=Math.max(t,0);else this.virtual.slides.splice(e,1),this.params.virtual.cache&&delete this.virtual.cache[e],e<t&&(t-=1),t=Math.max(t,0);this.virtual.update(!0),this.slideTo(t,0)}},removeAllSlides:function(){this.virtual.slides=[],this.params.virtual.cache&&(this.virtual.cache={}),this.virtual.update(!0),this.slideTo(0,0)}},ie={name:"virtual",params:{virtual:{enabled:!1,slides:[],cache:!0,renderSlide:null,renderExternal:null,addSlidesBefore:0,addSlidesAfter:0}},create:function(){d.extend(this,{virtual:{update:te.update.bind(this),appendSlide:te.appendSlide.bind(this),prependSlide:te.prependSlide.bind(this),removeSlide:te.removeSlide.bind(this),removeAllSlides:te.removeAllSlides.bind(this),renderSlide:te.renderSlide.bind(this),slides:this.params.virtual.slides,cache:{}}})},on:{beforeInit:function(){if(this.params.virtual.enabled){this.classNames.push(this.params.containerModifierClass+"virtual");var e={watchSlidesProgress:!0};d.extend(this.params,e),d.extend(this.originalParams,e),this.params.initialSlide||this.virtual.update()}},setTranslate:function(){this.params.virtual.enabled&&this.virtual.update()}}},se={handle:function(e){var t=this.rtlTranslate,s=e;s.originalEvent&&(s=s.originalEvent);var r=s.keyCode||s.charCode;if(!this.allowSlideNext&&(this.isHorizontal()&&39===r||this.isVertical()&&40===r||34===r))return!1;if(!this.allowSlidePrev&&(this.isHorizontal()&&37===r||this.isVertical()&&38===r||33===r))return!1;if(!(s.shiftKey||s.altKey||s.ctrlKey||s.metaKey||i.activeElement&&i.activeElement.nodeName&&("input"===i.activeElement.nodeName.toLowerCase()||"textarea"===i.activeElement.nodeName.toLowerCase()))){if(this.params.keyboard.onlyInViewport&&(33===r||34===r||37===r||39===r||38===r||40===r)){var n=!1;if(this.$el.parents("."+this.params.slideClass).length>0&&0===this.$el.parents("."+this.params.slideActiveClass).length)return;var o=a.innerWidth,l=a.innerHeight,d=this.$el.offset();t&&(d.left-=this.$el[0].scrollLeft);for(var h=[[d.left,d.top],[d.left+this.width,d.top],[d.left,d.top+this.height],[d.left+this.width,d.top+this.height]],p=0;p<h.length;p+=1){var c=h[p];c[0]>=0&&c[0]<=o&&c[1]>=0&&c[1]<=l&&(n=!0)}if(!n)return}this.isHorizontal()?(33!==r&&34!==r&&37!==r&&39!==r||(s.preventDefault?s.preventDefault():s.returnValue=!1),(34!==r&&39!==r||t)&&(33!==r&&37!==r||!t)||this.slideNext(),(33!==r&&37!==r||t)&&(34!==r&&39!==r||!t)||this.slidePrev()):(33!==r&&34!==r&&38!==r&&40!==r||(s.preventDefault?s.preventDefault():s.returnValue=!1),34!==r&&40!==r||this.slideNext(),33!==r&&38!==r||this.slidePrev()),this.emit("keyPress",r)}},enable:function(){this.keyboard.enabled||(n(i).on("keydown",this.keyboard.handle),this.keyboard.enabled=!0)},disable:function(){this.keyboard.enabled&&(n(i).off("keydown",this.keyboard.handle),this.keyboard.enabled=!1)}},ae={name:"keyboard",params:{keyboard:{enabled:!1,onlyInViewport:!0}},create:function(){d.extend(this,{keyboard:{enabled:!1,enable:se.enable.bind(this),disable:se.disable.bind(this),handle:se.handle.bind(this)}})},on:{init:function(){this.params.keyboard.enabled&&this.keyboard.enable()},destroy:function(){this.keyboard.enabled&&this.keyboard.disable()}}};var re={lastScrollTime:d.now(),lastEventBeforeSnap:void 0,recentWheelEvents:[],event:function(){return a.navigator.userAgent.indexOf("firefox")>-1?"DOMMouseScroll":function(){var e="onwheel"in i;if(!e){var t=i.createElement("div");t.setAttribute("onwheel","return;"),e="function"==typeof t.onwheel}return!e&&i.implementation&&i.implementation.hasFeature&&!0!==i.implementation.hasFeature("","")&&(e=i.implementation.hasFeature("Events.wheel","3.0")),e}()?"wheel":"mousewheel"},normalize:function(e){var t=0,i=0,s=0,a=0;return"detail"in e&&(i=e.detail),"wheelDelta"in e&&(i=-e.wheelDelta/120),"wheelDeltaY"in e&&(i=-e.wheelDeltaY/120),"wheelDeltaX"in e&&(t=-e.wheelDeltaX/120),"axis"in e&&e.axis===e.HORIZONTAL_AXIS&&(t=i,i=0),s=10*t,a=10*i,"deltaY"in e&&(a=e.deltaY),"deltaX"in e&&(s=e.deltaX),e.shiftKey&&!s&&(s=a,a=0),(s||a)&&e.deltaMode&&(1===e.deltaMode?(s*=40,a*=40):(s*=800,a*=800)),s&&!t&&(t=s<1?-1:1),a&&!i&&(i=a<1?-1:1),{spinX:t,spinY:i,pixelX:s,pixelY:a}},handleMouseEnter:function(){this.mouseEntered=!0},handleMouseLeave:function(){this.mouseEntered=!1},handle:function(e){var t=e,i=this,s=i.params.mousewheel;i.params.cssMode&&t.preventDefault();var a=i.$el;if("container"!==i.params.mousewheel.eventsTarged&&(a=n(i.params.mousewheel.eventsTarged)),!i.mouseEntered&&!a[0].contains(t.target)&&!s.releaseOnEdges)return!0;t.originalEvent&&(t=t.originalEvent);var r=0,o=i.rtlTranslate?-1:1,l=re.normalize(t);if(s.forceToAxis)if(i.isHorizontal()){if(!(Math.abs(l.pixelX)>Math.abs(l.pixelY)))return!0;r=l.pixelX*o}else{if(!(Math.abs(l.pixelY)>Math.abs(l.pixelX)))return!0;r=l.pixelY}else r=Math.abs(l.pixelX)>Math.abs(l.pixelY)?-l.pixelX*o:-l.pixelY;if(0===r)return!0;if(s.invert&&(r=-r),i.params.freeMode){var h={time:d.now(),delta:Math.abs(r),direction:Math.sign(r)},p=i.mousewheel.lastEventBeforeSnap,c=p&&h.time<p.time+500&&h.delta<=p.delta&&h.direction===p.direction;if(!c){i.mousewheel.lastEventBeforeSnap=void 0,i.params.loop&&i.loopFix();var u=i.getTranslate()+r*s.sensitivity,v=i.isBeginning,f=i.isEnd;if(u>=i.minTranslate()&&(u=i.minTranslate()),u<=i.maxTranslate()&&(u=i.maxTranslate()),i.setTransition(0),i.setTranslate(u),i.updateProgress(),i.updateActiveIndex(),i.updateSlidesClasses(),(!v&&i.isBeginning||!f&&i.isEnd)&&i.updateSlidesClasses(),i.params.freeModeSticky){clearTimeout(i.mousewheel.timeout),i.mousewheel.timeout=void 0;var m=i.mousewheel.recentWheelEvents;m.length>=15&&m.shift();var g=m.length?m[m.length-1]:void 0,b=m[0];if(m.push(h),g&&(h.delta>g.delta||h.direction!==g.direction))m.splice(0);else if(m.length>=15&&h.time-b.time<500&&b.delta-h.delta>=1&&h.delta<=6){var w=r>0?.8:.2;i.mousewheel.lastEventBeforeSnap=h,m.splice(0),i.mousewheel.timeout=d.nextTick((function(){i.slideToClosest(i.params.speed,!0,void 0,w)}),0)}i.mousewheel.timeout||(i.mousewheel.timeout=d.nextTick((function(){i.mousewheel.lastEventBeforeSnap=h,m.splice(0),i.slideToClosest(i.params.speed,!0,void 0,.5)}),500))}if(c||i.emit("scroll",t),i.params.autoplay&&i.params.autoplayDisableOnInteraction&&i.autoplay.stop(),u===i.minTranslate()||u===i.maxTranslate())return!0}}else{var y={time:d.now(),delta:Math.abs(r),direction:Math.sign(r),raw:e},x=i.mousewheel.recentWheelEvents;x.length>=2&&x.shift();var E=x.length?x[x.length-1]:void 0;if(x.push(y),E?(y.direction!==E.direction||y.delta>E.delta||y.time>E.time+150)&&i.mousewheel.animateSlider(y):i.mousewheel.animateSlider(y),i.mousewheel.releaseScroll(y))return!0}return t.preventDefault?t.preventDefault():t.returnValue=!1,!1},animateSlider:function(e){return e.delta>=6&&d.now()-this.mousewheel.lastScrollTime<60||(e.direction<0?this.isEnd&&!this.params.loop||this.animating||(this.slideNext(),this.emit("scroll",e.raw)):this.isBeginning&&!this.params.loop||this.animating||(this.slidePrev(),this.emit("scroll",e.raw)),this.mousewheel.lastScrollTime=(new a.Date).getTime(),!1)},releaseScroll:function(e){var t=this.params.mousewheel;if(e.direction<0){if(this.isEnd&&!this.params.loop&&t.releaseOnEdges)return!0}else if(this.isBeginning&&!this.params.loop&&t.releaseOnEdges)return!0;return!1},enable:function(){var e=re.event();if(this.params.cssMode)return this.wrapperEl.removeEventListener(e,this.mousewheel.handle),!0;if(!e)return!1;if(this.mousewheel.enabled)return!1;var t=this.$el;return"container"!==this.params.mousewheel.eventsTarged&&(t=n(this.params.mousewheel.eventsTarged)),t.on("mouseenter",this.mousewheel.handleMouseEnter),t.on("mouseleave",this.mousewheel.handleMouseLeave),t.on(e,this.mousewheel.handle),this.mousewheel.enabled=!0,!0},disable:function(){var e=re.event();if(this.params.cssMode)return this.wrapperEl.addEventListener(e,this.mousewheel.handle),!0;if(!e)return!1;if(!this.mousewheel.enabled)return!1;var t=this.$el;return"container"!==this.params.mousewheel.eventsTarged&&(t=n(this.params.mousewheel.eventsTarged)),t.off(e,this.mousewheel.handle),this.mousewheel.enabled=!1,!0}},ne={update:function(){var e=this.params.navigation;if(!this.params.loop){var t=this.navigation,i=t.$nextEl,s=t.$prevEl;s&&s.length>0&&(this.isBeginning?s.addClass(e.disabledClass):s.removeClass(e.disabledClass),s[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](e.lockClass)),i&&i.length>0&&(this.isEnd?i.addClass(e.disabledClass):i.removeClass(e.disabledClass),i[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](e.lockClass))}},onPrevClick:function(e){e.preventDefault(),this.isBeginning&&!this.params.loop||this.slidePrev()},onNextClick:function(e){e.preventDefault(),this.isEnd&&!this.params.loop||this.slideNext()},init:function(){var e,t,i=this.params.navigation;(i.nextEl||i.prevEl)&&(i.nextEl&&(e=n(i.nextEl),this.params.uniqueNavElements&&"string"==typeof i.nextEl&&e.length>1&&1===this.$el.find(i.nextEl).length&&(e=this.$el.find(i.nextEl))),i.prevEl&&(t=n(i.prevEl),this.params.uniqueNavElements&&"string"==typeof i.prevEl&&t.length>1&&1===this.$el.find(i.prevEl).length&&(t=this.$el.find(i.prevEl))),e&&e.length>0&&e.on("click",this.navigation.onNextClick),t&&t.length>0&&t.on("click",this.navigation.onPrevClick),d.extend(this.navigation,{$nextEl:e,nextEl:e&&e[0],$prevEl:t,prevEl:t&&t[0]}))},destroy:function(){var e=this.navigation,t=e.$nextEl,i=e.$prevEl;t&&t.length&&(t.off("click",this.navigation.onNextClick),t.removeClass(this.params.navigation.disabledClass)),i&&i.length&&(i.off("click",this.navigation.onPrevClick),i.removeClass(this.params.navigation.disabledClass))}},oe={update:function(){var e=this.rtl,t=this.params.pagination;if(t.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var i,s=this.virtual&&this.params.virtual.enabled?this.virtual.slides.length:this.slides.length,a=this.pagination.$el,r=this.params.loop?Math.ceil((s-2*this.loopedSlides)/this.params.slidesPerGroup):this.snapGrid.length;if(this.params.loop?((i=Math.ceil((this.activeIndex-this.loopedSlides)/this.params.slidesPerGroup))>s-1-2*this.loopedSlides&&(i-=s-2*this.loopedSlides),i>r-1&&(i-=r),i<0&&"bullets"!==this.params.paginationType&&(i=r+i)):i=void 0!==this.snapIndex?this.snapIndex:this.activeIndex||0,"bullets"===t.type&&this.pagination.bullets&&this.pagination.bullets.length>0){var o,l,d,h=this.pagination.bullets;if(t.dynamicBullets&&(this.pagination.bulletSize=h.eq(0)[this.isHorizontal()?"outerWidth":"outerHeight"](!0),a.css(this.isHorizontal()?"width":"height",this.pagination.bulletSize*(t.dynamicMainBullets+4)+"px"),t.dynamicMainBullets>1&&void 0!==this.previousIndex&&(this.pagination.dynamicBulletIndex+=i-this.previousIndex,this.pagination.dynamicBulletIndex>t.dynamicMainBullets-1?this.pagination.dynamicBulletIndex=t.dynamicMainBullets-1:this.pagination.dynamicBulletIndex<0&&(this.pagination.dynamicBulletIndex=0)),o=i-this.pagination.dynamicBulletIndex,d=((l=o+(Math.min(h.length,t.dynamicMainBullets)-1))+o)/2),h.removeClass(t.bulletActiveClass+" "+t.bulletActiveClass+"-next "+t.bulletActiveClass+"-next-next "+t.bulletActiveClass+"-prev "+t.bulletActiveClass+"-prev-prev "+t.bulletActiveClass+"-main"),a.length>1)h.each((function(e,s){var a=n(s),r=a.index();r===i&&a.addClass(t.bulletActiveClass),t.dynamicBullets&&(r>=o&&r<=l&&a.addClass(t.bulletActiveClass+"-main"),r===o&&a.prev().addClass(t.bulletActiveClass+"-prev").prev().addClass(t.bulletActiveClass+"-prev-prev"),r===l&&a.next().addClass(t.bulletActiveClass+"-next").next().addClass(t.bulletActiveClass+"-next-next"))}));else{var p=h.eq(i),c=p.index();if(p.addClass(t.bulletActiveClass),t.dynamicBullets){for(var u=h.eq(o),v=h.eq(l),f=o;f<=l;f+=1)h.eq(f).addClass(t.bulletActiveClass+"-main");if(this.params.loop)if(c>=h.length-t.dynamicMainBullets){for(var m=t.dynamicMainBullets;m>=0;m-=1)h.eq(h.length-m).addClass(t.bulletActiveClass+"-main");h.eq(h.length-t.dynamicMainBullets-1).addClass(t.bulletActiveClass+"-prev")}else u.prev().addClass(t.bulletActiveClass+"-prev").prev().addClass(t.bulletActiveClass+"-prev-prev"),v.next().addClass(t.bulletActiveClass+"-next").next().addClass(t.bulletActiveClass+"-next-next");else u.prev().addClass(t.bulletActiveClass+"-prev").prev().addClass(t.bulletActiveClass+"-prev-prev"),v.next().addClass(t.bulletActiveClass+"-next").next().addClass(t.bulletActiveClass+"-next-next")}}if(t.dynamicBullets){var g=Math.min(h.length,t.dynamicMainBullets+4),b=(this.pagination.bulletSize*g-this.pagination.bulletSize)/2-d*this.pagination.bulletSize,w=e?"right":"left";h.css(this.isHorizontal()?w:"top",b+"px")}}if("fraction"===t.type&&(a.find("."+t.currentClass).text(t.formatFractionCurrent(i+1)),a.find("."+t.totalClass).text(t.formatFractionTotal(r))),"progressbar"===t.type){var y;y=t.progressbarOpposite?this.isHorizontal()?"vertical":"horizontal":this.isHorizontal()?"horizontal":"vertical";var x=(i+1)/r,E=1,T=1;"horizontal"===y?E=x:T=x,a.find("."+t.progressbarFillClass).transform("translate3d(0,0,0) scaleX("+E+") scaleY("+T+")").transition(this.params.speed)}"custom"===t.type&&t.renderCustom?(a.html(t.renderCustom(this,i+1,r)),this.emit("paginationRender",this,a[0])):this.emit("paginationUpdate",this,a[0]),a[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](t.lockClass)}},render:function(){var e=this.params.pagination;if(e.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var t=this.virtual&&this.params.virtual.enabled?this.virtual.slides.length:this.slides.length,i=this.pagination.$el,s="";if("bullets"===e.type){for(var a=this.params.loop?Math.ceil((t-2*this.loopedSlides)/this.params.slidesPerGroup):this.snapGrid.length,r=0;r<a;r+=1)e.renderBullet?s+=e.renderBullet.call(this,r,e.bulletClass):s+="<"+e.bulletElement+' class="'+e.bulletClass+'"></'+e.bulletElement+">";i.html(s),this.pagination.bullets=i.find("."+e.bulletClass)}"fraction"===e.type&&(s=e.renderFraction?e.renderFraction.call(this,e.currentClass,e.totalClass):'<span class="'+e.currentClass+'"></span> / <span class="'+e.totalClass+'"></span>',i.html(s)),"progressbar"===e.type&&(s=e.renderProgressbar?e.renderProgressbar.call(this,e.progressbarFillClass):'<span class="'+e.progressbarFillClass+'"></span>',i.html(s)),"custom"!==e.type&&this.emit("paginationRender",this.pagination.$el[0])}},init:function(){var e=this,t=e.params.pagination;if(t.el){var i=n(t.el);0!==i.length&&(e.params.uniqueNavElements&&"string"==typeof t.el&&i.length>1&&1===e.$el.find(t.el).length&&(i=e.$el.find(t.el)),"bullets"===t.type&&t.clickable&&i.addClass(t.clickableClass),i.addClass(t.modifierClass+t.type),"bullets"===t.type&&t.dynamicBullets&&(i.addClass(""+t.modifierClass+t.type+"-dynamic"),e.pagination.dynamicBulletIndex=0,t.dynamicMainBullets<1&&(t.dynamicMainBullets=1)),"progressbar"===t.type&&t.progressbarOpposite&&i.addClass(t.progressbarOppositeClass),t.clickable&&i.on("click","."+t.bulletClass,(function(t){t.preventDefault();var i=n(this).index()*e.params.slidesPerGroup;e.params.loop&&(i+=e.loopedSlides),e.slideTo(i)})),d.extend(e.pagination,{$el:i,el:i[0]}))}},destroy:function(){var e=this.params.pagination;if(e.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var t=this.pagination.$el;t.removeClass(e.hiddenClass),t.removeClass(e.modifierClass+e.type),this.pagination.bullets&&this.pagination.bullets.removeClass(e.bulletActiveClass),e.clickable&&t.off("click","."+e.bulletClass)}}},le={setTranslate:function(){if(this.params.scrollbar.el&&this.scrollbar.el){var e=this.scrollbar,t=this.rtlTranslate,i=this.progress,s=e.dragSize,a=e.trackSize,r=e.$dragEl,n=e.$el,o=this.params.scrollbar,l=s,d=(a-s)*i;t?(d=-d)>0?(l=s-d,d=0):-d+s>a&&(l=a+d):d<0?(l=s+d,d=0):d+s>a&&(l=a-d),this.isHorizontal()?(r.transform("translate3d("+d+"px, 0, 0)"),r[0].style.width=l+"px"):(r.transform("translate3d(0px, "+d+"px, 0)"),r[0].style.height=l+"px"),o.hide&&(clearTimeout(this.scrollbar.timeout),n[0].style.opacity=1,this.scrollbar.timeout=setTimeout((function(){n[0].style.opacity=0,n.transition(400)}),1e3))}},setTransition:function(e){this.params.scrollbar.el&&this.scrollbar.el&&this.scrollbar.$dragEl.transition(e)},updateSize:function(){if(this.params.scrollbar.el&&this.scrollbar.el){var e=this.scrollbar,t=e.$dragEl,i=e.$el;t[0].style.width="",t[0].style.height="";var s,a=this.isHorizontal()?i[0].offsetWidth:i[0].offsetHeight,r=this.size/this.virtualSize,n=r*(a/this.size);s="auto"===this.params.scrollbar.dragSize?a*r:parseInt(this.params.scrollbar.dragSize,10),this.isHorizontal()?t[0].style.width=s+"px":t[0].style.height=s+"px",i[0].style.display=r>=1?"none":"",this.params.scrollbar.hide&&(i[0].style.opacity=0),d.extend(e,{trackSize:a,divider:r,moveDivider:n,dragSize:s}),e.$el[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](this.params.scrollbar.lockClass)}},getPointerPosition:function(e){return this.isHorizontal()?"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].clientX:e.clientX:"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].clientY:e.clientY},setDragPosition:function(e){var t,i=this.scrollbar,s=this.rtlTranslate,a=i.$el,r=i.dragSize,n=i.trackSize,o=i.dragStartPos;t=(i.getPointerPosition(e)-a.offset()[this.isHorizontal()?"left":"top"]-(null!==o?o:r/2))/(n-r),t=Math.max(Math.min(t,1),0),s&&(t=1-t);var l=this.minTranslate()+(this.maxTranslate()-this.minTranslate())*t;this.updateProgress(l),this.setTranslate(l),this.updateActiveIndex(),this.updateSlidesClasses()},onDragStart:function(e){var t=this.params.scrollbar,i=this.scrollbar,s=this.$wrapperEl,a=i.$el,r=i.$dragEl;this.scrollbar.isTouched=!0,this.scrollbar.dragStartPos=e.target===r[0]||e.target===r?i.getPointerPosition(e)-e.target.getBoundingClientRect()[this.isHorizontal()?"left":"top"]:null,e.preventDefault(),e.stopPropagation(),s.transition(100),r.transition(100),i.setDragPosition(e),clearTimeout(this.scrollbar.dragTimeout),a.transition(0),t.hide&&a.css("opacity",1),this.params.cssMode&&this.$wrapperEl.css("scroll-snap-type","none"),this.emit("scrollbarDragStart",e)},onDragMove:function(e){var t=this.scrollbar,i=this.$wrapperEl,s=t.$el,a=t.$dragEl;this.scrollbar.isTouched&&(e.preventDefault?e.preventDefault():e.returnValue=!1,t.setDragPosition(e),i.transition(0),s.transition(0),a.transition(0),this.emit("scrollbarDragMove",e))},onDragEnd:function(e){var t=this.params.scrollbar,i=this.scrollbar,s=this.$wrapperEl,a=i.$el;this.scrollbar.isTouched&&(this.scrollbar.isTouched=!1,this.params.cssMode&&(this.$wrapperEl.css("scroll-snap-type",""),s.transition("")),t.hide&&(clearTimeout(this.scrollbar.dragTimeout),this.scrollbar.dragTimeout=d.nextTick((function(){a.css("opacity",0),a.transition(400)}),1e3)),this.emit("scrollbarDragEnd",e),t.snapOnRelease&&this.slideToClosest())},enableDraggable:function(){if(this.params.scrollbar.el){var e=this.scrollbar,t=this.touchEventsTouch,s=this.touchEventsDesktop,a=this.params,r=e.$el[0],n=!(!h.passiveListener||!a.passiveListeners)&&{passive:!1,capture:!1},o=!(!h.passiveListener||!a.passiveListeners)&&{passive:!0,capture:!1};h.touch?(r.addEventListener(t.start,this.scrollbar.onDragStart,n),r.addEventListener(t.move,this.scrollbar.onDragMove,n),r.addEventListener(t.end,this.scrollbar.onDragEnd,o)):(r.addEventListener(s.start,this.scrollbar.onDragStart,n),i.addEventListener(s.move,this.scrollbar.onDragMove,n),i.addEventListener(s.end,this.scrollbar.onDragEnd,o))}},disableDraggable:function(){if(this.params.scrollbar.el){var e=this.scrollbar,t=this.touchEventsTouch,s=this.touchEventsDesktop,a=this.params,r=e.$el[0],n=!(!h.passiveListener||!a.passiveListeners)&&{passive:!1,capture:!1},o=!(!h.passiveListener||!a.passiveListeners)&&{passive:!0,capture:!1};h.touch?(r.removeEventListener(t.start,this.scrollbar.onDragStart,n),r.removeEventListener(t.move,this.scrollbar.onDragMove,n),r.removeEventListener(t.end,this.scrollbar.onDragEnd,o)):(r.removeEventListener(s.start,this.scrollbar.onDragStart,n),i.removeEventListener(s.move,this.scrollbar.onDragMove,n),i.removeEventListener(s.end,this.scrollbar.onDragEnd,o))}},init:function(){if(this.params.scrollbar.el){var e=this.scrollbar,t=this.$el,i=this.params.scrollbar,s=n(i.el);this.params.uniqueNavElements&&"string"==typeof i.el&&s.length>1&&1===t.find(i.el).length&&(s=t.find(i.el));var a=s.find("."+this.params.scrollbar.dragClass);0===a.length&&(a=n('<div class="'+this.params.scrollbar.dragClass+'"></div>'),s.append(a)),d.extend(e,{$el:s,el:s[0],$dragEl:a,dragEl:a[0]}),i.draggable&&e.enableDraggable()}},destroy:function(){this.scrollbar.disableDraggable()}},de={setTransform:function(e,t){var i=this.rtl,s=n(e),a=i?-1:1,r=s.attr("data-swiper-parallax")||"0",o=s.attr("data-swiper-parallax-x"),l=s.attr("data-swiper-parallax-y"),d=s.attr("data-swiper-parallax-scale"),h=s.attr("data-swiper-parallax-opacity");if(o||l?(o=o||"0",l=l||"0"):this.isHorizontal()?(o=r,l="0"):(l=r,o="0"),o=o.indexOf("%")>=0?parseInt(o,10)*t*a+"%":o*t*a+"px",l=l.indexOf("%")>=0?parseInt(l,10)*t+"%":l*t+"px",null!=h){var p=h-(h-1)*(1-Math.abs(t));s[0].style.opacity=p}if(null==d)s.transform("translate3d("+o+", "+l+", 0px)");else{var c=d-(d-1)*(1-Math.abs(t));s.transform("translate3d("+o+", "+l+", 0px) scale("+c+")")}},setTranslate:function(){var e=this,t=e.$el,i=e.slides,s=e.progress,a=e.snapGrid;t.children("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each((function(t,i){e.parallax.setTransform(i,s)})),i.each((function(t,i){var r=i.progress;e.params.slidesPerGroup>1&&"auto"!==e.params.slidesPerView&&(r+=Math.ceil(t/2)-s*(a.length-1)),r=Math.min(Math.max(r,-1),1),n(i).find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each((function(t,i){e.parallax.setTransform(i,r)}))}))},setTransition:function(e){void 0===e&&(e=this.params.speed);this.$el.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each((function(t,i){var s=n(i),a=parseInt(s.attr("data-swiper-parallax-duration"),10)||e;0===e&&(a=0),s.transition(a)}))}},he={getDistanceBetweenTouches:function(e){if(e.targetTouches.length<2)return 1;var t=e.targetTouches[0].pageX,i=e.targetTouches[0].pageY,s=e.targetTouches[1].pageX,a=e.targetTouches[1].pageY;return Math.sqrt(Math.pow(s-t,2)+Math.pow(a-i,2))},onGestureStart:function(e){var t=this.params.zoom,i=this.zoom,s=i.gesture;if(i.fakeGestureTouched=!1,i.fakeGestureMoved=!1,!h.gestures){if("touchstart"!==e.type||"touchstart"===e.type&&e.targetTouches.length<2)return;i.fakeGestureTouched=!0,s.scaleStart=he.getDistanceBetweenTouches(e)}s.$slideEl&&s.$slideEl.length||(s.$slideEl=n(e.target).closest("."+this.params.slideClass),0===s.$slideEl.length&&(s.$slideEl=this.slides.eq(this.activeIndex)),s.$imageEl=s.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"),s.$imageWrapEl=s.$imageEl.parent("."+t.containerClass),s.maxRatio=s.$imageWrapEl.attr("data-swiper-zoom")||t.maxRatio,0!==s.$imageWrapEl.length)?(s.$imageEl&&s.$imageEl.transition(0),this.zoom.isScaling=!0):s.$imageEl=void 0},onGestureChange:function(e){var t=this.params.zoom,i=this.zoom,s=i.gesture;if(!h.gestures){if("touchmove"!==e.type||"touchmove"===e.type&&e.targetTouches.length<2)return;i.fakeGestureMoved=!0,s.scaleMove=he.getDistanceBetweenTouches(e)}s.$imageEl&&0!==s.$imageEl.length&&(i.scale=h.gestures?e.scale*i.currentScale:s.scaleMove/s.scaleStart*i.currentScale,i.scale>s.maxRatio&&(i.scale=s.maxRatio-1+Math.pow(i.scale-s.maxRatio+1,.5)),i.scale<t.minRatio&&(i.scale=t.minRatio+1-Math.pow(t.minRatio-i.scale+1,.5)),s.$imageEl.transform("translate3d(0,0,0) scale("+i.scale+")"))},onGestureEnd:function(e){var t=this.params.zoom,i=this.zoom,s=i.gesture;if(!h.gestures){if(!i.fakeGestureTouched||!i.fakeGestureMoved)return;if("touchend"!==e.type||"touchend"===e.type&&e.changedTouches.length<2&&!A.android)return;i.fakeGestureTouched=!1,i.fakeGestureMoved=!1}s.$imageEl&&0!==s.$imageEl.length&&(i.scale=Math.max(Math.min(i.scale,s.maxRatio),t.minRatio),s.$imageEl.transition(this.params.speed).transform("translate3d(0,0,0) scale("+i.scale+")"),i.currentScale=i.scale,i.isScaling=!1,1===i.scale&&(s.$slideEl=void 0))},onTouchStart:function(e){var t=this.zoom,i=t.gesture,s=t.image;i.$imageEl&&0!==i.$imageEl.length&&(s.isTouched||(A.android&&e.cancelable&&e.preventDefault(),s.isTouched=!0,s.touchesStart.x="touchstart"===e.type?e.targetTouches[0].pageX:e.pageX,s.touchesStart.y="touchstart"===e.type?e.targetTouches[0].pageY:e.pageY))},onTouchMove:function(e){var t=this.zoom,i=t.gesture,s=t.image,a=t.velocity;if(i.$imageEl&&0!==i.$imageEl.length&&(this.allowClick=!1,s.isTouched&&i.$slideEl)){s.isMoved||(s.width=i.$imageEl[0].offsetWidth,s.height=i.$imageEl[0].offsetHeight,s.startX=d.getTranslate(i.$imageWrapEl[0],"x")||0,s.startY=d.getTranslate(i.$imageWrapEl[0],"y")||0,i.slideWidth=i.$slideEl[0].offsetWidth,i.slideHeight=i.$slideEl[0].offsetHeight,i.$imageWrapEl.transition(0),this.rtl&&(s.startX=-s.startX,s.startY=-s.startY));var r=s.width*t.scale,n=s.height*t.scale;if(!(r<i.slideWidth&&n<i.slideHeight)){if(s.minX=Math.min(i.slideWidth/2-r/2,0),s.maxX=-s.minX,s.minY=Math.min(i.slideHeight/2-n/2,0),s.maxY=-s.minY,s.touchesCurrent.x="touchmove"===e.type?e.targetTouches[0].pageX:e.pageX,s.touchesCurrent.y="touchmove"===e.type?e.targetTouches[0].pageY:e.pageY,!s.isMoved&&!t.isScaling){if(this.isHorizontal()&&(Math.floor(s.minX)===Math.floor(s.startX)&&s.touchesCurrent.x<s.touchesStart.x||Math.floor(s.maxX)===Math.floor(s.startX)&&s.touchesCurrent.x>s.touchesStart.x))return void(s.isTouched=!1);if(!this.isHorizontal()&&(Math.floor(s.minY)===Math.floor(s.startY)&&s.touchesCurrent.y<s.touchesStart.y||Math.floor(s.maxY)===Math.floor(s.startY)&&s.touchesCurrent.y>s.touchesStart.y))return void(s.isTouched=!1)}e.cancelable&&e.preventDefault(),e.stopPropagation(),s.isMoved=!0,s.currentX=s.touchesCurrent.x-s.touchesStart.x+s.startX,s.currentY=s.touchesCurrent.y-s.touchesStart.y+s.startY,s.currentX<s.minX&&(s.currentX=s.minX+1-Math.pow(s.minX-s.currentX+1,.8)),s.currentX>s.maxX&&(s.currentX=s.maxX-1+Math.pow(s.currentX-s.maxX+1,.8)),s.currentY<s.minY&&(s.currentY=s.minY+1-Math.pow(s.minY-s.currentY+1,.8)),s.currentY>s.maxY&&(s.currentY=s.maxY-1+Math.pow(s.currentY-s.maxY+1,.8)),a.prevPositionX||(a.prevPositionX=s.touchesCurrent.x),a.prevPositionY||(a.prevPositionY=s.touchesCurrent.y),a.prevTime||(a.prevTime=Date.now()),a.x=(s.touchesCurrent.x-a.prevPositionX)/(Date.now()-a.prevTime)/2,a.y=(s.touchesCurrent.y-a.prevPositionY)/(Date.now()-a.prevTime)/2,Math.abs(s.touchesCurrent.x-a.prevPositionX)<2&&(a.x=0),Math.abs(s.touchesCurrent.y-a.prevPositionY)<2&&(a.y=0),a.prevPositionX=s.touchesCurrent.x,a.prevPositionY=s.touchesCurrent.y,a.prevTime=Date.now(),i.$imageWrapEl.transform("translate3d("+s.currentX+"px, "+s.currentY+"px,0)")}}},onTouchEnd:function(){var e=this.zoom,t=e.gesture,i=e.image,s=e.velocity;if(t.$imageEl&&0!==t.$imageEl.length){if(!i.isTouched||!i.isMoved)return i.isTouched=!1,void(i.isMoved=!1);i.isTouched=!1,i.isMoved=!1;var a=300,r=300,n=s.x*a,o=i.currentX+n,l=s.y*r,d=i.currentY+l;0!==s.x&&(a=Math.abs((o-i.currentX)/s.x)),0!==s.y&&(r=Math.abs((d-i.currentY)/s.y));var h=Math.max(a,r);i.currentX=o,i.currentY=d;var p=i.width*e.scale,c=i.height*e.scale;i.minX=Math.min(t.slideWidth/2-p/2,0),i.maxX=-i.minX,i.minY=Math.min(t.slideHeight/2-c/2,0),i.maxY=-i.minY,i.currentX=Math.max(Math.min(i.currentX,i.maxX),i.minX),i.currentY=Math.max(Math.min(i.currentY,i.maxY),i.minY),t.$imageWrapEl.transition(h).transform("translate3d("+i.currentX+"px, "+i.currentY+"px,0)")}},onTransitionEnd:function(){var e=this.zoom,t=e.gesture;t.$slideEl&&this.previousIndex!==this.activeIndex&&(t.$imageEl&&t.$imageEl.transform("translate3d(0,0,0) scale(1)"),t.$imageWrapEl&&t.$imageWrapEl.transform("translate3d(0,0,0)"),e.scale=1,e.currentScale=1,t.$slideEl=void 0,t.$imageEl=void 0,t.$imageWrapEl=void 0)},toggle:function(e){var t=this.zoom;t.scale&&1!==t.scale?t.out():t.in(e)},in:function(e){var t,i,s,a,r,n,o,l,d,h,p,c,u,v,f,m,g=this.zoom,b=this.params.zoom,w=g.gesture,y=g.image;(w.$slideEl||(this.params.virtual&&this.params.virtual.enabled&&this.virtual?w.$slideEl=this.$wrapperEl.children("."+this.params.slideActiveClass):w.$slideEl=this.slides.eq(this.activeIndex),w.$imageEl=w.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"),w.$imageWrapEl=w.$imageEl.parent("."+b.containerClass)),w.$imageEl&&0!==w.$imageEl.length)&&(w.$slideEl.addClass(""+b.zoomedSlideClass),void 0===y.touchesStart.x&&e?(t="touchend"===e.type?e.changedTouches[0].pageX:e.pageX,i="touchend"===e.type?e.changedTouches[0].pageY:e.pageY):(t=y.touchesStart.x,i=y.touchesStart.y),g.scale=w.$imageWrapEl.attr("data-swiper-zoom")||b.maxRatio,g.currentScale=w.$imageWrapEl.attr("data-swiper-zoom")||b.maxRatio,e?(f=w.$slideEl[0].offsetWidth,m=w.$slideEl[0].offsetHeight,s=w.$slideEl.offset().left+f/2-t,a=w.$slideEl.offset().top+m/2-i,o=w.$imageEl[0].offsetWidth,l=w.$imageEl[0].offsetHeight,d=o*g.scale,h=l*g.scale,u=-(p=Math.min(f/2-d/2,0)),v=-(c=Math.min(m/2-h/2,0)),(r=s*g.scale)<p&&(r=p),r>u&&(r=u),(n=a*g.scale)<c&&(n=c),n>v&&(n=v)):(r=0,n=0),w.$imageWrapEl.transition(300).transform("translate3d("+r+"px, "+n+"px,0)"),w.$imageEl.transition(300).transform("translate3d(0,0,0) scale("+g.scale+")"))},out:function(){var e=this.zoom,t=this.params.zoom,i=e.gesture;i.$slideEl||(this.params.virtual&&this.params.virtual.enabled&&this.virtual?i.$slideEl=this.$wrapperEl.children("."+this.params.slideActiveClass):i.$slideEl=this.slides.eq(this.activeIndex),i.$imageEl=i.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"),i.$imageWrapEl=i.$imageEl.parent("."+t.containerClass)),i.$imageEl&&0!==i.$imageEl.length&&(e.scale=1,e.currentScale=1,i.$imageWrapEl.transition(300).transform("translate3d(0,0,0)"),i.$imageEl.transition(300).transform("translate3d(0,0,0) scale(1)"),i.$slideEl.removeClass(""+t.zoomedSlideClass),i.$slideEl=void 0)},enable:function(){var e=this.zoom;if(!e.enabled){e.enabled=!0;var t=!("touchstart"!==this.touchEvents.start||!h.passiveListener||!this.params.passiveListeners)&&{passive:!0,capture:!1},i=!h.passiveListener||{passive:!1,capture:!0},s="."+this.params.slideClass;h.gestures?(this.$wrapperEl.on("gesturestart",s,e.onGestureStart,t),this.$wrapperEl.on("gesturechange",s,e.onGestureChange,t),this.$wrapperEl.on("gestureend",s,e.onGestureEnd,t)):"touchstart"===this.touchEvents.start&&(this.$wrapperEl.on(this.touchEvents.start,s,e.onGestureStart,t),this.$wrapperEl.on(this.touchEvents.move,s,e.onGestureChange,i),this.$wrapperEl.on(this.touchEvents.end,s,e.onGestureEnd,t),this.touchEvents.cancel&&this.$wrapperEl.on(this.touchEvents.cancel,s,e.onGestureEnd,t)),this.$wrapperEl.on(this.touchEvents.move,"."+this.params.zoom.containerClass,e.onTouchMove,i)}},disable:function(){var e=this.zoom;if(e.enabled){this.zoom.enabled=!1;var t=!("touchstart"!==this.touchEvents.start||!h.passiveListener||!this.params.passiveListeners)&&{passive:!0,capture:!1},i=!h.passiveListener||{passive:!1,capture:!0},s="."+this.params.slideClass;h.gestures?(this.$wrapperEl.off("gesturestart",s,e.onGestureStart,t),this.$wrapperEl.off("gesturechange",s,e.onGestureChange,t),this.$wrapperEl.off("gestureend",s,e.onGestureEnd,t)):"touchstart"===this.touchEvents.start&&(this.$wrapperEl.off(this.touchEvents.start,s,e.onGestureStart,t),this.$wrapperEl.off(this.touchEvents.move,s,e.onGestureChange,i),this.$wrapperEl.off(this.touchEvents.end,s,e.onGestureEnd,t),this.touchEvents.cancel&&this.$wrapperEl.off(this.touchEvents.cancel,s,e.onGestureEnd,t)),this.$wrapperEl.off(this.touchEvents.move,"."+this.params.zoom.containerClass,e.onTouchMove,i)}}},pe={loadInSlide:function(e,t){void 0===t&&(t=!0);var i=this,s=i.params.lazy;if(void 0!==e&&0!==i.slides.length){var a=i.virtual&&i.params.virtual.enabled?i.$wrapperEl.children("."+i.params.slideClass+'[data-swiper-slide-index="'+e+'"]'):i.slides.eq(e),r=a.find("."+s.elementClass+":not(."+s.loadedClass+"):not(."+s.loadingClass+")");!a.hasClass(s.elementClass)||a.hasClass(s.loadedClass)||a.hasClass(s.loadingClass)||(r=r.add(a[0])),0!==r.length&&r.each((function(e,r){var o=n(r);o.addClass(s.loadingClass);var l=o.attr("data-background"),d=o.attr("data-src"),h=o.attr("data-srcset"),p=o.attr("data-sizes"),c=o.parent("picture");i.loadImage(o[0],d||l,h,p,!1,(function(){if(null!=i&&i&&(!i||i.params)&&!i.destroyed){if(l?(o.css("background-image",'url("'+l+'")'),o.removeAttr("data-background")):(h&&(o.attr("srcset",h),o.removeAttr("data-srcset")),p&&(o.attr("sizes",p),o.removeAttr("data-sizes")),c.length&&c.children("source").each((function(e,t){var i=n(t);i.attr("data-srcset")&&(i.attr("srcset",i.attr("data-srcset")),i.removeAttr("data-srcset"))})),d&&(o.attr("src",d),o.removeAttr("data-src"))),o.addClass(s.loadedClass).removeClass(s.loadingClass),a.find("."+s.preloaderClass).remove(),i.params.loop&&t){var e=a.attr("data-swiper-slide-index");if(a.hasClass(i.params.slideDuplicateClass)){var r=i.$wrapperEl.children('[data-swiper-slide-index="'+e+'"]:not(.'+i.params.slideDuplicateClass+")");i.lazy.loadInSlide(r.index(),!1)}else{var u=i.$wrapperEl.children("."+i.params.slideDuplicateClass+'[data-swiper-slide-index="'+e+'"]');i.lazy.loadInSlide(u.index(),!1)}}i.emit("lazyImageReady",a[0],o[0]),i.params.autoHeight&&i.updateAutoHeight()}})),i.emit("lazyImageLoad",a[0],o[0])}))}},load:function(){var e=this,t=e.$wrapperEl,i=e.params,s=e.slides,a=e.activeIndex,r=e.virtual&&i.virtual.enabled,o=i.lazy,l=i.slidesPerView;function d(e){if(r){if(t.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]').length)return!0}else if(s[e])return!0;return!1}function h(e){return r?n(e).attr("data-swiper-slide-index"):n(e).index()}if("auto"===l&&(l=0),e.lazy.initialImageLoaded||(e.lazy.initialImageLoaded=!0),e.params.watchSlidesVisibility)t.children("."+i.slideVisibleClass).each((function(t,i){var s=r?n(i).attr("data-swiper-slide-index"):n(i).index();e.lazy.loadInSlide(s)}));else if(l>1)for(var p=a;p<a+l;p+=1)d(p)&&e.lazy.loadInSlide(p);else e.lazy.loadInSlide(a);if(o.loadPrevNext)if(l>1||o.loadPrevNextAmount&&o.loadPrevNextAmount>1){for(var c=o.loadPrevNextAmount,u=l,v=Math.min(a+u+Math.max(c,u),s.length),f=Math.max(a-Math.max(u,c),0),m=a+l;m<v;m+=1)d(m)&&e.lazy.loadInSlide(m);for(var g=f;g<a;g+=1)d(g)&&e.lazy.loadInSlide(g)}else{var b=t.children("."+i.slideNextClass);b.length>0&&e.lazy.loadInSlide(h(b));var w=t.children("."+i.slidePrevClass);w.length>0&&e.lazy.loadInSlide(h(w))}}},ce={LinearSpline:function(e,t){var i,s,a,r,n,o=function(e,t){for(s=-1,i=e.length;i-s>1;)e[a=i+s>>1]<=t?s=a:i=a;return i};return this.x=e,this.y=t,this.lastIndex=e.length-1,this.interpolate=function(e){return e?(n=o(this.x,e),r=n-1,(e-this.x[r])*(this.y[n]-this.y[r])/(this.x[n]-this.x[r])+this.y[r]):0},this},getInterpolateFunction:function(e){this.controller.spline||(this.controller.spline=this.params.loop?new ce.LinearSpline(this.slidesGrid,e.slidesGrid):new ce.LinearSpline(this.snapGrid,e.snapGrid))},setTranslate:function(e,t){var i,s,a=this,r=a.controller.control;function n(e){var t=a.rtlTranslate?-a.translate:a.translate;"slide"===a.params.controller.by&&(a.controller.getInterpolateFunction(e),s=-a.controller.spline.interpolate(-t)),s&&"container"!==a.params.controller.by||(i=(e.maxTranslate()-e.minTranslate())/(a.maxTranslate()-a.minTranslate()),s=(t-a.minTranslate())*i+e.minTranslate()),a.params.controller.inverse&&(s=e.maxTranslate()-s),e.updateProgress(s),e.setTranslate(s,a),e.updateActiveIndex(),e.updateSlidesClasses()}if(Array.isArray(r))for(var o=0;o<r.length;o+=1)r[o]!==t&&r[o]instanceof j&&n(r[o]);else r instanceof j&&t!==r&&n(r)},setTransition:function(e,t){var i,s=this,a=s.controller.control;function r(t){t.setTransition(e,s),0!==e&&(t.transitionStart(),t.params.autoHeight&&d.nextTick((function(){t.updateAutoHeight()})),t.$wrapperEl.transitionEnd((function(){a&&(t.params.loop&&"slide"===s.params.controller.by&&t.loopFix(),t.transitionEnd())})))}if(Array.isArray(a))for(i=0;i<a.length;i+=1)a[i]!==t&&a[i]instanceof j&&r(a[i]);else a instanceof j&&t!==a&&r(a)}},ue={makeElFocusable:function(e){return e.attr("tabIndex","0"),e},makeElNotFocusable:function(e){return e.attr("tabIndex","-1"),e},addElRole:function(e,t){return e.attr("role",t),e},addElLabel:function(e,t){return e.attr("aria-label",t),e},disableEl:function(e){return e.attr("aria-disabled",!0),e},enableEl:function(e){return e.attr("aria-disabled",!1),e},onEnterKey:function(e){var t=this.params.a11y;if(13===e.keyCode){var i=n(e.target);this.navigation&&this.navigation.$nextEl&&i.is(this.navigation.$nextEl)&&(this.isEnd&&!this.params.loop||this.slideNext(),this.isEnd?this.a11y.notify(t.lastSlideMessage):this.a11y.notify(t.nextSlideMessage)),this.navigation&&this.navigation.$prevEl&&i.is(this.navigation.$prevEl)&&(this.isBeginning&&!this.params.loop||this.slidePrev(),this.isBeginning?this.a11y.notify(t.firstSlideMessage):this.a11y.notify(t.prevSlideMessage)),this.pagination&&i.is("."+this.params.pagination.bulletClass)&&i[0].click()}},notify:function(e){var t=this.a11y.liveRegion;0!==t.length&&(t.html(""),t.html(e))},updateNavigation:function(){if(!this.params.loop&&this.navigation){var e=this.navigation,t=e.$nextEl,i=e.$prevEl;i&&i.length>0&&(this.isBeginning?(this.a11y.disableEl(i),this.a11y.makeElNotFocusable(i)):(this.a11y.enableEl(i),this.a11y.makeElFocusable(i))),t&&t.length>0&&(this.isEnd?(this.a11y.disableEl(t),this.a11y.makeElNotFocusable(t)):(this.a11y.enableEl(t),this.a11y.makeElFocusable(t)))}},updatePagination:function(){var e=this,t=e.params.a11y;e.pagination&&e.params.pagination.clickable&&e.pagination.bullets&&e.pagination.bullets.length&&e.pagination.bullets.each((function(i,s){var a=n(s);e.a11y.makeElFocusable(a),e.a11y.addElRole(a,"button"),e.a11y.addElLabel(a,t.paginationBulletMessage.replace(/\{\{index\}\}/,a.index()+1))}))},init:function(){this.$el.append(this.a11y.liveRegion);var e,t,i=this.params.a11y;this.navigation&&this.navigation.$nextEl&&(e=this.navigation.$nextEl),this.navigation&&this.navigation.$prevEl&&(t=this.navigation.$prevEl),e&&(this.a11y.makeElFocusable(e),this.a11y.addElRole(e,"button"),this.a11y.addElLabel(e,i.nextSlideMessage),e.on("keydown",this.a11y.onEnterKey)),t&&(this.a11y.makeElFocusable(t),this.a11y.addElRole(t,"button"),this.a11y.addElLabel(t,i.prevSlideMessage),t.on("keydown",this.a11y.onEnterKey)),this.pagination&&this.params.pagination.clickable&&this.pagination.bullets&&this.pagination.bullets.length&&this.pagination.$el.on("keydown","."+this.params.pagination.bulletClass,this.a11y.onEnterKey)},destroy:function(){var e,t;this.a11y.liveRegion&&this.a11y.liveRegion.length>0&&this.a11y.liveRegion.remove(),this.navigation&&this.navigation.$nextEl&&(e=this.navigation.$nextEl),this.navigation&&this.navigation.$prevEl&&(t=this.navigation.$prevEl),e&&e.off("keydown",this.a11y.onEnterKey),t&&t.off("keydown",this.a11y.onEnterKey),this.pagination&&this.params.pagination.clickable&&this.pagination.bullets&&this.pagination.bullets.length&&this.pagination.$el.off("keydown","."+this.params.pagination.bulletClass,this.a11y.onEnterKey)}},ve={init:function(){if(this.params.history){if(!a.history||!a.history.pushState)return this.params.history.enabled=!1,void(this.params.hashNavigation.enabled=!0);var e=this.history;e.initialized=!0,e.paths=ve.getPathValues(),(e.paths.key||e.paths.value)&&(e.scrollToSlide(0,e.paths.value,this.params.runCallbacksOnInit),this.params.history.replaceState||a.addEventListener("popstate",this.history.setHistoryPopState))}},destroy:function(){this.params.history.replaceState||a.removeEventListener("popstate",this.history.setHistoryPopState)},setHistoryPopState:function(){this.history.paths=ve.getPathValues(),this.history.scrollToSlide(this.params.speed,this.history.paths.value,!1)},getPathValues:function(){var e=a.location.pathname.slice(1).split("/").filter((function(e){return""!==e})),t=e.length;return{key:e[t-2],value:e[t-1]}},setHistory:function(e,t){if(this.history.initialized&&this.params.history.enabled){var i=this.slides.eq(t),s=ve.slugify(i.attr("data-history"));a.location.pathname.includes(e)||(s=e+"/"+s);var r=a.history.state;r&&r.value===s||(this.params.history.replaceState?a.history.replaceState({value:s},null,s):a.history.pushState({value:s},null,s))}},slugify:function(e){return e.toString().replace(/\s+/g,"-").replace(/[^\w-]+/g,"").replace(/--+/g,"-").replace(/^-+/,"").replace(/-+$/,"")},scrollToSlide:function(e,t,i){if(t)for(var s=0,a=this.slides.length;s<a;s+=1){var r=this.slides.eq(s);if(ve.slugify(r.attr("data-history"))===t&&!r.hasClass(this.params.slideDuplicateClass)){var n=r.index();this.slideTo(n,e,i)}}else this.slideTo(0,e,i)}},fe={onHashCange:function(){this.emit("hashChange");var e=i.location.hash.replace("#","");if(e!==this.slides.eq(this.activeIndex).attr("data-hash")){var t=this.$wrapperEl.children("."+this.params.slideClass+'[data-hash="'+e+'"]').index();if(void 0===t)return;this.slideTo(t)}},setHash:function(){if(this.hashNavigation.initialized&&this.params.hashNavigation.enabled)if(this.params.hashNavigation.replaceState&&a.history&&a.history.replaceState)a.history.replaceState(null,null,"#"+this.slides.eq(this.activeIndex).attr("data-hash")||""),this.emit("hashSet");else{var e=this.slides.eq(this.activeIndex),t=e.attr("data-hash")||e.attr("data-history");i.location.hash=t||"",this.emit("hashSet")}},init:function(){if(!(!this.params.hashNavigation.enabled||this.params.history&&this.params.history.enabled)){this.hashNavigation.initialized=!0;var e=i.location.hash.replace("#","");if(e)for(var t=0,s=this.slides.length;t<s;t+=1){var r=this.slides.eq(t);if((r.attr("data-hash")||r.attr("data-history"))===e&&!r.hasClass(this.params.slideDuplicateClass)){var o=r.index();this.slideTo(o,0,this.params.runCallbacksOnInit,!0)}}this.params.hashNavigation.watchState&&n(a).on("hashchange",this.hashNavigation.onHashCange)}},destroy:function(){this.params.hashNavigation.watchState&&n(a).off("hashchange",this.hashNavigation.onHashCange)}},me={run:function(){var e=this,t=e.slides.eq(e.activeIndex),i=e.params.autoplay.delay;t.attr("data-swiper-autoplay")&&(i=t.attr("data-swiper-autoplay")||e.params.autoplay.delay),clearTimeout(e.autoplay.timeout),e.autoplay.timeout=d.nextTick((function(){e.params.autoplay.reverseDirection?e.params.loop?(e.loopFix(),e.slidePrev(e.params.speed,!0,!0),e.emit("autoplay")):e.isBeginning?e.params.autoplay.stopOnLastSlide?e.autoplay.stop():(e.slideTo(e.slides.length-1,e.params.speed,!0,!0),e.emit("autoplay")):(e.slidePrev(e.params.speed,!0,!0),e.emit("autoplay")):e.params.loop?(e.loopFix(),e.slideNext(e.params.speed,!0,!0),e.emit("autoplay")):e.isEnd?e.params.autoplay.stopOnLastSlide?e.autoplay.stop():(e.slideTo(0,e.params.speed,!0,!0),e.emit("autoplay")):(e.slideNext(e.params.speed,!0,!0),e.emit("autoplay")),e.params.cssMode&&e.autoplay.running&&e.autoplay.run()}),i)},start:function(){return void 0===this.autoplay.timeout&&(!this.autoplay.running&&(this.autoplay.running=!0,this.emit("autoplayStart"),this.autoplay.run(),!0))},stop:function(){return!!this.autoplay.running&&(void 0!==this.autoplay.timeout&&(this.autoplay.timeout&&(clearTimeout(this.autoplay.timeout),this.autoplay.timeout=void 0),this.autoplay.running=!1,this.emit("autoplayStop"),!0))},pause:function(e){this.autoplay.running&&(this.autoplay.paused||(this.autoplay.timeout&&clearTimeout(this.autoplay.timeout),this.autoplay.paused=!0,0!==e&&this.params.autoplay.waitForTransition?(this.$wrapperEl[0].addEventListener("transitionend",this.autoplay.onTransitionEnd),this.$wrapperEl[0].addEventListener("webkitTransitionEnd",this.autoplay.onTransitionEnd)):(this.autoplay.paused=!1,this.autoplay.run())))}},ge={setTranslate:function(){for(var e=this.slides,t=0;t<e.length;t+=1){var i=this.slides.eq(t),s=-i[0].swiperSlideOffset;this.params.virtualTranslate||(s-=this.translate);var a=0;this.isHorizontal()||(a=s,s=0);var r=this.params.fadeEffect.crossFade?Math.max(1-Math.abs(i[0].progress),0):1+Math.min(Math.max(i[0].progress,-1),0);i.css({opacity:r}).transform("translate3d("+s+"px, "+a+"px, 0px)")}},setTransition:function(e){var t=this,i=t.slides,s=t.$wrapperEl;if(i.transition(e),t.params.virtualTranslate&&0!==e){var a=!1;i.transitionEnd((function(){if(!a&&t&&!t.destroyed){a=!0,t.animating=!1;for(var e=["webkitTransitionEnd","transitionend"],i=0;i<e.length;i+=1)s.trigger(e[i])}}))}}},be={setTranslate:function(){var e,t=this.$el,i=this.$wrapperEl,s=this.slides,a=this.width,r=this.height,o=this.rtlTranslate,l=this.size,d=this.params.cubeEffect,h=this.isHorizontal(),p=this.virtual&&this.params.virtual.enabled,c=0;d.shadow&&(h?(0===(e=i.find(".swiper-cube-shadow")).length&&(e=n('<div class="swiper-cube-shadow"></div>'),i.append(e)),e.css({height:a+"px"})):0===(e=t.find(".swiper-cube-shadow")).length&&(e=n('<div class="swiper-cube-shadow"></div>'),t.append(e)));for(var u=0;u<s.length;u+=1){var v=s.eq(u),f=u;p&&(f=parseInt(v.attr("data-swiper-slide-index"),10));var m=90*f,g=Math.floor(m/360);o&&(m=-m,g=Math.floor(-m/360));var b=Math.max(Math.min(v[0].progress,1),-1),w=0,y=0,x=0;f%4==0?(w=4*-g*l,x=0):(f-1)%4==0?(w=0,x=4*-g*l):(f-2)%4==0?(w=l+4*g*l,x=l):(f-3)%4==0&&(w=-l,x=3*l+4*l*g),o&&(w=-w),h||(y=w,w=0);var E="rotateX("+(h?0:-m)+"deg) rotateY("+(h?m:0)+"deg) translate3d("+w+"px, "+y+"px, "+x+"px)";if(b<=1&&b>-1&&(c=90*f+90*b,o&&(c=90*-f-90*b)),v.transform(E),d.slideShadows){var T=h?v.find(".swiper-slide-shadow-left"):v.find(".swiper-slide-shadow-top"),S=h?v.find(".swiper-slide-shadow-right"):v.find(".swiper-slide-shadow-bottom");0===T.length&&(T=n('<div class="swiper-slide-shadow-'+(h?"left":"top")+'"></div>'),v.append(T)),0===S.length&&(S=n('<div class="swiper-slide-shadow-'+(h?"right":"bottom")+'"></div>'),v.append(S)),T.length&&(T[0].style.opacity=Math.max(-b,0)),S.length&&(S[0].style.opacity=Math.max(b,0))}}if(i.css({"-webkit-transform-origin":"50% 50% -"+l/2+"px","-moz-transform-origin":"50% 50% -"+l/2+"px","-ms-transform-origin":"50% 50% -"+l/2+"px","transform-origin":"50% 50% -"+l/2+"px"}),d.shadow)if(h)e.transform("translate3d(0px, "+(a/2+d.shadowOffset)+"px, "+-a/2+"px) rotateX(90deg) rotateZ(0deg) scale("+d.shadowScale+")");else{var C=Math.abs(c)-90*Math.floor(Math.abs(c)/90),M=1.5-(Math.sin(2*C*Math.PI/360)/2+Math.cos(2*C*Math.PI/360)/2),P=d.shadowScale,z=d.shadowScale/M,k=d.shadowOffset;e.transform("scale3d("+P+", 1, "+z+") translate3d(0px, "+(r/2+k)+"px, "+-r/2/z+"px) rotateX(-90deg)")}var $=_.isSafari||_.isUiWebView?-l/2:0;i.transform("translate3d(0px,0,"+$+"px) rotateX("+(this.isHorizontal()?0:c)+"deg) rotateY("+(this.isHorizontal()?-c:0)+"deg)")},setTransition:function(e){var t=this.$el;this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),this.params.cubeEffect.shadow&&!this.isHorizontal()&&t.find(".swiper-cube-shadow").transition(e)}},we={setTranslate:function(){for(var e=this.slides,t=this.rtlTranslate,i=0;i<e.length;i+=1){var s=e.eq(i),a=s[0].progress;this.params.flipEffect.limitRotation&&(a=Math.max(Math.min(s[0].progress,1),-1));var r=-180*a,o=0,l=-s[0].swiperSlideOffset,d=0;if(this.isHorizontal()?t&&(r=-r):(d=l,l=0,o=-r,r=0),s[0].style.zIndex=-Math.abs(Math.round(a))+e.length,this.params.flipEffect.slideShadows){var h=this.isHorizontal()?s.find(".swiper-slide-shadow-left"):s.find(".swiper-slide-shadow-top"),p=this.isHorizontal()?s.find(".swiper-slide-shadow-right"):s.find(".swiper-slide-shadow-bottom");0===h.length&&(h=n('<div class="swiper-slide-shadow-'+(this.isHorizontal()?"left":"top")+'"></div>'),s.append(h)),0===p.length&&(p=n('<div class="swiper-slide-shadow-'+(this.isHorizontal()?"right":"bottom")+'"></div>'),s.append(p)),h.length&&(h[0].style.opacity=Math.max(-a,0)),p.length&&(p[0].style.opacity=Math.max(a,0))}s.transform("translate3d("+l+"px, "+d+"px, 0px) rotateX("+o+"deg) rotateY("+r+"deg)")}},setTransition:function(e){var t=this,i=t.slides,s=t.activeIndex,a=t.$wrapperEl;if(i.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),t.params.virtualTranslate&&0!==e){var r=!1;i.eq(s).transitionEnd((function(){if(!r&&t&&!t.destroyed){r=!0,t.animating=!1;for(var e=["webkitTransitionEnd","transitionend"],i=0;i<e.length;i+=1)a.trigger(e[i])}}))}}},ye={setTranslate:function(){for(var e=this.width,t=this.height,i=this.slides,s=this.$wrapperEl,a=this.slidesSizesGrid,r=this.params.coverflowEffect,o=this.isHorizontal(),l=this.translate,d=o?e/2-l:t/2-l,p=o?r.rotate:-r.rotate,c=r.depth,u=0,v=i.length;u<v;u+=1){var f=i.eq(u),m=a[u],g=(d-f[0].swiperSlideOffset-m/2)/m*r.modifier,b=o?p*g:0,w=o?0:p*g,y=-c*Math.abs(g),x=r.stretch;"string"==typeof x&&-1!==x.indexOf("%")&&(x=parseFloat(r.stretch)/100*m);var E=o?0:x*g,T=o?x*g:0;Math.abs(T)<.001&&(T=0),Math.abs(E)<.001&&(E=0),Math.abs(y)<.001&&(y=0),Math.abs(b)<.001&&(b=0),Math.abs(w)<.001&&(w=0);var S="translate3d("+T+"px,"+E+"px,"+y+"px)  rotateX("+w+"deg) rotateY("+b+"deg)";if(f.transform(S),f[0].style.zIndex=1-Math.abs(Math.round(g)),r.slideShadows){var C=o?f.find(".swiper-slide-shadow-left"):f.find(".swiper-slide-shadow-top"),M=o?f.find(".swiper-slide-shadow-right"):f.find(".swiper-slide-shadow-bottom");0===C.length&&(C=n('<div class="swiper-slide-shadow-'+(o?"left":"top")+'"></div>'),f.append(C)),0===M.length&&(M=n('<div class="swiper-slide-shadow-'+(o?"right":"bottom")+'"></div>'),f.append(M)),C.length&&(C[0].style.opacity=g>0?g:0),M.length&&(M[0].style.opacity=-g>0?-g:0)}}(h.pointerEvents||h.prefixedPointerEvents)&&(s[0].style.perspectiveOrigin=d+"px 50%")},setTransition:function(e){this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e)}},xe={init:function(){var e=this.params.thumbs,t=this.constructor;e.swiper instanceof t?(this.thumbs.swiper=e.swiper,d.extend(this.thumbs.swiper.originalParams,{watchSlidesProgress:!0,slideToClickedSlide:!1}),d.extend(this.thumbs.swiper.params,{watchSlidesProgress:!0,slideToClickedSlide:!1})):d.isObject(e.swiper)&&(this.thumbs.swiper=new t(d.extend({},e.swiper,{watchSlidesVisibility:!0,watchSlidesProgress:!0,slideToClickedSlide:!1})),this.thumbs.swiperCreated=!0),this.thumbs.swiper.$el.addClass(this.params.thumbs.thumbsContainerClass),this.thumbs.swiper.on("tap",this.thumbs.onThumbClick)},onThumbClick:function(){var e=this.thumbs.swiper;if(e){var t=e.clickedIndex,i=e.clickedSlide;if(!(i&&n(i).hasClass(this.params.thumbs.slideThumbActiveClass)||null==t)){var s;if(s=e.params.loop?parseInt(n(e.clickedSlide).attr("data-swiper-slide-index"),10):t,this.params.loop){var a=this.activeIndex;this.slides.eq(a).hasClass(this.params.slideDuplicateClass)&&(this.loopFix(),this._clientLeft=this.$wrapperEl[0].clientLeft,a=this.activeIndex);var r=this.slides.eq(a).prevAll('[data-swiper-slide-index="'+s+'"]').eq(0).index(),o=this.slides.eq(a).nextAll('[data-swiper-slide-index="'+s+'"]').eq(0).index();s=void 0===r?o:void 0===o?r:o-a<a-r?o:r}this.slideTo(s)}}},update:function(e){var t=this.thumbs.swiper;if(t){var i="auto"===t.params.slidesPerView?t.slidesPerViewDynamic():t.params.slidesPerView,s=this.params.thumbs.autoScrollOffset,a=s&&!t.params.loop;if(this.realIndex!==t.realIndex||a){var r,n,o=t.activeIndex;if(t.params.loop){t.slides.eq(o).hasClass(t.params.slideDuplicateClass)&&(t.loopFix(),t._clientLeft=t.$wrapperEl[0].clientLeft,o=t.activeIndex);var l=t.slides.eq(o).prevAll('[data-swiper-slide-index="'+this.realIndex+'"]').eq(0).index(),d=t.slides.eq(o).nextAll('[data-swiper-slide-index="'+this.realIndex+'"]').eq(0).index();r=void 0===l?d:void 0===d?l:d-o==o-l?o:d-o<o-l?d:l,n=this.activeIndex>this.previousIndex?"next":"prev"}else n=(r=this.realIndex)>this.previousIndex?"next":"prev";a&&(r+="next"===n?s:-1*s),t.visibleSlidesIndexes&&t.visibleSlidesIndexes.indexOf(r)<0&&(t.params.centeredSlides?r=r>o?r-Math.floor(i/2)+1:r+Math.floor(i/2)-1:r>o&&(r=r-i+1),t.slideTo(r,e?0:void 0))}var h=1,p=this.params.thumbs.slideThumbActiveClass;if(this.params.slidesPerView>1&&!this.params.centeredSlides&&(h=this.params.slidesPerView),this.params.thumbs.multipleActiveThumbs||(h=1),h=Math.floor(h),t.slides.removeClass(p),t.params.loop||t.params.virtual&&t.params.virtual.enabled)for(var c=0;c<h;c+=1)t.$wrapperEl.children('[data-swiper-slide-index="'+(this.realIndex+c)+'"]').addClass(p);else for(var u=0;u<h;u+=1)t.slides.eq(this.realIndex+u).addClass(p)}}},Ee=[K,U,Z,Q,ee,ie,ae,{name:"mousewheel",params:{mousewheel:{enabled:!1,releaseOnEdges:!1,invert:!1,forceToAxis:!1,sensitivity:1,eventsTarged:"container"}},create:function(){d.extend(this,{mousewheel:{enabled:!1,enable:re.enable.bind(this),disable:re.disable.bind(this),handle:re.handle.bind(this),handleMouseEnter:re.handleMouseEnter.bind(this),handleMouseLeave:re.handleMouseLeave.bind(this),animateSlider:re.animateSlider.bind(this),releaseScroll:re.releaseScroll.bind(this),lastScrollTime:d.now(),lastEventBeforeSnap:void 0,recentWheelEvents:[]}})},on:{init:function(){!this.params.mousewheel.enabled&&this.params.cssMode&&this.mousewheel.disable(),this.params.mousewheel.enabled&&this.mousewheel.enable()},destroy:function(){this.params.cssMode&&this.mousewheel.enable(),this.mousewheel.enabled&&this.mousewheel.disable()}}},{name:"navigation",params:{navigation:{nextEl:null,prevEl:null,hideOnClick:!1,disabledClass:"swiper-button-disabled",hiddenClass:"swiper-button-hidden",lockClass:"swiper-button-lock"}},create:function(){d.extend(this,{navigation:{init:ne.init.bind(this),update:ne.update.bind(this),destroy:ne.destroy.bind(this),onNextClick:ne.onNextClick.bind(this),onPrevClick:ne.onPrevClick.bind(this)}})},on:{init:function(){this.navigation.init(),this.navigation.update()},toEdge:function(){this.navigation.update()},fromEdge:function(){this.navigation.update()},destroy:function(){this.navigation.destroy()},click:function(e){var t,i=this.navigation,s=i.$nextEl,a=i.$prevEl;!this.params.navigation.hideOnClick||n(e.target).is(a)||n(e.target).is(s)||(s?t=s.hasClass(this.params.navigation.hiddenClass):a&&(t=a.hasClass(this.params.navigation.hiddenClass)),!0===t?this.emit("navigationShow",this):this.emit("navigationHide",this),s&&s.toggleClass(this.params.navigation.hiddenClass),a&&a.toggleClass(this.params.navigation.hiddenClass))}}},{name:"pagination",params:{pagination:{el:null,bulletElement:"span",clickable:!1,hideOnClick:!1,renderBullet:null,renderProgressbar:null,renderFraction:null,renderCustom:null,progressbarOpposite:!1,type:"bullets",dynamicBullets:!1,dynamicMainBullets:1,formatFractionCurrent:function(e){return e},formatFractionTotal:function(e){return e},bulletClass:"swiper-pagination-bullet",bulletActiveClass:"swiper-pagination-bullet-active",modifierClass:"swiper-pagination-",currentClass:"swiper-pagination-current",totalClass:"swiper-pagination-total",hiddenClass:"swiper-pagination-hidden",progressbarFillClass:"swiper-pagination-progressbar-fill",progressbarOppositeClass:"swiper-pagination-progressbar-opposite",clickableClass:"swiper-pagination-clickable",lockClass:"swiper-pagination-lock"}},create:function(){d.extend(this,{pagination:{init:oe.init.bind(this),render:oe.render.bind(this),update:oe.update.bind(this),destroy:oe.destroy.bind(this),dynamicBulletIndex:0}})},on:{init:function(){this.pagination.init(),this.pagination.render(),this.pagination.update()},activeIndexChange:function(){(this.params.loop||void 0===this.snapIndex)&&this.pagination.update()},snapIndexChange:function(){this.params.loop||this.pagination.update()},slidesLengthChange:function(){this.params.loop&&(this.pagination.render(),this.pagination.update())},snapGridLengthChange:function(){this.params.loop||(this.pagination.render(),this.pagination.update())},destroy:function(){this.pagination.destroy()},click:function(e){this.params.pagination.el&&this.params.pagination.hideOnClick&&this.pagination.$el.length>0&&!n(e.target).hasClass(this.params.pagination.bulletClass)&&(!0===this.pagination.$el.hasClass(this.params.pagination.hiddenClass)?this.emit("paginationShow",this):this.emit("paginationHide",this),this.pagination.$el.toggleClass(this.params.pagination.hiddenClass))}}},{name:"scrollbar",params:{scrollbar:{el:null,dragSize:"auto",hide:!1,draggable:!1,snapOnRelease:!0,lockClass:"swiper-scrollbar-lock",dragClass:"swiper-scrollbar-drag"}},create:function(){d.extend(this,{scrollbar:{init:le.init.bind(this),destroy:le.destroy.bind(this),updateSize:le.updateSize.bind(this),setTranslate:le.setTranslate.bind(this),setTransition:le.setTransition.bind(this),enableDraggable:le.enableDraggable.bind(this),disableDraggable:le.disableDraggable.bind(this),setDragPosition:le.setDragPosition.bind(this),getPointerPosition:le.getPointerPosition.bind(this),onDragStart:le.onDragStart.bind(this),onDragMove:le.onDragMove.bind(this),onDragEnd:le.onDragEnd.bind(this),isTouched:!1,timeout:null,dragTimeout:null}})},on:{init:function(){this.scrollbar.init(),this.scrollbar.updateSize(),this.scrollbar.setTranslate()},update:function(){this.scrollbar.updateSize()},resize:function(){this.scrollbar.updateSize()},observerUpdate:function(){this.scrollbar.updateSize()},setTranslate:function(){this.scrollbar.setTranslate()},setTransition:function(e){this.scrollbar.setTransition(e)},destroy:function(){this.scrollbar.destroy()}}},{name:"parallax",params:{parallax:{enabled:!1}},create:function(){d.extend(this,{parallax:{setTransform:de.setTransform.bind(this),setTranslate:de.setTranslate.bind(this),setTransition:de.setTransition.bind(this)}})},on:{beforeInit:function(){this.params.parallax.enabled&&(this.params.watchSlidesProgress=!0,this.originalParams.watchSlidesProgress=!0)},init:function(){this.params.parallax.enabled&&this.parallax.setTranslate()},setTranslate:function(){this.params.parallax.enabled&&this.parallax.setTranslate()},setTransition:function(e){this.params.parallax.enabled&&this.parallax.setTransition(e)}}},{name:"zoom",params:{zoom:{enabled:!1,maxRatio:3,minRatio:1,toggle:!0,containerClass:"swiper-zoom-container",zoomedSlideClass:"swiper-slide-zoomed"}},create:function(){var e=this,t={enabled:!1,scale:1,currentScale:1,isScaling:!1,gesture:{$slideEl:void 0,slideWidth:void 0,slideHeight:void 0,$imageEl:void 0,$imageWrapEl:void 0,maxRatio:3},image:{isTouched:void 0,isMoved:void 0,currentX:void 0,currentY:void 0,minX:void 0,minY:void 0,maxX:void 0,maxY:void 0,width:void 0,height:void 0,startX:void 0,startY:void 0,touchesStart:{},touchesCurrent:{}},velocity:{x:void 0,y:void 0,prevPositionX:void 0,prevPositionY:void 0,prevTime:void 0}};"onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out".split(" ").forEach((function(i){t[i]=he[i].bind(e)})),d.extend(e,{zoom:t});var i=1;Object.defineProperty(e.zoom,"scale",{get:function(){return i},set:function(t){if(i!==t){var s=e.zoom.gesture.$imageEl?e.zoom.gesture.$imageEl[0]:void 0,a=e.zoom.gesture.$slideEl?e.zoom.gesture.$slideEl[0]:void 0;e.emit("zoomChange",t,s,a)}i=t}})},on:{init:function(){this.params.zoom.enabled&&this.zoom.enable()},destroy:function(){this.zoom.disable()},touchStart:function(e){this.zoom.enabled&&this.zoom.onTouchStart(e)},touchEnd:function(e){this.zoom.enabled&&this.zoom.onTouchEnd(e)},doubleTap:function(e){this.params.zoom.enabled&&this.zoom.enabled&&this.params.zoom.toggle&&this.zoom.toggle(e)},transitionEnd:function(){this.zoom.enabled&&this.params.zoom.enabled&&this.zoom.onTransitionEnd()},slideChange:function(){this.zoom.enabled&&this.params.zoom.enabled&&this.params.cssMode&&this.zoom.onTransitionEnd()}}},{name:"lazy",params:{lazy:{enabled:!1,loadPrevNext:!1,loadPrevNextAmount:1,loadOnTransitionStart:!1,elementClass:"swiper-lazy",loadingClass:"swiper-lazy-loading",loadedClass:"swiper-lazy-loaded",preloaderClass:"swiper-lazy-preloader"}},create:function(){d.extend(this,{lazy:{initialImageLoaded:!1,load:pe.load.bind(this),loadInSlide:pe.loadInSlide.bind(this)}})},on:{beforeInit:function(){this.params.lazy.enabled&&this.params.preloadImages&&(this.params.preloadImages=!1)},init:function(){this.params.lazy.enabled&&!this.params.loop&&0===this.params.initialSlide&&this.lazy.load()},scroll:function(){this.params.freeMode&&!this.params.freeModeSticky&&this.lazy.load()},resize:function(){this.params.lazy.enabled&&this.lazy.load()},scrollbarDragMove:function(){this.params.lazy.enabled&&this.lazy.load()},transitionStart:function(){this.params.lazy.enabled&&(this.params.lazy.loadOnTransitionStart||!this.params.lazy.loadOnTransitionStart&&!this.lazy.initialImageLoaded)&&this.lazy.load()},transitionEnd:function(){this.params.lazy.enabled&&!this.params.lazy.loadOnTransitionStart&&this.lazy.load()},slideChange:function(){this.params.lazy.enabled&&this.params.cssMode&&this.lazy.load()}}},{name:"controller",params:{controller:{control:void 0,inverse:!1,by:"slide"}},create:function(){d.extend(this,{controller:{control:this.params.controller.control,getInterpolateFunction:ce.getInterpolateFunction.bind(this),setTranslate:ce.setTranslate.bind(this),setTransition:ce.setTransition.bind(this)}})},on:{update:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},resize:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},observerUpdate:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},setTranslate:function(e,t){this.controller.control&&this.controller.setTranslate(e,t)},setTransition:function(e,t){this.controller.control&&this.controller.setTransition(e,t)}}},{name:"a11y",params:{a11y:{enabled:!0,notificationClass:"swiper-notification",prevSlideMessage:"Previous slide",nextSlideMessage:"Next slide",firstSlideMessage:"This is the first slide",lastSlideMessage:"This is the last slide",paginationBulletMessage:"Go to slide {{index}}"}},create:function(){var e=this;d.extend(e,{a11y:{liveRegion:n('<span class="'+e.params.a11y.notificationClass+'" aria-live="assertive" aria-atomic="true"></span>')}}),Object.keys(ue).forEach((function(t){e.a11y[t]=ue[t].bind(e)}))},on:{init:function(){this.params.a11y.enabled&&(this.a11y.init(),this.a11y.updateNavigation())},toEdge:function(){this.params.a11y.enabled&&this.a11y.updateNavigation()},fromEdge:function(){this.params.a11y.enabled&&this.a11y.updateNavigation()},paginationUpdate:function(){this.params.a11y.enabled&&this.a11y.updatePagination()},destroy:function(){this.params.a11y.enabled&&this.a11y.destroy()}}},{name:"history",params:{history:{enabled:!1,replaceState:!1,key:"slides"}},create:function(){d.extend(this,{history:{init:ve.init.bind(this),setHistory:ve.setHistory.bind(this),setHistoryPopState:ve.setHistoryPopState.bind(this),scrollToSlide:ve.scrollToSlide.bind(this),destroy:ve.destroy.bind(this)}})},on:{init:function(){this.params.history.enabled&&this.history.init()},destroy:function(){this.params.history.enabled&&this.history.destroy()},transitionEnd:function(){this.history.initialized&&this.history.setHistory(this.params.history.key,this.activeIndex)},slideChange:function(){this.history.initialized&&this.params.cssMode&&this.history.setHistory(this.params.history.key,this.activeIndex)}}},{name:"hash-navigation",params:{hashNavigation:{enabled:!1,replaceState:!1,watchState:!1}},create:function(){d.extend(this,{hashNavigation:{initialized:!1,init:fe.init.bind(this),destroy:fe.destroy.bind(this),setHash:fe.setHash.bind(this),onHashCange:fe.onHashCange.bind(this)}})},on:{init:function(){this.params.hashNavigation.enabled&&this.hashNavigation.init()},destroy:function(){this.params.hashNavigation.enabled&&this.hashNavigation.destroy()},transitionEnd:function(){this.hashNavigation.initialized&&this.hashNavigation.setHash()},slideChange:function(){this.hashNavigation.initialized&&this.params.cssMode&&this.hashNavigation.setHash()}}},{name:"autoplay",params:{autoplay:{enabled:!1,delay:3e3,waitForTransition:!0,disableOnInteraction:!0,stopOnLastSlide:!1,reverseDirection:!1}},create:function(){var e=this;d.extend(e,{autoplay:{running:!1,paused:!1,run:me.run.bind(e),start:me.start.bind(e),stop:me.stop.bind(e),pause:me.pause.bind(e),onVisibilityChange:function(){"hidden"===document.visibilityState&&e.autoplay.running&&e.autoplay.pause(),"visible"===document.visibilityState&&e.autoplay.paused&&(e.autoplay.run(),e.autoplay.paused=!1)},onTransitionEnd:function(t){e&&!e.destroyed&&e.$wrapperEl&&t.target===this&&(e.$wrapperEl[0].removeEventListener("transitionend",e.autoplay.onTransitionEnd),e.$wrapperEl[0].removeEventListener("webkitTransitionEnd",e.autoplay.onTransitionEnd),e.autoplay.paused=!1,e.autoplay.running?e.autoplay.run():e.autoplay.stop())}}})},on:{init:function(){this.params.autoplay.enabled&&(this.autoplay.start(),document.addEventListener("visibilitychange",this.autoplay.onVisibilityChange))},beforeTransitionStart:function(e,t){this.autoplay.running&&(t||!this.params.autoplay.disableOnInteraction?this.autoplay.pause(e):this.autoplay.stop())},sliderFirstMove:function(){this.autoplay.running&&(this.params.autoplay.disableOnInteraction?this.autoplay.stop():this.autoplay.pause())},touchEnd:function(){this.params.cssMode&&this.autoplay.paused&&!this.params.autoplay.disableOnInteraction&&this.autoplay.run()},destroy:function(){this.autoplay.running&&this.autoplay.stop(),document.removeEventListener("visibilitychange",this.autoplay.onVisibilityChange)}}},{name:"effect-fade",params:{fadeEffect:{crossFade:!1}},create:function(){d.extend(this,{fadeEffect:{setTranslate:ge.setTranslate.bind(this),setTransition:ge.setTransition.bind(this)}})},on:{beforeInit:function(){if("fade"===this.params.effect){this.classNames.push(this.params.containerModifierClass+"fade");var e={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0};d.extend(this.params,e),d.extend(this.originalParams,e)}},setTranslate:function(){"fade"===this.params.effect&&this.fadeEffect.setTranslate()},setTransition:function(e){"fade"===this.params.effect&&this.fadeEffect.setTransition(e)}}},{name:"effect-cube",params:{cubeEffect:{slideShadows:!0,shadow:!0,shadowOffset:20,shadowScale:.94}},create:function(){d.extend(this,{cubeEffect:{setTranslate:be.setTranslate.bind(this),setTransition:be.setTransition.bind(this)}})},on:{beforeInit:function(){if("cube"===this.params.effect){this.classNames.push(this.params.containerModifierClass+"cube"),this.classNames.push(this.params.containerModifierClass+"3d");var e={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,resistanceRatio:0,spaceBetween:0,centeredSlides:!1,virtualTranslate:!0};d.extend(this.params,e),d.extend(this.originalParams,e)}},setTranslate:function(){"cube"===this.params.effect&&this.cubeEffect.setTranslate()},setTransition:function(e){"cube"===this.params.effect&&this.cubeEffect.setTransition(e)}}},{name:"effect-flip",params:{flipEffect:{slideShadows:!0,limitRotation:!0}},create:function(){d.extend(this,{flipEffect:{setTranslate:we.setTranslate.bind(this),setTransition:we.setTransition.bind(this)}})},on:{beforeInit:function(){if("flip"===this.params.effect){this.classNames.push(this.params.containerModifierClass+"flip"),this.classNames.push(this.params.containerModifierClass+"3d");var e={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0};d.extend(this.params,e),d.extend(this.originalParams,e)}},setTranslate:function(){"flip"===this.params.effect&&this.flipEffect.setTranslate()},setTransition:function(e){"flip"===this.params.effect&&this.flipEffect.setTransition(e)}}},{name:"effect-coverflow",params:{coverflowEffect:{rotate:50,stretch:0,depth:100,modifier:1,slideShadows:!0}},create:function(){d.extend(this,{coverflowEffect:{setTranslate:ye.setTranslate.bind(this),setTransition:ye.setTransition.bind(this)}})},on:{beforeInit:function(){"coverflow"===this.params.effect&&(this.classNames.push(this.params.containerModifierClass+"coverflow"),this.classNames.push(this.params.containerModifierClass+"3d"),this.params.watchSlidesProgress=!0,this.originalParams.watchSlidesProgress=!0)},setTranslate:function(){"coverflow"===this.params.effect&&this.coverflowEffect.setTranslate()},setTransition:function(e){"coverflow"===this.params.effect&&this.coverflowEffect.setTransition(e)}}},{name:"thumbs",params:{thumbs:{swiper:null,multipleActiveThumbs:!0,autoScrollOffset:0,slideThumbActiveClass:"swiper-slide-thumb-active",thumbsContainerClass:"swiper-container-thumbs"}},create:function(){d.extend(this,{thumbs:{swiper:null,init:xe.init.bind(this),update:xe.update.bind(this),onThumbClick:xe.onThumbClick.bind(this)}})},on:{beforeInit:function(){var e=this.params.thumbs;e&&e.swiper&&(this.thumbs.init(),this.thumbs.update(!0))},slideChange:function(){this.thumbs.swiper&&this.thumbs.update()},update:function(){this.thumbs.swiper&&this.thumbs.update()},resize:function(){this.thumbs.swiper&&this.thumbs.update()},observerUpdate:function(){this.thumbs.swiper&&this.thumbs.update()},setTransition:function(e){var t=this.thumbs.swiper;t&&t.setTransition(e)},beforeDestroy:function(){var e=this.thumbs.swiper;e&&this.thumbs.swiperCreated&&e&&e.destroy()}}}];return void 0===j.use&&(j.use=j.Class.use,j.installModule=j.Class.installModule),j.use(Ee),j}));
//# sourceMappingURL=swiper.min.js.map
!function(i){"use strict";"function"==typeof define&&define.amd?define(["jquery"],i):"undefined"!=typeof exports?module.exports=i(require("jquery")):i(jQuery)}(function(i){"use strict";var e=window.Slick||{};(e=function(){var e=0;return function(t,o){var s,n=this;n.defaults={accessibility:!0,adaptiveHeight:!1,appendArrows:i(t),appendDots:i(t),arrows:!0,asNavFor:null,prevArrow:'<button class="slick-prev" aria-label="Previous" type="button">Previous</button>',nextArrow:'<button class="slick-next" aria-label="Next" type="button">Next</button>',autoplay:!1,autoplaySpeed:3e3,centerMode:!1,centerPadding:"50px",cssEase:"ease",customPaging:function(e,t){return i('<button type="button" />').text(t+1)},dots:!1,dotsClass:"slick-dots",draggable:!0,easing:"linear",edgeFriction:.35,fade:!1,focusOnSelect:!1,focusOnChange:!1,infinite:!0,initialSlide:0,lazyLoad:"ondemand",mobileFirst:!1,pauseOnHover:!0,pauseOnFocus:!0,pauseOnDotsHover:!1,respondTo:"window",responsive:null,rows:1,rtl:!1,slide:"",slidesPerRow:1,slidesToShow:1,slidesToScroll:1,speed:500,swipe:!0,swipeToSlide:!1,touchMove:!0,touchThreshold:5,useCSS:!0,useTransform:!0,variableWidth:!1,vertical:!1,verticalSwiping:!1,waitForAnimate:!0,zIndex:1e3},n.initials={animating:!1,dragging:!1,autoPlayTimer:null,currentDirection:0,currentLeft:null,currentSlide:0,direction:1,$dots:null,listWidth:null,listHeight:null,loadIndex:0,$nextArrow:null,$prevArrow:null,scrolling:!1,slideCount:null,slideWidth:null,$slideTrack:null,$slides:null,sliding:!1,slideOffset:0,swipeLeft:null,swiping:!1,$list:null,touchObject:{},transformsEnabled:!1,unslicked:!1},i.extend(n,n.initials),n.activeBreakpoint=null,n.animType=null,n.animProp=null,n.breakpoints=[],n.breakpointSettings=[],n.cssTransitions=!1,n.focussed=!1,n.interrupted=!1,n.hidden="hidden",n.paused=!0,n.positionProp=null,n.respondTo=null,n.rowCount=1,n.shouldClick=!0,n.$slider=i(t),n.$slidesCache=null,n.transformType=null,n.transitionType=null,n.visibilityChange="visibilitychange",n.windowWidth=0,n.windowTimer=null,s=i(t).data("slick")||{},n.options=i.extend({},n.defaults,o,s),n.currentSlide=n.options.initialSlide,n.originalSettings=n.options,void 0!==document.mozHidden?(n.hidden="mozHidden",n.visibilityChange="mozvisibilitychange"):void 0!==document.webkitHidden&&(n.hidden="webkitHidden",n.visibilityChange="webkitvisibilitychange"),n.autoPlay=i.proxy(n.autoPlay,n),n.autoPlayClear=i.proxy(n.autoPlayClear,n),n.autoPlayIterator=i.proxy(n.autoPlayIterator,n),n.changeSlide=i.proxy(n.changeSlide,n),n.clickHandler=i.proxy(n.clickHandler,n),n.selectHandler=i.proxy(n.selectHandler,n),n.setPosition=i.proxy(n.setPosition,n),n.swipeHandler=i.proxy(n.swipeHandler,n),n.dragHandler=i.proxy(n.dragHandler,n),n.keyHandler=i.proxy(n.keyHandler,n),n.instanceUid=e++,n.htmlExpr=/^(?:\s*(<[\w\W]+>)[^>]*)$/,n.registerBreakpoints(),n.init(!0)}}()).prototype.activateADA=function(){this.$slideTrack.find(".slick-active").attr({"aria-hidden":"false"}).find("a, input, button, select").attr({tabindex:"0"})},e.prototype.addSlide=e.prototype.slickAdd=function(e,t,o){var s=this;if("boolean"==typeof t)o=t,t=null;else if(t<0||t>=s.slideCount)return!1;s.unload(),"number"==typeof t?0===t&&0===s.$slides.length?i(e).appendTo(s.$slideTrack):o?i(e).insertBefore(s.$slides.eq(t)):i(e).insertAfter(s.$slides.eq(t)):!0===o?i(e).prependTo(s.$slideTrack):i(e).appendTo(s.$slideTrack),s.$slides=s.$slideTrack.children(this.options.slide),s.$slideTrack.children(this.options.slide).detach(),s.$slideTrack.append(s.$slides),s.$slides.each(function(e,t){i(t).attr("data-slick-index",e)}),s.$slidesCache=s.$slides,s.reinit()},e.prototype.animateHeight=function(){var i=this;if(1===i.options.slidesToShow&&!0===i.options.adaptiveHeight&&!1===i.options.vertical){var e=i.$slides.eq(i.currentSlide).outerHeight(!0);i.$list.animate({height:e},i.options.speed)}},e.prototype.animateSlide=function(e,t){var o={},s=this;s.animateHeight(),!0===s.options.rtl&&!1===s.options.vertical&&(e=-e),!1===s.transformsEnabled?!1===s.options.vertical?s.$slideTrack.animate({left:e},s.options.speed,s.options.easing,t):s.$slideTrack.animate({top:e},s.options.speed,s.options.easing,t):!1===s.cssTransitions?(!0===s.options.rtl&&(s.currentLeft=-s.currentLeft),i({animStart:s.currentLeft}).animate({animStart:e},{duration:s.options.speed,easing:s.options.easing,step:function(i){i=Math.ceil(i),!1===s.options.vertical?(o[s.animType]="translate("+i+"px, 0px)",s.$slideTrack.css(o)):(o[s.animType]="translate(0px,"+i+"px)",s.$slideTrack.css(o))},complete:function(){t&&t.call()}})):(s.applyTransition(),e=Math.ceil(e),!1===s.options.vertical?o[s.animType]="translate3d("+e+"px, 0px, 0px)":o[s.animType]="translate3d(0px,"+e+"px, 0px)",s.$slideTrack.css(o),t&&setTimeout(function(){s.disableTransition(),t.call()},s.options.speed))},e.prototype.getNavTarget=function(){var e=this,t=e.options.asNavFor;return t&&null!==t&&(t=i(t).not(e.$slider)),t},e.prototype.asNavFor=function(e){var t=this.getNavTarget();null!==t&&"object"==typeof t&&t.each(function(){var t=i(this).slick("getSlick");t.unslicked||t.slideHandler(e,!0)})},e.prototype.applyTransition=function(i){var e=this,t={};!1===e.options.fade?t[e.transitionType]=e.transformType+" "+e.options.speed+"ms "+e.options.cssEase:t[e.transitionType]="opacity "+e.options.speed+"ms "+e.options.cssEase,!1===e.options.fade?e.$slideTrack.css(t):e.$slides.eq(i).css(t)},e.prototype.autoPlay=function(){var i=this;i.autoPlayClear(),i.slideCount>i.options.slidesToShow&&(i.autoPlayTimer=setInterval(i.autoPlayIterator,i.options.autoplaySpeed))},e.prototype.autoPlayClear=function(){var i=this;i.autoPlayTimer&&clearInterval(i.autoPlayTimer)},e.prototype.autoPlayIterator=function(){var i=this,e=i.currentSlide+i.options.slidesToScroll;i.paused||i.interrupted||i.focussed||(!1===i.options.infinite&&(1===i.direction&&i.currentSlide+1===i.slideCount-1?i.direction=0:0===i.direction&&(e=i.currentSlide-i.options.slidesToScroll,i.currentSlide-1==0&&(i.direction=1))),i.slideHandler(e))},e.prototype.buildArrows=function(){var e=this;!0===e.options.arrows&&(e.$prevArrow=i(e.options.prevArrow).addClass("slick-arrow"),e.$nextArrow=i(e.options.nextArrow).addClass("slick-arrow"),e.slideCount>e.options.slidesToShow?(e.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.prependTo(e.options.appendArrows),e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.appendTo(e.options.appendArrows),!0!==e.options.infinite&&e.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true")):e.$prevArrow.add(e.$nextArrow).addClass("slick-hidden").attr({"aria-disabled":"true",tabindex:"-1"}))},e.prototype.buildDots=function(){var e,t,o=this;if(!0===o.options.dots){for(o.$slider.addClass("slick-dotted"),t=i("<ul />").addClass(o.options.dotsClass),e=0;e<=o.getDotCount();e+=1)t.append(i("<li />").append(o.options.customPaging.call(this,o,e)));o.$dots=t.appendTo(o.options.appendDots),o.$dots.find("li").first().addClass("slick-active")}},e.prototype.buildOut=function(){var e=this;e.$slides=e.$slider.children(e.options.slide+":not(.slick-cloned)").addClass("slick-slide"),e.slideCount=e.$slides.length,e.$slides.each(function(e,t){i(t).attr("data-slick-index",e).data("originalStyling",i(t).attr("style")||"")}),e.$slider.addClass("slick-slider"),e.$slideTrack=0===e.slideCount?i('<div class="slick-track"/>').appendTo(e.$slider):e.$slides.wrapAll('<div class="slick-track"/>').parent(),e.$list=e.$slideTrack.wrap('<div class="slick-list"/>').parent(),e.$slideTrack.css("opacity",0),!0!==e.options.centerMode&&!0!==e.options.swipeToSlide||(e.options.slidesToScroll=1),i("img[data-lazy]",e.$slider).not("[src]").addClass("slick-loading"),e.setupInfinite(),e.buildArrows(),e.buildDots(),e.updateDots(),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),!0===e.options.draggable&&e.$list.addClass("draggable")},e.prototype.buildRows=function(){var i,e,t,o,s,n,r,l=this;if(o=document.createDocumentFragment(),n=l.$slider.children(),l.options.rows>1){for(r=l.options.slidesPerRow*l.options.rows,s=Math.ceil(n.length/r),i=0;i<s;i++){var d=document.createElement("div");for(e=0;e<l.options.rows;e++){var a=document.createElement("div");for(t=0;t<l.options.slidesPerRow;t++){var c=i*r+(e*l.options.slidesPerRow+t);n.get(c)&&a.appendChild(n.get(c))}d.appendChild(a)}o.appendChild(d)}l.$slider.empty().append(o),l.$slider.children().children().children().css({width:100/l.options.slidesPerRow+"%",display:"inline-block"})}},e.prototype.checkResponsive=function(e,t){var o,s,n,r=this,l=!1,d=r.$slider.width(),a=window.innerWidth||i(window).width();if("window"===r.respondTo?n=a:"slider"===r.respondTo?n=d:"min"===r.respondTo&&(n=Math.min(a,d)),r.options.responsive&&r.options.responsive.length&&null!==r.options.responsive){s=null;for(o in r.breakpoints)r.breakpoints.hasOwnProperty(o)&&(!1===r.originalSettings.mobileFirst?n<r.breakpoints[o]&&(s=r.breakpoints[o]):n>r.breakpoints[o]&&(s=r.breakpoints[o]));null!==s?null!==r.activeBreakpoint?(s!==r.activeBreakpoint||t)&&(r.activeBreakpoint=s,"unslick"===r.breakpointSettings[s]?r.unslick(s):(r.options=i.extend({},r.originalSettings,r.breakpointSettings[s]),!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e)),l=s):(r.activeBreakpoint=s,"unslick"===r.breakpointSettings[s]?r.unslick(s):(r.options=i.extend({},r.originalSettings,r.breakpointSettings[s]),!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e)),l=s):null!==r.activeBreakpoint&&(r.activeBreakpoint=null,r.options=r.originalSettings,!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e),l=s),e||!1===l||r.$slider.trigger("breakpoint",[r,l])}},e.prototype.changeSlide=function(e,t){var o,s,n,r=this,l=i(e.currentTarget);switch(l.is("a")&&e.preventDefault(),l.is("li")||(l=l.closest("li")),n=r.slideCount%r.options.slidesToScroll!=0,o=n?0:(r.slideCount-r.currentSlide)%r.options.slidesToScroll,e.data.message){case"previous":s=0===o?r.options.slidesToScroll:r.options.slidesToShow-o,r.slideCount>r.options.slidesToShow&&r.slideHandler(r.currentSlide-s,!1,t);break;case"next":s=0===o?r.options.slidesToScroll:o,r.slideCount>r.options.slidesToShow&&r.slideHandler(r.currentSlide+s,!1,t);break;case"index":var d=0===e.data.index?0:e.data.index||l.index()*r.options.slidesToScroll;r.slideHandler(r.checkNavigable(d),!1,t),l.children().trigger("focus");break;default:return}},e.prototype.checkNavigable=function(i){var e,t;if(e=this.getNavigableIndexes(),t=0,i>e[e.length-1])i=e[e.length-1];else for(var o in e){if(i<e[o]){i=t;break}t=e[o]}return i},e.prototype.cleanUpEvents=function(){var e=this;e.options.dots&&null!==e.$dots&&(i("li",e.$dots).off("click.slick",e.changeSlide).off("mouseenter.slick",i.proxy(e.interrupt,e,!0)).off("mouseleave.slick",i.proxy(e.interrupt,e,!1)),!0===e.options.accessibility&&e.$dots.off("keydown.slick",e.keyHandler)),e.$slider.off("focus.slick blur.slick"),!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow&&e.$prevArrow.off("click.slick",e.changeSlide),e.$nextArrow&&e.$nextArrow.off("click.slick",e.changeSlide),!0===e.options.accessibility&&(e.$prevArrow&&e.$prevArrow.off("keydown.slick",e.keyHandler),e.$nextArrow&&e.$nextArrow.off("keydown.slick",e.keyHandler))),e.$list.off("touchstart.slick mousedown.slick",e.swipeHandler),e.$list.off("touchmove.slick mousemove.slick",e.swipeHandler),e.$list.off("touchend.slick mouseup.slick",e.swipeHandler),e.$list.off("touchcancel.slick mouseleave.slick",e.swipeHandler),e.$list.off("click.slick",e.clickHandler),i(document).off(e.visibilityChange,e.visibility),e.cleanUpSlideEvents(),!0===e.options.accessibility&&e.$list.off("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&i(e.$slideTrack).children().off("click.slick",e.selectHandler),i(window).off("orientationchange.slick.slick-"+e.instanceUid,e.orientationChange),i(window).off("resize.slick.slick-"+e.instanceUid,e.resize),i("[draggable!=true]",e.$slideTrack).off("dragstart",e.preventDefault),i(window).off("load.slick.slick-"+e.instanceUid,e.setPosition)},e.prototype.cleanUpSlideEvents=function(){var e=this;e.$list.off("mouseenter.slick",i.proxy(e.interrupt,e,!0)),e.$list.off("mouseleave.slick",i.proxy(e.interrupt,e,!1))},e.prototype.cleanUpRows=function(){var i,e=this;e.options.rows>1&&((i=e.$slides.children().children()).removeAttr("style"),e.$slider.empty().append(i))},e.prototype.clickHandler=function(i){!1===this.shouldClick&&(i.stopImmediatePropagation(),i.stopPropagation(),i.preventDefault())},e.prototype.destroy=function(e){var t=this;t.autoPlayClear(),t.touchObject={},t.cleanUpEvents(),i(".slick-cloned",t.$slider).detach(),t.$dots&&t.$dots.remove(),t.$prevArrow&&t.$prevArrow.length&&(t.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.prevArrow)&&t.$prevArrow.remove()),t.$nextArrow&&t.$nextArrow.length&&(t.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.nextArrow)&&t.$nextArrow.remove()),t.$slides&&(t.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function(){i(this).attr("style",i(this).data("originalStyling"))}),t.$slideTrack.children(this.options.slide).detach(),t.$slideTrack.detach(),t.$list.detach(),t.$slider.append(t.$slides)),t.cleanUpRows(),t.$slider.removeClass("slick-slider"),t.$slider.removeClass("slick-initialized"),t.$slider.removeClass("slick-dotted"),t.unslicked=!0,e||t.$slider.trigger("destroy",[t])},e.prototype.disableTransition=function(i){var e=this,t={};t[e.transitionType]="",!1===e.options.fade?e.$slideTrack.css(t):e.$slides.eq(i).css(t)},e.prototype.fadeSlide=function(i,e){var t=this;!1===t.cssTransitions?(t.$slides.eq(i).css({zIndex:t.options.zIndex}),t.$slides.eq(i).animate({opacity:1},t.options.speed,t.options.easing,e)):(t.applyTransition(i),t.$slides.eq(i).css({opacity:1,zIndex:t.options.zIndex}),e&&setTimeout(function(){t.disableTransition(i),e.call()},t.options.speed))},e.prototype.fadeSlideOut=function(i){var e=this;!1===e.cssTransitions?e.$slides.eq(i).animate({opacity:0,zIndex:e.options.zIndex-2},e.options.speed,e.options.easing):(e.applyTransition(i),e.$slides.eq(i).css({opacity:0,zIndex:e.options.zIndex-2}))},e.prototype.filterSlides=e.prototype.slickFilter=function(i){var e=this;null!==i&&(e.$slidesCache=e.$slides,e.unload(),e.$slideTrack.children(this.options.slide).detach(),e.$slidesCache.filter(i).appendTo(e.$slideTrack),e.reinit())},e.prototype.focusHandler=function(){var e=this;e.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick","*",function(t){t.stopImmediatePropagation();var o=i(this);setTimeout(function(){e.options.pauseOnFocus&&(e.focussed=o.is(":focus"),e.autoPlay())},0)})},e.prototype.getCurrent=e.prototype.slickCurrentSlide=function(){return this.currentSlide},e.prototype.getDotCount=function(){var i=this,e=0,t=0,o=0;if(!0===i.options.infinite)if(i.slideCount<=i.options.slidesToShow)++o;else for(;e<i.slideCount;)++o,e=t+i.options.slidesToScroll,t+=i.options.slidesToScroll<=i.options.slidesToShow?i.options.slidesToScroll:i.options.slidesToShow;else if(!0===i.options.centerMode)o=i.slideCount;else if(i.options.asNavFor)for(;e<i.slideCount;)++o,e=t+i.options.slidesToScroll,t+=i.options.slidesToScroll<=i.options.slidesToShow?i.options.slidesToScroll:i.options.slidesToShow;else o=1+Math.ceil((i.slideCount-i.options.slidesToShow)/i.options.slidesToScroll);return o-1},e.prototype.getLeft=function(i){var e,t,o,s,n=this,r=0;return n.slideOffset=0,t=n.$slides.first().outerHeight(!0),!0===n.options.infinite?(n.slideCount>n.options.slidesToShow&&(n.slideOffset=n.slideWidth*n.options.slidesToShow*-1,s=-1,!0===n.options.vertical&&!0===n.options.centerMode&&(2===n.options.slidesToShow?s=-1.5:1===n.options.slidesToShow&&(s=-2)),r=t*n.options.slidesToShow*s),n.slideCount%n.options.slidesToScroll!=0&&i+n.options.slidesToScroll>n.slideCount&&n.slideCount>n.options.slidesToShow&&(i>n.slideCount?(n.slideOffset=(n.options.slidesToShow-(i-n.slideCount))*n.slideWidth*-1,r=(n.options.slidesToShow-(i-n.slideCount))*t*-1):(n.slideOffset=n.slideCount%n.options.slidesToScroll*n.slideWidth*-1,r=n.slideCount%n.options.slidesToScroll*t*-1))):i+n.options.slidesToShow>n.slideCount&&(n.slideOffset=(i+n.options.slidesToShow-n.slideCount)*n.slideWidth,r=(i+n.options.slidesToShow-n.slideCount)*t),n.slideCount<=n.options.slidesToShow&&(n.slideOffset=0,r=0),!0===n.options.centerMode&&n.slideCount<=n.options.slidesToShow?n.slideOffset=n.slideWidth*Math.floor(n.options.slidesToShow)/2-n.slideWidth*n.slideCount/2:!0===n.options.centerMode&&!0===n.options.infinite?n.slideOffset+=n.slideWidth*Math.floor(n.options.slidesToShow/2)-n.slideWidth:!0===n.options.centerMode&&(n.slideOffset=0,n.slideOffset+=n.slideWidth*Math.floor(n.options.slidesToShow/2)),e=!1===n.options.vertical?i*n.slideWidth*-1+n.slideOffset:i*t*-1+r,!0===n.options.variableWidth&&(o=n.slideCount<=n.options.slidesToShow||!1===n.options.infinite?n.$slideTrack.children(".slick-slide").eq(i):n.$slideTrack.children(".slick-slide").eq(i+n.options.slidesToShow),e=!0===n.options.rtl?o[0]?-1*(n.$slideTrack.width()-o[0].offsetLeft-o.width()):0:o[0]?-1*o[0].offsetLeft:0,!0===n.options.centerMode&&(o=n.slideCount<=n.options.slidesToShow||!1===n.options.infinite?n.$slideTrack.children(".slick-slide").eq(i):n.$slideTrack.children(".slick-slide").eq(i+n.options.slidesToShow+1),e=!0===n.options.rtl?o[0]?-1*(n.$slideTrack.width()-o[0].offsetLeft-o.width()):0:o[0]?-1*o[0].offsetLeft:0,e+=(n.$list.width()-o.outerWidth())/2)),e},e.prototype.getOption=e.prototype.slickGetOption=function(i){return this.options[i]},e.prototype.getNavigableIndexes=function(){var i,e=this,t=0,o=0,s=[];for(!1===e.options.infinite?i=e.slideCount:(t=-1*e.options.slidesToScroll,o=-1*e.options.slidesToScroll,i=2*e.slideCount);t<i;)s.push(t),t=o+e.options.slidesToScroll,o+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;return s},e.prototype.getSlick=function(){return this},e.prototype.getSlideCount=function(){var e,t,o=this;return t=!0===o.options.centerMode?o.slideWidth*Math.floor(o.options.slidesToShow/2):0,!0===o.options.swipeToSlide?(o.$slideTrack.find(".slick-slide").each(function(s,n){if(n.offsetLeft-t+i(n).outerWidth()/2>-1*o.swipeLeft)return e=n,!1}),Math.abs(i(e).attr("data-slick-index")-o.currentSlide)||1):o.options.slidesToScroll},e.prototype.goTo=e.prototype.slickGoTo=function(i,e){this.changeSlide({data:{message:"index",index:parseInt(i)}},e)},e.prototype.init=function(e){var t=this;i(t.$slider).hasClass("slick-initialized")||(i(t.$slider).addClass("slick-initialized"),t.buildRows(),t.buildOut(),t.setProps(),t.startLoad(),t.loadSlider(),t.initializeEvents(),t.updateArrows(),t.updateDots(),t.checkResponsive(!0),t.focusHandler()),e&&t.$slider.trigger("init",[t]),!0===t.options.accessibility&&t.initADA(),t.options.autoplay&&(t.paused=!1,t.autoPlay())},e.prototype.initADA=function(){var e=this,t=Math.ceil(e.slideCount/e.options.slidesToShow),o=e.getNavigableIndexes().filter(function(i){return i>=0&&i<e.slideCount});e.$slides.add(e.$slideTrack.find(".slick-cloned")).attr({"aria-hidden":"true",tabindex:"-1"}).find("a, input, button, select").attr({tabindex:"-1"}),null!==e.$dots&&(e.$slides.not(e.$slideTrack.find(".slick-cloned")).each(function(t){var s=o.indexOf(t);i(this).attr({role:"tabpanel",id:"slick-slide"+e.instanceUid+t,tabindex:-1}),-1!==s&&i(this).attr({"aria-describedby":"slick-slide-control"+e.instanceUid+s})}),e.$dots.attr("role","tablist").find("li").each(function(s){var n=o[s];i(this).attr({role:"presentation"}),i(this).find("button").first().attr({role:"tab",id:"slick-slide-control"+e.instanceUid+s,"aria-controls":"slick-slide"+e.instanceUid+n,"aria-label":s+1+" of "+t,"aria-selected":null,tabindex:"-1"})}).eq(e.currentSlide).find("button").attr({"aria-selected":"true",tabindex:"0"}).end());for(var s=e.currentSlide,n=s+e.options.slidesToShow;s<n;s++)e.$slides.eq(s).attr("tabindex",0);e.activateADA()},e.prototype.initArrowEvents=function(){var i=this;!0===i.options.arrows&&i.slideCount>i.options.slidesToShow&&(i.$prevArrow.off("click.slick").on("click.slick",{message:"previous"},i.changeSlide),i.$nextArrow.off("click.slick").on("click.slick",{message:"next"},i.changeSlide),!0===i.options.accessibility&&(i.$prevArrow.on("keydown.slick",i.keyHandler),i.$nextArrow.on("keydown.slick",i.keyHandler)))},e.prototype.initDotEvents=function(){var e=this;!0===e.options.dots&&(i("li",e.$dots).on("click.slick",{message:"index"},e.changeSlide),!0===e.options.accessibility&&e.$dots.on("keydown.slick",e.keyHandler)),!0===e.options.dots&&!0===e.options.pauseOnDotsHover&&i("li",e.$dots).on("mouseenter.slick",i.proxy(e.interrupt,e,!0)).on("mouseleave.slick",i.proxy(e.interrupt,e,!1))},e.prototype.initSlideEvents=function(){var e=this;e.options.pauseOnHover&&(e.$list.on("mouseenter.slick",i.proxy(e.interrupt,e,!0)),e.$list.on("mouseleave.slick",i.proxy(e.interrupt,e,!1)))},e.prototype.initializeEvents=function(){var e=this;e.initArrowEvents(),e.initDotEvents(),e.initSlideEvents(),e.$list.on("touchstart.slick mousedown.slick",{action:"start"},e.swipeHandler),e.$list.on("touchmove.slick mousemove.slick",{action:"move"},e.swipeHandler),e.$list.on("touchend.slick mouseup.slick",{action:"end"},e.swipeHandler),e.$list.on("touchcancel.slick mouseleave.slick",{action:"end"},e.swipeHandler),e.$list.on("click.slick",e.clickHandler),i(document).on(e.visibilityChange,i.proxy(e.visibility,e)),!0===e.options.accessibility&&e.$list.on("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&i(e.$slideTrack).children().on("click.slick",e.selectHandler),i(window).on("orientationchange.slick.slick-"+e.instanceUid,i.proxy(e.orientationChange,e)),i(window).on("resize.slick.slick-"+e.instanceUid,i.proxy(e.resize,e)),i("[draggable!=true]",e.$slideTrack).on("dragstart",e.preventDefault),i(window).on("load.slick.slick-"+e.instanceUid,e.setPosition),i(e.setPosition)},e.prototype.initUI=function(){var i=this;!0===i.options.arrows&&i.slideCount>i.options.slidesToShow&&(i.$prevArrow.show(),i.$nextArrow.show()),!0===i.options.dots&&i.slideCount>i.options.slidesToShow&&i.$dots.show()},e.prototype.keyHandler=function(i){var e=this;i.target.tagName.match("TEXTAREA|INPUT|SELECT")||(37===i.keyCode&&!0===e.options.accessibility?e.changeSlide({data:{message:!0===e.options.rtl?"next":"previous"}}):39===i.keyCode&&!0===e.options.accessibility&&e.changeSlide({data:{message:!0===e.options.rtl?"previous":"next"}}))},e.prototype.lazyLoad=function(){function e(e){i("img[data-lazy]",e).each(function(){var e=i(this),t=i(this).attr("data-lazy"),o=i(this).attr("data-srcset"),s=i(this).attr("data-sizes")||n.$slider.attr("data-sizes"),r=document.createElement("img");r.onload=function(){e.animate({opacity:0},100,function(){o&&(e.attr("srcset",o),s&&e.attr("sizes",s)),e.attr("src",t).animate({opacity:1},200,function(){e.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading")}),n.$slider.trigger("lazyLoaded",[n,e,t])})},r.onerror=function(){e.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),n.$slider.trigger("lazyLoadError",[n,e,t])},r.src=t})}var t,o,s,n=this;if(!0===n.options.centerMode?!0===n.options.infinite?s=(o=n.currentSlide+(n.options.slidesToShow/2+1))+n.options.slidesToShow+2:(o=Math.max(0,n.currentSlide-(n.options.slidesToShow/2+1)),s=n.options.slidesToShow/2+1+2+n.currentSlide):(o=n.options.infinite?n.options.slidesToShow+n.currentSlide:n.currentSlide,s=Math.ceil(o+n.options.slidesToShow),!0===n.options.fade&&(o>0&&o--,s<=n.slideCount&&s++)),t=n.$slider.find(".slick-slide").slice(o,s),"anticipated"===n.options.lazyLoad)for(var r=o-1,l=s,d=n.$slider.find(".slick-slide"),a=0;a<n.options.slidesToScroll;a++)r<0&&(r=n.slideCount-1),t=(t=t.add(d.eq(r))).add(d.eq(l)),r--,l++;e(t),n.slideCount<=n.options.slidesToShow?e(n.$slider.find(".slick-slide")):n.currentSlide>=n.slideCount-n.options.slidesToShow?e(n.$slider.find(".slick-cloned").slice(0,n.options.slidesToShow)):0===n.currentSlide&&e(n.$slider.find(".slick-cloned").slice(-1*n.options.slidesToShow))},e.prototype.loadSlider=function(){var i=this;i.setPosition(),i.$slideTrack.css({opacity:1}),i.$slider.removeClass("slick-loading"),i.initUI(),"progressive"===i.options.lazyLoad&&i.progressiveLazyLoad()},e.prototype.next=e.prototype.slickNext=function(){this.changeSlide({data:{message:"next"}})},e.prototype.orientationChange=function(){var i=this;i.checkResponsive(),i.setPosition()},e.prototype.pause=e.prototype.slickPause=function(){var i=this;i.autoPlayClear(),i.paused=!0},e.prototype.play=e.prototype.slickPlay=function(){var i=this;i.autoPlay(),i.options.autoplay=!0,i.paused=!1,i.focussed=!1,i.interrupted=!1},e.prototype.postSlide=function(e){var t=this;t.unslicked||(t.$slider.trigger("afterChange",[t,e]),t.animating=!1,t.slideCount>t.options.slidesToShow&&t.setPosition(),t.swipeLeft=null,t.options.autoplay&&t.autoPlay(),!0===t.options.accessibility&&(t.initADA(),t.options.focusOnChange&&i(t.$slides.get(t.currentSlide)).attr("tabindex",0).focus()))},e.prototype.prev=e.prototype.slickPrev=function(){this.changeSlide({data:{message:"previous"}})},e.prototype.preventDefault=function(i){i.preventDefault()},e.prototype.progressiveLazyLoad=function(e){e=e||1;var t,o,s,n,r,l=this,d=i("img[data-lazy]",l.$slider);d.length?(t=d.first(),o=t.attr("data-lazy"),s=t.attr("data-srcset"),n=t.attr("data-sizes")||l.$slider.attr("data-sizes"),(r=document.createElement("img")).onload=function(){s&&(t.attr("srcset",s),n&&t.attr("sizes",n)),t.attr("src",o).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"),!0===l.options.adaptiveHeight&&l.setPosition(),l.$slider.trigger("lazyLoaded",[l,t,o]),l.progressiveLazyLoad()},r.onerror=function(){e<3?setTimeout(function(){l.progressiveLazyLoad(e+1)},500):(t.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),l.$slider.trigger("lazyLoadError",[l,t,o]),l.progressiveLazyLoad())},r.src=o):l.$slider.trigger("allImagesLoaded",[l])},e.prototype.refresh=function(e){var t,o,s=this;o=s.slideCount-s.options.slidesToShow,!s.options.infinite&&s.currentSlide>o&&(s.currentSlide=o),s.slideCount<=s.options.slidesToShow&&(s.currentSlide=0),t=s.currentSlide,s.destroy(!0),i.extend(s,s.initials,{currentSlide:t}),s.init(),e||s.changeSlide({data:{message:"index",index:t}},!1)},e.prototype.registerBreakpoints=function(){var e,t,o,s=this,n=s.options.responsive||null;if("array"===i.type(n)&&n.length){s.respondTo=s.options.respondTo||"window";for(e in n)if(o=s.breakpoints.length-1,n.hasOwnProperty(e)){for(t=n[e].breakpoint;o>=0;)s.breakpoints[o]&&s.breakpoints[o]===t&&s.breakpoints.splice(o,1),o--;s.breakpoints.push(t),s.breakpointSettings[t]=n[e].settings}s.breakpoints.sort(function(i,e){return s.options.mobileFirst?i-e:e-i})}},e.prototype.reinit=function(){var e=this;e.$slides=e.$slideTrack.children(e.options.slide).addClass("slick-slide"),e.slideCount=e.$slides.length,e.currentSlide>=e.slideCount&&0!==e.currentSlide&&(e.currentSlide=e.currentSlide-e.options.slidesToScroll),e.slideCount<=e.options.slidesToShow&&(e.currentSlide=0),e.registerBreakpoints(),e.setProps(),e.setupInfinite(),e.buildArrows(),e.updateArrows(),e.initArrowEvents(),e.buildDots(),e.updateDots(),e.initDotEvents(),e.cleanUpSlideEvents(),e.initSlideEvents(),e.checkResponsive(!1,!0),!0===e.options.focusOnSelect&&i(e.$slideTrack).children().on("click.slick",e.selectHandler),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),e.setPosition(),e.focusHandler(),e.paused=!e.options.autoplay,e.autoPlay(),e.$slider.trigger("reInit",[e])},e.prototype.resize=function(){var e=this;i(window).width()!==e.windowWidth&&(clearTimeout(e.windowDelay),e.windowDelay=window.setTimeout(function(){e.windowWidth=i(window).width(),e.checkResponsive(),e.unslicked||e.setPosition()},50))},e.prototype.removeSlide=e.prototype.slickRemove=function(i,e,t){var o=this;if(i="boolean"==typeof i?!0===(e=i)?0:o.slideCount-1:!0===e?--i:i,o.slideCount<1||i<0||i>o.slideCount-1)return!1;o.unload(),!0===t?o.$slideTrack.children().remove():o.$slideTrack.children(this.options.slide).eq(i).remove(),o.$slides=o.$slideTrack.children(this.options.slide),o.$slideTrack.children(this.options.slide).detach(),o.$slideTrack.append(o.$slides),o.$slidesCache=o.$slides,o.reinit()},e.prototype.setCSS=function(i){var e,t,o=this,s={};!0===o.options.rtl&&(i=-i),e="left"==o.positionProp?Math.ceil(i)+"px":"0px",t="top"==o.positionProp?Math.ceil(i)+"px":"0px",s[o.positionProp]=i,!1===o.transformsEnabled?o.$slideTrack.css(s):(s={},!1===o.cssTransitions?(s[o.animType]="translate("+e+", "+t+")",o.$slideTrack.css(s)):(s[o.animType]="translate3d("+e+", "+t+", 0px)",o.$slideTrack.css(s)))},e.prototype.setDimensions=function(){var i=this;!1===i.options.vertical?!0===i.options.centerMode&&i.$list.css({padding:"0px "+i.options.centerPadding}):(i.$list.height(i.$slides.first().outerHeight(!0)*i.options.slidesToShow),!0===i.options.centerMode&&i.$list.css({padding:i.options.centerPadding+" 0px"})),i.listWidth=i.$list.width(),i.listHeight=i.$list.height(),!1===i.options.vertical&&!1===i.options.variableWidth?(i.slideWidth=Math.ceil(i.listWidth/i.options.slidesToShow),i.$slideTrack.width(Math.ceil(i.slideWidth*i.$slideTrack.children(".slick-slide").length))):!0===i.options.variableWidth?i.$slideTrack.width(5e3*i.slideCount):(i.slideWidth=Math.ceil(i.listWidth),i.$slideTrack.height(Math.ceil(i.$slides.first().outerHeight(!0)*i.$slideTrack.children(".slick-slide").length)));var e=i.$slides.first().outerWidth(!0)-i.$slides.first().width();!1===i.options.variableWidth&&i.$slideTrack.children(".slick-slide").width(i.slideWidth-e)},e.prototype.setFade=function(){var e,t=this;t.$slides.each(function(o,s){e=t.slideWidth*o*-1,!0===t.options.rtl?i(s).css({position:"relative",right:e,top:0,zIndex:t.options.zIndex-2,opacity:0}):i(s).css({position:"relative",left:e,top:0,zIndex:t.options.zIndex-2,opacity:0})}),t.$slides.eq(t.currentSlide).css({zIndex:t.options.zIndex-1,opacity:1})},e.prototype.setHeight=function(){var i=this;if(1===i.options.slidesToShow&&!0===i.options.adaptiveHeight&&!1===i.options.vertical){var e=i.$slides.eq(i.currentSlide).outerHeight(!0);i.$list.css("height",e)}},e.prototype.setOption=e.prototype.slickSetOption=function(){var e,t,o,s,n,r=this,l=!1;if("object"===i.type(arguments[0])?(o=arguments[0],l=arguments[1],n="multiple"):"string"===i.type(arguments[0])&&(o=arguments[0],s=arguments[1],l=arguments[2],"responsive"===arguments[0]&&"array"===i.type(arguments[1])?n="responsive":void 0!==arguments[1]&&(n="single")),"single"===n)r.options[o]=s;else if("multiple"===n)i.each(o,function(i,e){r.options[i]=e});else if("responsive"===n)for(t in s)if("array"!==i.type(r.options.responsive))r.options.responsive=[s[t]];else{for(e=r.options.responsive.length-1;e>=0;)r.options.responsive[e].breakpoint===s[t].breakpoint&&r.options.responsive.splice(e,1),e--;r.options.responsive.push(s[t])}l&&(r.unload(),r.reinit())},e.prototype.setPosition=function(){var i=this;i.setDimensions(),i.setHeight(),!1===i.options.fade?i.setCSS(i.getLeft(i.currentSlide)):i.setFade(),i.$slider.trigger("setPosition",[i])},e.prototype.setProps=function(){var i=this,e=document.body.style;i.positionProp=!0===i.options.vertical?"top":"left","top"===i.positionProp?i.$slider.addClass("slick-vertical"):i.$slider.removeClass("slick-vertical"),void 0===e.WebkitTransition&&void 0===e.MozTransition&&void 0===e.msTransition||!0===i.options.useCSS&&(i.cssTransitions=!0),i.options.fade&&("number"==typeof i.options.zIndex?i.options.zIndex<3&&(i.options.zIndex=3):i.options.zIndex=i.defaults.zIndex),void 0!==e.OTransform&&(i.animType="OTransform",i.transformType="-o-transform",i.transitionType="OTransition",void 0===e.perspectiveProperty&&void 0===e.webkitPerspective&&(i.animType=!1)),void 0!==e.MozTransform&&(i.animType="MozTransform",i.transformType="-moz-transform",i.transitionType="MozTransition",void 0===e.perspectiveProperty&&void 0===e.MozPerspective&&(i.animType=!1)),void 0!==e.webkitTransform&&(i.animType="webkitTransform",i.transformType="-webkit-transform",i.transitionType="webkitTransition",void 0===e.perspectiveProperty&&void 0===e.webkitPerspective&&(i.animType=!1)),void 0!==e.msTransform&&(i.animType="msTransform",i.transformType="-ms-transform",i.transitionType="msTransition",void 0===e.msTransform&&(i.animType=!1)),void 0!==e.transform&&!1!==i.animType&&(i.animType="transform",i.transformType="transform",i.transitionType="transition"),i.transformsEnabled=i.options.useTransform&&null!==i.animType&&!1!==i.animType},e.prototype.setSlideClasses=function(i){var e,t,o,s,n=this;if(t=n.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden","true"),n.$slides.eq(i).addClass("slick-current"),!0===n.options.centerMode){var r=n.options.slidesToShow%2==0?1:0;e=Math.floor(n.options.slidesToShow/2),!0===n.options.infinite&&(i>=e&&i<=n.slideCount-1-e?n.$slides.slice(i-e+r,i+e+1).addClass("slick-active").attr("aria-hidden","false"):(o=n.options.slidesToShow+i,t.slice(o-e+1+r,o+e+2).addClass("slick-active").attr("aria-hidden","false")),0===i?t.eq(t.length-1-n.options.slidesToShow).addClass("slick-center"):i===n.slideCount-1&&t.eq(n.options.slidesToShow).addClass("slick-center")),n.$slides.eq(i).addClass("slick-center")}else i>=0&&i<=n.slideCount-n.options.slidesToShow?n.$slides.slice(i,i+n.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"):t.length<=n.options.slidesToShow?t.addClass("slick-active").attr("aria-hidden","false"):(s=n.slideCount%n.options.slidesToShow,o=!0===n.options.infinite?n.options.slidesToShow+i:i,n.options.slidesToShow==n.options.slidesToScroll&&n.slideCount-i<n.options.slidesToShow?t.slice(o-(n.options.slidesToShow-s),o+s).addClass("slick-active").attr("aria-hidden","false"):t.slice(o,o+n.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"));"ondemand"!==n.options.lazyLoad&&"anticipated"!==n.options.lazyLoad||n.lazyLoad()},e.prototype.setupInfinite=function(){var e,t,o,s=this;if(!0===s.options.fade&&(s.options.centerMode=!1),!0===s.options.infinite&&!1===s.options.fade&&(t=null,s.slideCount>s.options.slidesToShow)){for(o=!0===s.options.centerMode?s.options.slidesToShow+1:s.options.slidesToShow,e=s.slideCount;e>s.slideCount-o;e-=1)t=e-1,i(s.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t-s.slideCount).prependTo(s.$slideTrack).addClass("slick-cloned");for(e=0;e<o+s.slideCount;e+=1)t=e,i(s.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t+s.slideCount).appendTo(s.$slideTrack).addClass("slick-cloned");s.$slideTrack.find(".slick-cloned").find("[id]").each(function(){i(this).attr("id","")})}},e.prototype.interrupt=function(i){var e=this;i||e.autoPlay(),e.interrupted=i},e.prototype.selectHandler=function(e){var t=this,o=i(e.target).is(".slick-slide")?i(e.target):i(e.target).parents(".slick-slide"),s=parseInt(o.attr("data-slick-index"));s||(s=0),t.slideCount<=t.options.slidesToShow?t.slideHandler(s,!1,!0):t.slideHandler(s)},e.prototype.slideHandler=function(i,e,t){var o,s,n,r,l,d=null,a=this;if(e=e||!1,!(!0===a.animating&&!0===a.options.waitForAnimate||!0===a.options.fade&&a.currentSlide===i))if(!1===e&&a.asNavFor(i),o=i,d=a.getLeft(o),r=a.getLeft(a.currentSlide),a.currentLeft=null===a.swipeLeft?r:a.swipeLeft,!1===a.options.infinite&&!1===a.options.centerMode&&(i<0||i>a.getDotCount()*a.options.slidesToScroll))!1===a.options.fade&&(o=a.currentSlide,!0!==t?a.animateSlide(r,function(){a.postSlide(o)}):a.postSlide(o));else if(!1===a.options.infinite&&!0===a.options.centerMode&&(i<0||i>a.slideCount-a.options.slidesToScroll))!1===a.options.fade&&(o=a.currentSlide,!0!==t?a.animateSlide(r,function(){a.postSlide(o)}):a.postSlide(o));else{if(a.options.autoplay&&clearInterval(a.autoPlayTimer),s=o<0?a.slideCount%a.options.slidesToScroll!=0?a.slideCount-a.slideCount%a.options.slidesToScroll:a.slideCount+o:o>=a.slideCount?a.slideCount%a.options.slidesToScroll!=0?0:o-a.slideCount:o,a.animating=!0,a.$slider.trigger("beforeChange",[a,a.currentSlide,s]),n=a.currentSlide,a.currentSlide=s,a.setSlideClasses(a.currentSlide),a.options.asNavFor&&(l=(l=a.getNavTarget()).slick("getSlick")).slideCount<=l.options.slidesToShow&&l.setSlideClasses(a.currentSlide),a.updateDots(),a.updateArrows(),!0===a.options.fade)return!0!==t?(a.fadeSlideOut(n),a.fadeSlide(s,function(){a.postSlide(s)})):a.postSlide(s),void a.animateHeight();!0!==t?a.animateSlide(d,function(){a.postSlide(s)}):a.postSlide(s)}},e.prototype.startLoad=function(){var i=this;!0===i.options.arrows&&i.slideCount>i.options.slidesToShow&&(i.$prevArrow.hide(),i.$nextArrow.hide()),!0===i.options.dots&&i.slideCount>i.options.slidesToShow&&i.$dots.hide(),i.$slider.addClass("slick-loading")},e.prototype.swipeDirection=function(){var i,e,t,o,s=this;return i=s.touchObject.startX-s.touchObject.curX,e=s.touchObject.startY-s.touchObject.curY,t=Math.atan2(e,i),(o=Math.round(180*t/Math.PI))<0&&(o=360-Math.abs(o)),o<=45&&o>=0?!1===s.options.rtl?"left":"right":o<=360&&o>=315?!1===s.options.rtl?"left":"right":o>=135&&o<=225?!1===s.options.rtl?"right":"left":!0===s.options.verticalSwiping?o>=35&&o<=135?"down":"up":"vertical"},e.prototype.swipeEnd=function(i){var e,t,o=this;if(o.dragging=!1,o.swiping=!1,o.scrolling)return o.scrolling=!1,!1;if(o.interrupted=!1,o.shouldClick=!(o.touchObject.swipeLength>10),void 0===o.touchObject.curX)return!1;if(!0===o.touchObject.edgeHit&&o.$slider.trigger("edge",[o,o.swipeDirection()]),o.touchObject.swipeLength>=o.touchObject.minSwipe){switch(t=o.swipeDirection()){case"left":case"down":e=o.options.swipeToSlide?o.checkNavigable(o.currentSlide+o.getSlideCount()):o.currentSlide+o.getSlideCount(),o.currentDirection=0;break;case"right":case"up":e=o.options.swipeToSlide?o.checkNavigable(o.currentSlide-o.getSlideCount()):o.currentSlide-o.getSlideCount(),o.currentDirection=1}"vertical"!=t&&(o.slideHandler(e),o.touchObject={},o.$slider.trigger("swipe",[o,t]))}else o.touchObject.startX!==o.touchObject.curX&&(o.slideHandler(o.currentSlide),o.touchObject={})},e.prototype.swipeHandler=function(i){var e=this;if(!(!1===e.options.swipe||"ontouchend"in document&&!1===e.options.swipe||!1===e.options.draggable&&-1!==i.type.indexOf("mouse")))switch(e.touchObject.fingerCount=i.originalEvent&&void 0!==i.originalEvent.touches?i.originalEvent.touches.length:1,e.touchObject.minSwipe=e.listWidth/e.options.touchThreshold,!0===e.options.verticalSwiping&&(e.touchObject.minSwipe=e.listHeight/e.options.touchThreshold),i.data.action){case"start":e.swipeStart(i);break;case"move":e.swipeMove(i);break;case"end":e.swipeEnd(i)}},e.prototype.swipeMove=function(i){var e,t,o,s,n,r,l=this;return n=void 0!==i.originalEvent?i.originalEvent.touches:null,!(!l.dragging||l.scrolling||n&&1!==n.length)&&(e=l.getLeft(l.currentSlide),l.touchObject.curX=void 0!==n?n[0].pageX:i.clientX,l.touchObject.curY=void 0!==n?n[0].pageY:i.clientY,l.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(l.touchObject.curX-l.touchObject.startX,2))),r=Math.round(Math.sqrt(Math.pow(l.touchObject.curY-l.touchObject.startY,2))),!l.options.verticalSwiping&&!l.swiping&&r>4?(l.scrolling=!0,!1):(!0===l.options.verticalSwiping&&(l.touchObject.swipeLength=r),t=l.swipeDirection(),void 0!==i.originalEvent&&l.touchObject.swipeLength>4&&(l.swiping=!0,i.preventDefault()),s=(!1===l.options.rtl?1:-1)*(l.touchObject.curX>l.touchObject.startX?1:-1),!0===l.options.verticalSwiping&&(s=l.touchObject.curY>l.touchObject.startY?1:-1),o=l.touchObject.swipeLength,l.touchObject.edgeHit=!1,!1===l.options.infinite&&(0===l.currentSlide&&"right"===t||l.currentSlide>=l.getDotCount()&&"left"===t)&&(o=l.touchObject.swipeLength*l.options.edgeFriction,l.touchObject.edgeHit=!0),!1===l.options.vertical?l.swipeLeft=e+o*s:l.swipeLeft=e+o*(l.$list.height()/l.listWidth)*s,!0===l.options.verticalSwiping&&(l.swipeLeft=e+o*s),!0!==l.options.fade&&!1!==l.options.touchMove&&(!0===l.animating?(l.swipeLeft=null,!1):void l.setCSS(l.swipeLeft))))},e.prototype.swipeStart=function(i){var e,t=this;if(t.interrupted=!0,1!==t.touchObject.fingerCount||t.slideCount<=t.options.slidesToShow)return t.touchObject={},!1;void 0!==i.originalEvent&&void 0!==i.originalEvent.touches&&(e=i.originalEvent.touches[0]),t.touchObject.startX=t.touchObject.curX=void 0!==e?e.pageX:i.clientX,t.touchObject.startY=t.touchObject.curY=void 0!==e?e.pageY:i.clientY,t.dragging=!0},e.prototype.unfilterSlides=e.prototype.slickUnfilter=function(){var i=this;null!==i.$slidesCache&&(i.unload(),i.$slideTrack.children(this.options.slide).detach(),i.$slidesCache.appendTo(i.$slideTrack),i.reinit())},e.prototype.unload=function(){var e=this;i(".slick-cloned",e.$slider).remove(),e.$dots&&e.$dots.remove(),e.$prevArrow&&e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.remove(),e.$nextArrow&&e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.remove(),e.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden","true").css("width","")},e.prototype.unslick=function(i){var e=this;e.$slider.trigger("unslick",[e,i]),e.destroy()},e.prototype.updateArrows=function(){var i=this;Math.floor(i.options.slidesToShow/2),!0===i.options.arrows&&i.slideCount>i.options.slidesToShow&&!i.options.infinite&&(i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false"),i.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false"),0===i.currentSlide?(i.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true"),i.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false")):i.currentSlide>=i.slideCount-i.options.slidesToShow&&!1===i.options.centerMode?(i.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")):i.currentSlide>=i.slideCount-1&&!0===i.options.centerMode&&(i.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")))},e.prototype.updateDots=function(){var i=this;null!==i.$dots&&(i.$dots.find("li").removeClass("slick-active").end(),i.$dots.find("li").eq(Math.floor(i.currentSlide/i.options.slidesToScroll)).addClass("slick-active"))},e.prototype.visibility=function(){var i=this;i.options.autoplay&&(document[i.hidden]?i.interrupted=!0:i.interrupted=!1)},i.fn.slick=function(){var i,t,o=this,s=arguments[0],n=Array.prototype.slice.call(arguments,1),r=o.length;for(i=0;i<r;i++)if("object"==typeof s||void 0===s?o[i].slick=new e(o[i],s):t=o[i].slick[s].apply(o[i].slick,n),void 0!==t)return t;return o}});

/*global define, console, document, window*/
(function (root, factory) {
    "use strict";
    if (typeof define === 'function' && define.amd) {
        define("Animations", ["jquery", "Behaviors"], factory);
    } else {
        root.Animations = factory(root.jQuery, root.Behaviors);
    }
}(this, function ($, Behaviors) {
    "use strict";
    
    var module = {};

    /* Watches for the start and end of an animation.
     *
     * The .promise attribute stores a promise which resolves whenever the
     * animation has completed or no animation events were detected over a
     * timeout period of 5 second.
     *
     * An important caveat: Animations with delay longer than 5 seconds will
     * fail to fire events and the animation watcher will trigger the timeout
     * behavior instead. You can avoid this behavior by triggering another
     * animation of any kind during the timeout period and keeping it alive
     * until the delayed animation begins.
     */
    function AnimationWatcher($elem) {
        var Class = this.constructor,
            eventSelector = Class.get_unique_id(),
            that = this,
            evtStartNames = "animationstart." + eventSelector +
                      " webkitAnimationStart." + eventSelector +
                      " oanimationstart." + eventSelector +
                      " MSAnimationStart." + eventSelector,
            evtEndNames = "animationend." + eventSelector +
                      " webkitAnimationEnd." + eventSelector +
                      " oanimationend." + eventSelector +
                      " MSAnimationEnd." + eventSelector,
            animation_start = this.animation_start.bind(this),
            animation_end = this.animation_end.bind(this),
            animation_timeout_delay = 5000;

        this.eventSelector = eventSelector;

        this.$elem = $elem;
        this.$elem.on(evtStartNames, animation_start);
        this.$elem.on(evtEndNames, animation_end);

        if (window.Modernizr && window.Modernizr.cssanimations === false) {
            animation_timeout_delay = 0;
        }

        this.timeout = window.setTimeout(this.abort_animation.bind(this), animation_timeout_delay);
        this.remaining_animations = [];

        //We remove event handlers after one of the handlers resolves the
        //animation promise.
        this.promise = new Promise(function (resolve, reject) {
            that.resolve = resolve;
            that.reject = reject;
        }).then(function () {
            that.$elem.off(evtStartNames, animation_start);
            that.$elem.off(evtEndNames, animation_end);
        });

        console.log("ANIMATIONWATCHER" + this.eventSelector + ": Created");
    }

    AnimationWatcher.count = 0;

    AnimationWatcher.get_unique_id = function () {
        var Class = this,
            sel = "." + Class.name + "_" + Class.count;

        Class.count += 1;
        return sel;
    };

    AnimationWatcher.prototype.animation_start = function (evt) {
        console.log("ANIMATIONWATCHER" + this.eventSelector + ": Begun (" + evt.originalEvent.animationName + ")");
        if (this.timeout !== null) {
            window.clearTimeout(this.timeout);
            this.timeout = null;
        }

        this.remaining_animations.push(evt.originalEvent.animationName);
    };

    AnimationWatcher.prototype.animation_end = function (evt) {
        var loc = this.remaining_animations.indexOf(evt.originalEvent.animationName);

        console.log("ANIMATIONWATCHER" + this.eventSelector + ": Ended (" + evt.originalEvent.animationName + ")");

        if (loc !== -1) {
            this.remaining_animations.splice(loc, 1);
        }

        if (this.remaining_animations.length === 0) {
            this.resolve();
        }
    };

    AnimationWatcher.prototype.abort_animation = function (evt) {
        console.log("ANIMATIONWATCHER" + this.eventSelector + ": Abort timeout triggered");

        if (this.remaining_animations.length === 0) {
            this.resolve();
        }
    };

    module.AnimationWatcher = AnimationWatcher;

    return module;
}));

/*global define, console*/
/*jslint bitwise: true */
/* updated 9/14/2016 */

if (!Array.prototype.indexOf) {
    Array.prototype.indexOf = function (elt) { /*, from*/
        "use strict";
        var len = this.length >>> 0, from = Number(arguments[1]) || 0, derparam;
        from = (from < 0) ? Math.ceil(from) : Math.floor(from);
        if (from < 0) {
            from += len;
        }

        for (derparam; from < len; from += 1) {
            if (from in this && this[from] === elt) {
                return from;
            }
        }
        return -1;
    };
}

(function (root, factory) {
    "use strict";
    if (typeof define === 'function' && define.amd) {
        define("betteroffcanvas", ["jquery"], factory);
    } else {
        // Browser globals
        root.betteroffcanvas = factory(root.jQuery);
    }
}(this, function ($) {
    //BetterOffcanvas
    //Works like this:
    /*
    *  <button type="button" data-toggle="offcanvas" data-target="#any-selector">
    */

    "use strict";

    var $openTarget = null, currentLevel = 0, module = {}, isInDebounce = false,
        target_has_touch = false,
        focus_click_inquiry = false, click_keydown_inquiry = false,
        eligibleTouches = {},
        logger;
    
    /* Logger that throws away all data (default)
     */
    function null_logging() {
        return;
    }
    
    /* Logger that sends all logged data to the JS console.
     */
    function console_logging(log_data) {
        return console.log(log_data);
    }
    
    function switchLoggingMode(mode) {
        switch (mode) {
        case "console":
            logger = console_logging;
            break;
        default:
            logger = null_logging;
            break;
        }
    }
    
    //Inform the user they can enable console logging
    console.log("Offcanvas: You can enable detailed event logging by typing betteroffcanvas.switchLoggingMode('console').");
    switchLoggingMode("null");

    function initOffcanvasToggle($theToggle) {
        var $theTarget = $($theToggle.data("target")), toggleOptions = $theToggle.data("toggle-options"),
            state;

        if ($theTarget.data("offcanvas-state") === undefined) {
            $theTarget.data("offcanvas-state", {"open": false, "parents": null, "$openChild": null, "openChildLvl": 0, "toggleOptions": []});
        }

        state = $theTarget.data("offcanvas-state");

        if (state.toggleOptions === undefined) {
            state.toggleOptions = [];
        }

        if (toggleOptions !== undefined) {
            state.toggleOptions.push.apply(state.toggleOptions, toggleOptions.split(" "));
        }

        $theTarget.data("offcanvas-state", state);

        return $theTarget;
    }

    function findParentLevels($theTarget) {
        var parents = [], tgtState = $theTarget.data("offcanvas-state");

        if (tgtState.parents === null) {
            $theTarget.parents().each(function (index, pelem) {
                var $pelem = $(pelem),
                    parState = $pelem.data("offcanvas-state"),
                    $parTgl;

                if (parState === undefined) {
                    if ($pelem.attr("id") !== undefined) {
                        $parTgl = $("[data-toggle='offcanvas'][data-target='#" + $pelem.attr("id") + "']");
                        if ($parTgl.length > 0) {
                            initOffcanvasToggle($parTgl);
                            parents.push(pelem);
                        }
                    }
                } else {
                    parents.push(pelem);
                }
            });

            tgtState.parents = parents;
            $theTarget.data("offcanvas-state", tgtState);

            $(tgtState.parents).each(function (index, pelem) {
                findParentLevels($(pelem));
            });
        }
    }

    function initOffcanvas($theTarget, toggleOptions) {
        if (toggleOptions === undefined) {
            toggleOptions = [];
        }
        
        if ($theTarget.data("offcanvas-state") === undefined) {
            $theTarget.data("offcanvas-state", {"open": false, "parents": null, "$openChild": null, "openChildLvl": 0, "toggleOptions": toggleOptions});
        }

        findParentLevels($theTarget);
    }

    function isOffcanvas($theTargetList) {
        var truth = true;

        $theTargetList.each(function (index, elem) {
            var $theTarget = $(elem), $toggles;

            if ($theTarget.data("offcanvas-state") !== undefined) {
                truth = truth & true;
                return;
            }

            $toggles = $("[data-toggle='offcanvas'][data-target='#" + $theTarget.attr("id") + "']");

            if ($toggles.length > 0) {
                initOffcanvas($theTarget);

                $toggles.each(function (index, elem) {
                    initOffcanvasToggle($(elem));
                });

                truth &= true;
                return;
            }

            truth &= false;
        });

        return truth;
    }

    function isChildOffcanvas($theTarget, $potentialParent) {
        if (!isOffcanvas($theTarget) || !isOffcanvas($potentialParent)) {
            return false;
        }

        if ($theTarget.data("offcanvas-state").parents.indexOf($potentialParent[0]) === -1) {
            return false;
        }

        return true;
    }

    function isTopLevelOffcanvas($theTarget) {
        return isOffcanvas($theTarget) && $theTarget.data("offcanvas-state").parents.length === 0;
    }

    function updateBackdrop(newLevel, openTargetList) {
        var $backdropDivs = $("[data-offcanvas-backdrop]");

        $backdropDivs.each(function (index, bdElem) {
            var $bdElem = $(bdElem),
                bdLevel = $bdElem.data("offcanvas-backdrop"),
                bdFor = $bdElem.data("offcanvas-backdrop-for");

            if (bdFor !== undefined && openTargetList.indexOf(bdFor) === -1) {
                $bdElem.removeClass("is-Offcanvas--backdrop_active");
                $bdElem.addClass("is-Offcanvas--backdrop_inactive");
            } else if (newLevel >= bdLevel) {
                $bdElem.addClass("is-Offcanvas--backdrop_active");
                $bdElem.removeClass("is-Offcanvas--backdrop_inactive");
            } else {
                $bdElem.removeClass("is-Offcanvas--backdrop_active");
                $bdElem.addClass("is-Offcanvas--backdrop_inactive");
            }
        });

        currentLevel = newLevel;
    }

    function scanChildrenWithinLevel($theTarget, cbk) {
        $theTarget.each(function (index, elem) {
            var $elem = $(elem);

            if (isOffcanvas($elem)) {
                return;
            }

            cbk($elem);
            scanChildrenWithinLevel($elem.children(), cbk);
        });
    }

    function setFocusableWithinLevel($theTarget, isFocusable) {
        if (isFocusable === undefined) {
            isFocusable = true;
        }

        logger("changing focus state to " + isFocusable);

        scanChildrenWithinLevel($theTarget.children(), function ($elem) {
            if ($elem.data("offcanvas-tabindex") === undefined) {
                //Determine if this element should be focusable or not...
                if ($elem.attr("tabindex") !== undefined) {
                    $elem.data("offcanvas-tabindex", $elem.attr("offcanvas-tabindex"));
                } else {
                    $elem.data("offcanvas-tabindex", null);
                }
            }

            if (isFocusable) {
                if ($elem.data("offcanvas-tabindex") === null) {
                    $elem.removeAttr("tabindex");
                } else {
                    $elem.attr("tabindex", $elem.data("offcanvas-tabindex"));
                }
            } else {
                $elem.attr("tabindex", -1);
            }
        });
    }

    function openOffcanvas($theTarget, $theToggle, eventType, isRecursive, recursiveCount) {
        var tgtState, $pelem, parState, newLevel = 1, i, targetIDs = [], $topElem, topState, newEvent;
        if ($theTarget !== null && $theTarget !== undefined) {
            logger("Open Offcanvas " + $theTarget.attr("id"));
        } else {
            logger("Open Offcanvas (no target)");
        }

        if ($theTarget === null) {
            return;
        }
        tgtState = $theTarget.data("offcanvas-state");

        if (recursiveCount === undefined) {
            recursiveCount = 1;
        }

        $theTarget.addClass("is-Offcanvas--open");
        $theTarget.removeClass("is-Offcanvas--closed");
        tgtState.open = true;
        tgtState.open_event = eventType;
        $theTarget.data("offcanvas-state", tgtState);

        $("[data-toggle='offcanvas'][data-target='#" + $theTarget.attr("id") + "']").addClass("is-Offcanvas--target_open");

        setFocusableWithinLevel($theTarget, true);

        if (tgtState.parents.length > 0) {
            $pelem = $(tgtState.parents[0]);

            parState = $pelem.data("offcanvas-state");
            parState.$openChild = $theTarget;
            parState.openChildLvl = recursiveCount;
            $pelem.data("offcanvas-state", parState);

            $pelem.addClass("is-Offcanvas--open_sublvl_" + recursiveCount);

            openOffcanvas($pelem, $theToggle, eventType, true, recursiveCount + 1);

            newLevel = newLevel + tgtState.parents.length;

            $topElem = $(tgtState.parents[tgtState.parents.length - 1]);
            if ($topElem.length > 0) {
                topState = $topElem.data("offcanvas-state");

                if (topState !== undefined) {
                    if (topState.childDepthLvl !== undefined) {
                        $topElem.removeClass("is-Offcanvas--depth_" + topState.childDepthLvl);
                    }

                    topState.childDepthLvl = tgtState.parents.length;
                    $topElem.addClass("is-Offcanvas--depth_" + topState.childDepthLvl);
                }
            }
        }

        if (isRecursive !== true) {
            targetIDs.push($theTarget.attr("id"));

            for (i = 0; i < tgtState.parents.length; i += 1) {
                targetIDs.push(tgtState.parents[i].getAttribute("id"));
            }

            updateBackdrop(newLevel, targetIDs);
        }

        $openTarget = $theTarget;

        newEvent = new $.Event({
            "type": "offcanvas-open",
            "target": $theTarget,
            "toggle": $theToggle,
            "from_child": isRecursive,
            "children_count": recursiveCount,
            "source_event_type": eventType,
        });
        $theTarget.trigger(newEvent);
    }
    
    /* Determine if a user-triggered event is allowed to dismiss an offcanvas
     * or not.
     * 
     * This function is consistenly called before dismissOffcanvas in order to
     * gate event-driven dismissals consistently. Programmatic dismissals (e.g.
     * by third-party code or for clearing the way for the next offcanvas) are
     * NOT gated in the same way.
     * 
     * To gate dismissals in the same fashion, call this function with the
     * following four parameters:
     * 
     *  - $_openTarget: The currently open offcanvas at the start of event
     *                 processing. Specify false to automatically select the
     *                 current open target. Specify undefined for no open
     *                 target.
     * 
     *  - $newTarget:  The new offcanvas that you plan to open at the end of
     *                 event processing.
     * 
     *  - evt:         The event that triggered your current event processing.
     *                 Your code is expected to filter mobile emulation events
     *                 such as emulated click-after-touchend through some means
     *                 so that this function can differentiate between the two.
     * 
     *  - $evtToggle:  The element which triggered the event. May be a
     *                 data-toggle or data-dismiss element. This is not,
     *                 strictly speaking, evt.target: client code is allowed and
     *                 expected to traverse the parents of the target to find,
     *                 say, the button containing the actual event target.
     * 
     * In the event of recieving false from this function, event handlers should
     * cease any event processing which would cause the open target to be
     * dismissed, including opening other offcanvas hierarchies as that will
     * implicitly dismiss the current one.
     */
    function eventCanDismissOffcanvas($_openTarget, $newTarget, evt, $evtToggle) {
        var openTargetState = {"toggleOptions": []}, openTargetIsNoHover = false,
            openTargetWasHovered = false,
            targetsAreIdentical = false,
            evtFromToggle = false, evtFromDismiss = false,
            evtWithinOpenTarget = false,
            evtToggleOptions, evtToggleIsNoHover = false,
            evtToggleTargetsOpenTarget = false,
            hasNewTarget,
            hasOpenTarget,
            hasEventToggle;
        
        if ($_openTarget === false) {
            $_openTarget = $openTarget;
        }
        
        hasNewTarget = $newTarget !== undefined && $newTarget !== null && $newTarget.length >= 1;
        hasOpenTarget = $_openTarget !== undefined && $_openTarget !== null && $_openTarget.length >= 1;
        hasEventToggle = $evtToggle !== undefined && $evtToggle !== null && $evtToggle.length >= 1;
        
        if (hasOpenTarget) {
            openTargetState = $_openTarget.data("offcanvas-state");
            openTargetIsNoHover = openTargetState.toggleOptions.indexOf("nohover") > -1;
            openTargetWasHovered = openTargetState.open_event === "mouseover";
            
            if (evt.target) {
                evtWithinOpenTarget = $_openTarget[0] === evt.target || $.contains($_openTarget[0], evt.target);
            }
        } else {
            logger("Dismissals are always allowed if no offcanvas is open");
            return true;
        }
        
        if (hasNewTarget) {
            targetsAreIdentical = $_openTarget[0] === $newTarget[0];
        }
        
        if (hasEventToggle) {
            evtFromToggle = $evtToggle.filter("[data-toggle='offcanvas']").length > 0 ||
                            $evtToggle.parents().filter("[data-toggle='offcanvas']").length > 0;
            evtFromDismiss = $evtToggle.filter("[data-dismiss='offcanvas']").length > 0 ||
                             $evtToggle.parents().filter("[data-dismiss='offcanvas']").length > 0;
            
            evtToggleOptions = $evtToggle.data("toggle-options");
            if (evtToggleOptions !== undefined) {
                evtToggleOptions = evtToggleOptions.split(" ");
            } else {
                evtToggleOptions = [];
            }
            
            evtToggleIsNoHover = evtToggleOptions.indexOf("nohover") > -1;
            evtToggleTargetsOpenTarget = $evtToggle.data("target") === "#" + $_openTarget.attr("id");
        }
        
        //Dismissals by toggling the same target
        if (evt.type === "click" && openTargetWasHovered) {
            if (targetsAreIdentical) {
                logger("Not going to allow dismiss from click on already hovered nav.");
                return false;
            }
        }
        
        if (evt.type === "focusin") {
            if (targetsAreIdentical) { //TODO: should this be evtWithinOpenTarget?
                logger("Not going to allow dismiss from focusin within same target");
                return false;
            }
            
            if (!hasNewTarget && (evtFromToggle || evtFromDismiss)) {
                logger("Ignoring focus-dismiss due to the fact that event target is an offcanvas toggle.");
                logger("Currently focused off-canvas element: " + $_openTarget.attr("id"));
                return false;
            }
        }
        
        if (evt.type === "mouseover" && !evtWithinOpenTarget) {
            if (evtFromDismiss) {
                logger("Not going to allow dismiss until user actually clicks hovered dismiss button.");
                return false;
            } else if (evtToggleIsNoHover || openTargetIsNoHover) {
                logger("Not going to allow dismiss as toggle is nohover.");
                return false;
            } else if (evtFromToggle && targetsAreIdentical) {
                logger("Not going to allow dismiss as toggle is for current offcanvas.");
                return false;
            }
        }
        
        return true;
    }

    function dismissOffcanvas($theTarget, numLvls) {
        var tgtState = $theTarget.data("offcanvas-state"), newLvl = -1, i, targetIDs = [], $topElem, topState, newEvent;

        if ($theTarget !== null && $theTarget !== undefined) {
            logger("Dismiss Offcanvas " + $theTarget.attr("id"));
        } else {
            logger("Dismiss Offcanvas (no target)");
        }

        if (numLvls === undefined) {
            /* NumLvls is the number of recursion levels (children being auto-dismissed) */
            numLvls = 1;

            $topElem = $(tgtState.parents[tgtState.parents.length - 1]);
            if ($topElem.length > 0) {
                topState = $topElem.data("offcanvas-state");

                if (topState !== undefined) {
                    if (topState.childDepthLvl !== undefined) {
                        $topElem.removeClass("is-Offcanvas--depth_" + topState.childDepthLvl);
                    }

                    topState.childDepthLvl = tgtState.parents.length - 1;
                    $topElem.addClass("is-Offcanvas--depth_" + topState.childDepthLvl);
                }
            }
        }

        $theTarget.removeClass("is-Offcanvas--open");
        $theTarget.addClass("is-Offcanvas--closed");
        tgtState.open = false;
        tgtState.open_event = undefined;
        $theTarget.data("offcanvas-state", tgtState);

        $("[data-toggle='offcanvas'][data-target='#" + $theTarget.attr("id") + "']").removeClass("is-Offcanvas--target_open");

        newEvent = new $.Event({
            "type": "offcanvas-dismiss",
            "target": $theTarget
        });
        $theTarget.trigger(newEvent);

        //TODO: How do we actually tell if the offcanvas is visible when closed?
        //(e.g. desktop nav)
        if (!isTopLevelOffcanvas($theTarget)) {
            if ($theTarget !== null) {
                logger("Marking non-top-level offcanvas nav " + $theTarget.attr("id") + " as untabbable");
            }
            setFocusableWithinLevel($theTarget, false);
        }

        if (tgtState.$openChild !== null) {
            dismissOffcanvas(tgtState.$openChild, numLvls + 1);
        } else {
            if (tgtState.parents.length > 0) {
                $openTarget = $(tgtState.parents[numLvls - 1]);
                if ($openTarget.length === 0) {
                    $openTarget = null;
                }

                $(tgtState.parents).each(function (index, pelem) {
                    var $pelem = $(pelem), parState = $pelem.data("offcanvas-state"), childlvl, newChildLvl = parState.openChildLvl - numLvls;

                    $pelem.removeClass("is-Offcanvas--open_sublvl_" + parState.openChildLvl);
                    if (newChildLvl > 0) {
                        $pelem.addClass("is-Offcanvas--open_sublvl_" + newChildLvl);
                    } else {
                        parState.$openChild = null;
                    }

                    parState.openChildLvl = newChildLvl;
                    $pelem.data("offcanvas-state", parState);

                    if (newChildLvl > newLvl) {
                        newLvl = newChildLvl;
                    }
                });
            } else {
                $openTarget = null;
                newLvl = -1;
            }

            for (i = 0; i < tgtState.parents.length; i += 1) {
                targetIDs.push(tgtState.parents[i].getAttribute("id"));
            }

            updateBackdrop(newLvl + 1, targetIDs);
        }
    }

    function dismissOpenOffcanvas() {
        if ($openTarget !== null) {
            dismissOffcanvas($openTarget);
        }
    }

    function enableDebounce() {
        if (!isInDebounce) {
            logger("Debounce timeout enabled");
            isInDebounce = true;
            window.setTimeout(function () {
                logger("Debounce timeout expired - event processing will resume");
                isInDebounce = false;
            }, 100);
        }
    }

    $(document).on("keydown", function (evt) {
        if (evt.keyCode === 27) {
            dismissOpenOffcanvas();
        } else if (evt.keyCode === 13) {
            logger("Keydown event - ENTER. Disabling link clickthrough for the next click event.");
            click_keydown_inquiry = true; //mark that the following click event is
                                        //from a keyboard
        }
    });

    $(document).on("ready", function (evt) {
        var openIDs = [], openState, i;

        if ($openTarget !== null) {
            openState = $openTarget.data("offcanvas-state");

            for (i = 0; i < openState.parents.length; i += 1) {
                openIDs.push(openState.parents[i].getAttribute("id"));
            }

            updateBackdrop(currentLevel, openIDs);
        }
    });

    function on_focusin(evt) {
        var $tgt = $(evt.target), $tgtOffcanvas = null,
            $tgtParents = $tgt.parents(), $toggleTarget,
            dismissAllowed;

        $tgtParents.each(function (index, elem) {
            if ($tgtOffcanvas === null) {
                if (isOffcanvas($(elem))) {
                    $tgtOffcanvas = $(elem);
                }
            }
        });

        if (isInDebounce) {
            logger("Processed event (debounced, type: focusin)");
            return;
        }
        
        if ($tgt.data("toggle") === "offcanvas") {
            $toggleTarget = $($tgt.data("target"));
            if (!isTopLevelOffcanvas($toggleTarget)) {
                if ($toggleTarget !== null) {
                    logger("Marking non-top-level offcanvas nav " + $toggleTarget.attr("id") + " as untabbable");
                }
                setFocusableWithinLevel($toggleTarget, false);
            }
        }
        
        if (!eventCanDismissOffcanvas($openTarget, $tgtOffcanvas, evt, $tgt)) {
            return;
        }

        if ($tgtOffcanvas === null && $openTarget !== null) {
            logger("Focused on something outside of off-canvas nav " + $openTarget.attr("id"));
            logger($tgt);

            enableDebounce(); //prevent subsequent click event handlers from tripping

            while ($openTarget !== null) {
                dismissOpenOffcanvas();
            }
        } else {
            if ($tgtOffcanvas !== null) {
                logger("Focused inside off-canvas nav " + $tgtOffcanvas.attr("id"));
            }

            if ($openTarget !== null) {
                enableDebounce(); //prevent subsequent click event handlers from tripping

                while ($openTarget !== null && !isChildOffcanvas($tgtOffcanvas, $openTarget)) {
                    logger("Dismissing off-canvas menu " + $openTarget.attr("id"));
                    dismissOffcanvas($openTarget);
                }
            }
            openOffcanvas($tgtOffcanvas, $tgt, evt.type);
        }
    }
    
    //Track a specific set of focus events to ensure they don't result in a
    //click.
    $(document).on("focusin", function (evt) {
        logger(evt.type);

        focus_click_inquiry = true;

        window.setTimeout(function () {
            if (focus_click_inquiry) { //e.g. if a click event hasn't happened
                on_focusin(evt);
            }
        }, 300);
    });
    
    //Activate touch-specific behaviors if we have ever recieved a touch event.
    $(document).on("touchstart touchend touchmove touchcancel", function (evt) {
        target_has_touch = true;
    });
    
    /* Track the starting position of every touch we get. */
    $(document).on("touchstart", function (evt) {
        var i, touch;
        
        for (i = 0; i < evt.originalEvent.changedTouches.length; i += 1) {
            touch = evt.originalEvent.changedTouches.item(i);
            eligibleTouches[touch.identifier] = {
                "x": touch.screenX,
                "y": touch.screenY
            };
        }
    });
    
    /* Track and remove touches which have become drags.
     * Assumes a minimum drag distance of 15px.
     * Returns true if any of the given touches are still eligible.
     */
    function testAndPruneTouchList(changedTouches) {
        var i, touch, stTouch, dist, MAX_DIST = 15, num_valid_touches = 0;
        
        for (i = 0; i < changedTouches.length; i += 1) {
            touch = changedTouches.item(i);
            
            if (eligibleTouches.hasOwnProperty(touch.identifier)) {
                stTouch = eligibleTouches[touch.identifier];
                dist = Math.sqrt(Math.pow((touch.screenX - stTouch.x), 2.0)
                               + Math.pow((touch.screenY - stTouch.y), 2.0));
                
                if (dist > MAX_DIST) {
                    delete eligibleTouches[touch.identifier];
                } else {
                    num_valid_touches += 1;
                }
            }
        }
        
        return num_valid_touches > 0;
    }
    
    /* Remove touches that have become drags.
     * This function assumes a minimum drag distance of 15px.
     */
    $(document).on("touchmove", function (evt) {
        testAndPruneTouchList(evt.originalEvent.changedTouches);
    });
    
    /* Remove touches that have cancelled for hardware or OS specific reasons.
     */
    $(document).on("touchcancel", function (evt) {
        var i, touch;
        
        for (i = 0; i < evt.originalEvent.changedTouches.length; i += 1) {
            touch = evt.originalEvent.changedTouches.item(i);
            delete eligibleTouches[touch.identifier];
        }
    });
    
    /* Our main, extremely complicated event handler.
     * We have to track a whole bunch of corner cases, since users expect the
     * following out of their navigation structures:
     * 
     *  1. Hovering over a toggle should open it
     *  2. Touching a toggle with a finger should open it
     *  3. Clicking on a toggle should navigate to it's link target, as it has
     *     already opened from a hover
     *  4. Tab-focusing content should cause offcanvas's open/close state to
     *     follow through it
     *  5. Touches should only be honored if they were not the end of a drag
     */
    $(document).on("click touchend mouseover", function (evt) {
        var i, sentinel = false,
            $theToggle = $(evt.target),
            $theTarget,
            tgtStatus,
            tgtState,
            $btnParent = $theToggle.parents().filter("[data-toggle='offcanvas']"),
            skipToggle = false,
            hoverMin = $("body").data("offcanvas-hover-min"),
            toggleOptions,
            hasEligibleTouches;

        logger(evt.type);

        focus_click_inquiry = false;

        if (hoverMin === undefined) {
            hoverMin = 0;
        }

        if (evt.type === "mouseover") {
            if ($(window).width() < hoverMin) {
                return;
            }
        }

        if ($theToggle.data("toggle") !== "offcanvas" && $btnParent.length > 0) { //Fixup hits on child text, graphical bits, etc
            $theToggle = $btnParent;
        }

        if (($openTarget === null || $openTarget === undefined || $openTarget.length === 0) && $theToggle.data("toggle") !== "offcanvas") {
            return;
        }

        if (evt.type !== "mouseover" && isInDebounce) {
            logger("Processed event (debounced)");
            evt.preventDefault();
            return;
        }
        
        //Check if any of our touches were actually drags so we can ignore em
        if (evt.type === "touchend") {
            hasEligibleTouches = testAndPruneTouchList(evt.originalEvent.changedTouches);
            
            if (!hasEligibleTouches) {
                logger("Ignoring touch event as it is the result of a drag");
                return;
            }
        }

        toggleOptions = $theToggle.data("toggle-options");
        if (toggleOptions !== undefined) {
            toggleOptions = toggleOptions.split(" ");
        } else {
            toggleOptions = [];
        }

        if (evt.type === "mouseover" && toggleOptions.indexOf("nohover") > -1) {
            logger("Not opening a no-hover toggle");
            return;
        }
        
        //Used to allow using the <a>nchor portion of a dropdown toggle
        //but only after it was opened using a mouse
        if ($(window).width() >= hoverMin &&
                $theToggle[0].tagName === "A" &&
                evt.type === "click" &&
                !target_has_touch &&
                !click_keydown_inquiry && //and event is not generated by a keyboard
                toggleOptions.indexOf("nohover") === -1 &&
                toggleOptions.indexOf("nohref") === -1) {

            logger("Allowing link to resolve instead of opening toggle");
            return;
        }

        click_keydown_inquiry = false; //clear the "click event was generated by
                                     //a keyboard event" flag so the user can
                                     //switch back to mouse input
        
        if ($openTarget !== null && $openTarget !== undefined && $openTarget.length > 0) {
            //Determine if it's okay to do anything that might dismiss an offcanvas
            //based on this event
            tgtState = $openTarget.data("offcanvas-state");
            if (tgtState === undefined) {
                //This step is needed if the offcanvas elements were deleted and
                //recreated behind our back (e.g. because PageTransitions). In that
                //case all we can do is drop the current $openTarget entirely.
                $openTarget = undefined;
            }
        }
        
        if ($theToggle.data("toggle") === "offcanvas") {
            $theTarget = initOffcanvasToggle($theToggle);
            findParentLevels($theTarget);
        }

        if (!eventCanDismissOffcanvas($openTarget, $theTarget, evt, $theToggle)) {
            return;
        }
        
        logger("Processed event");
        
        if ($openTarget !== null &&
                $openTarget !== undefined &&
                $openTarget.length > 0 &&
                !$.contains($openTarget[0], evt.target) &&
                $openTarget[0] !== evt.target) {
            
            //Dismiss offcanvas by clicking outside it's area
            if ("#" + $openTarget.attr("id") === $theToggle.data("target")) {
                skipToggle = true;
            }
            
            if ($theToggle.filter("[data-dismiss='offcanvas']").length > 0) {
                logger("Not overridding a click on an existing dismiss button just because the click handler happened to win a race condition");
            } else {
                logger(tgtState.toggleOptions);
                logger(toggleOptions);

                enableDebounce();

                if ($($theToggle.data("target"))[0] === $openTarget[0]) {
                    //If we have clicked on a toggle for the currently open offcanvas, eat the event
                    evt.preventDefault();
                    evt.stopPropagation();
                    evt.stopImmediatePropagation();
                }

                dismissOffcanvas($openTarget);
            }
        }

        if ($theTarget !== undefined && !skipToggle) { //Open offcanvas via a toggle link
            enableDebounce();

            tgtState = $theTarget.data("offcanvas-state");

            //Determine if a different offcanvas tree is active, and, if so, dismiss it first.
            while ($openTarget !== null && $openTarget !== undefined) {
                sentinel = $openTarget[0] === $theTarget[0];

                for (i = 0; i < tgtState.parents.length; i += 1) {
                    if ($openTarget[0] === tgtState.parents[i]) {
                        sentinel = true;
                        break;
                    }
                }

                if (sentinel) {
                    break;
                }

                dismissOffcanvas($openTarget);
            }

            if (tgtState.open) {
                dismissOffcanvas($theTarget);
            } else {
                openOffcanvas($theTarget, $theToggle, evt.type);
            }

            if ($theToggle[0].tagName.toLowerCase() === "a" || $theToggle[0].tagName.toLowerCase() === "button") {
                evt.preventDefault();
            }
        }
    });
    
    /* Another, slightly less complex event handler for dismissing open content
     */
    $(document).on("click touchend", function (evt) {
        var $theToggle = $(evt.target), $theTarget, tgtStatus, tgtState, $btnParent = $theToggle.parents().filter("[data-dismiss='offcanvas']"), skipToggle = false, i, sentinel = false, $toDismiss = $openTarget;

        if ($theToggle.data("dismiss") !== "offcanvas" && $btnParent.length > 0) { //Fixup hits on child text, graphical bits, etc
            $theToggle = $btnParent;
        }

        if ($theToggle.data("dismiss") !== "offcanvas") {
            return;
        }

        if (isInDebounce) {
            logger("Processed event (debounced)");
            evt.preventDefault();
            return;
        }

        enableDebounce();

        if ($theToggle.data("target") !== undefined) {
            $toDismiss = $($theToggle.data("target"));
        }

        if ($toDismiss.length > 0) {
            dismissOffcanvas($toDismiss);
        }
        
        evt.preventDefault();
    });

    module.isOffcanvas = isOffcanvas;
    module.isChildOffcanvas = isChildOffcanvas;
    module.isTopLevelOffcanvas = isTopLevelOffcanvas;
    module.initOffcanvas = initOffcanvas;
    module.initOffcanvasToggle = initOffcanvasToggle;
    module.dismissOpenOffcanvas = dismissOpenOffcanvas;
    module.openOffcanvas = openOffcanvas;
    module.dismissOffcanvas = dismissOffcanvas;
    module.enableDebounce = enableDebounce;
    module.switchLoggingMode = switchLoggingMode;

    return module;
}));

/*global define, console, document, window*/
/*jslint continue:true*/
(function (root, factory) {
    "use strict";
    if (typeof define === 'function' && define.amd) {
        define("AffixColumn", ["jquery", "Behaviors"], factory);
    } else {
        root.AffixColumn = factory(root.jQuery, root.Behaviors);
    }
}(this, function ($, Behaviors) {
    "use strict";

    var module = {};
    
    function $do(that, target) {
        return function () {
            target.apply(that, arguments);
        };
    }
    
    /* An Affix root is an element which is used to determine the edges of the
     * region that columns stick to. It also provides the core event handlers
     * to drive the AffixColumn and AffixRow behaviors.
     */
    function Affix(elem, scrollElem) {
        Behaviors.init(Affix, this, arguments);

        this.height = this.$elem.height();
        this.offsetTop = this.$elem.offset().top;
        
        this.columns = [];
        this.$scrollElem = $(scrollElem || document);
        this.$scrollHeightElem = this.$scrollElem;
        
        //weird DOM quirk
        if (this.$scrollElem[0] === document) {
            this.$scrollHeightElem = $(window);
        }
        
        this.$alwaysTopElem = $(this.$elem.data("affixcolumn-alwaystop"));
        this.$alwaysBottomElem = $(this.$elem.data("affixcolumn-alwaysbottom"));
        
        this.bind_event_handlers();
        this.find_columns_and_rows();
        
        this.resized();
        this.scroll_changed();
    }
    
    Behaviors.inherit(Affix, Behaviors.Behavior);
    
    Affix.QUERY = "[data-affixcolumn='root']";
    
    Affix.prototype.deinitialize = function () {
        this.unbind_event_handlers();
    };
    
    /* Check our alwaystop/alwaysbottom elements and see if they are floating.
     * If so, add their height to the top and bottom adjustments given to the
     * individual columns.
     */
    Affix.prototype.determine_global_floating_adjustment = function () {
        this.globalTopAdjust = 0;
        
        this.$alwaysTopElem.each(function (index, atelem) {
            var $atelem = $(atelem);
            this.globalTopAdjust += $atelem.height();
        }.bind(this));
        
        this.globalBottomAdjust = 0;
        
        this.$alwaysBottomElem.each(function (index, atelem) {
            var $atelem = $(atelem);
            this.globalBottomAdjust += $atelem.height();
        }.bind(this));
    };

    Affix.prototype.resized = function () {
        var i, maxColHeight = 0, maxColId, heightSum, disp = 0, topAdjust = 0, bottomAdjust = 0;
        
        this.determine_global_floating_adjustment();
        this.height = this.$elem.height();
        
        if (this.columns.length > 0) {
            //Scan top rows to fix their displacement heights and determine top
            //adjustments.
            for (i = 0; i < this.columns.length; i += 1) {
                //Also, kill floating adjustments plz
                this.columns[i].clear_floating_adjustments();
                
                if (!this.columns[i].has_option("top")) {
                    continue;
                }
                
                //Top rows never get a bottom adjustment.
                this.columns[i].set_floating_adjustments(this.globalTopAdjust, topAdjust, 0, 0);
                
                disp = this.columns[i].displacement_height();
                
                this.columns[i].$height_bearing_element().css("min-height", disp + "px");
                topAdjust += disp;
            }
            
            //Scan bottom rows to fix their displacement heights and determine top
            //adjustments. This is done in reverse order so that the bottommost
            //bottom row gets the lowest bottom float adjustment.
            for (i = this.columns.length - 1; i >= 0; i -= 1) {
                if (!this.columns[i].has_option("bottom")) {
                    continue;
                }
                
                //Bottom rows never get a top adjustment.
                this.columns[i].set_floating_adjustments(0, 0, this.globalBottomAdjust, bottomAdjust);
                
                disp = this.columns[i].displacement_height();
                
                this.columns[i].$height_bearing_element().css("min-height", disp + "px");
                bottomAdjust += disp;
            }
            
            //Scan columns to select the height-bearing column.
            for (i = 0; i < this.columns.length; i += 1) {
                if (!this.columns[i].has_option("column")) {
                    continue;
                }
                
                //Columns get both the top and bottom adjustment.
                this.columns[i].set_floating_adjustments(this.globalTopAdjust, topAdjust, this.globalBottomAdjust, bottomAdjust);
                
                //Determine which column is height bearing for this Affix.
                if (maxColHeight < this.columns[i].displacement_height() &&
                        !this.columns[i].has_option("noheightbearing")) {
                    maxColHeight = this.columns[i].displacement_height();
                    maxColId = i;
                }
                
                this.columns[i].remove_state("tallest");
            }
            
            if (maxColId !== undefined) {
                this.columns[maxColId].add_state("tallest");
            }
        }
    };
    
    Affix.prototype.scroll_changed = function () {
        var i, maxColHeight = 0, maxColId;
        
        this.height = this.$elem.height();
        this.windowHeight = this.$scrollHeightElem.height();
        this.offsetTop = this.$elem.offset().top;
        this.scrollTop = this.$scrollElem.scrollTop();
        this.offsetBottom = this.offsetTop + this.height;
        this.scrollBottom = this.scrollTop + this.windowHeight;
        
        if (this.columns.length > 0) {
            for (i = 0; i < this.columns.length; i += 1) {
                this.columns[i].viewport_changed(this.height, this.offsetTop, this.offsetBottom, this.scrollTop, this.scrollBottom);
            }
        }
    };
    
    Affix.prototype.unbind_event_handlers = function () {
        if (this.scroll_handler !== undefined) {
            this.$scrollElem.off("scroll", this.scroll_handler);
        }
        
        if (this.resize_handler !== undefined) {
            $(window).off("resize", this.resize_handler);
        }
    };
    
    Affix.prototype.bind_event_handlers = function () {
        this.unbind_event_handlers();
        
        this.scroll_handler = $do(this, this.scroll_changed);
        this.resize_handler = $do(this, this.resized);
        
        this.$scrollElem.on("scroll", this.scroll_handler);
        $(window).on("resize", this.resize_handler);
        $(document).on("load", this.resize_handler);
        $("img").on("load", this.resize_handler);
    };
    
    Affix.prototype.find_columns_and_rows = function () {
        var $likely_columns = this.$elem.find(AffixColumn.QUERY),
            $likely_roots = this.$elem.find(Affix.QUERY);

        this.columns = [];
        this.roots = [];

        $likely_columns.each(function (index, lcelem) {
            var $lcelem = $(lcelem),
                $parent_root = $lcelem.parents().filter(Affix.QUERY).first();

            if ($parent_root[0] === this.$elem) {
                this.columns.push(AffixColumn.locate($lcelem));
            }
        }.bind(this));

        $likely_roots.each(function (index, lrelem) {
            var $lrelem = $(lrelem),
                $parent_root = $lrelem.parents().filter(Affix.QUERY).first();

            if ($parent_root[0] === this.$elem) {
                this.roots.push(Affix.locate($lrelem));
            }
        }.bind(this));
    };
    
    /* An AffixColumn is a normally fixed element which sticks to the top or
     * bottom edges of a scrolling viewport (typically the document).
     * 
     * AffixColumn itself contains no event handlers. The parent Affix is
     * responsible for propagating viewport scrolling to it's child Columns.
     * 
     * Options may be provided which cause the Column to behave differently.
     * Examples of this include the "noheightbearing" option, which prevents
     * your AffixColumn from being marked as tallest for the purposes of parent
     * element height preservation. See the parse_option_list function for more
     * information on the option list format, and has_option for what options
     * are available.
     * 
     * The name "AffixColumn" is a misnomer. "Columns" may be configured as rows
     * or columns in CSS. Orientation of the Column is configured with the
     * column/top/bottom options. If neither is active, "column" is assumed.
     */
    function AffixColumn(elem) {
        this.$elem = $(elem);
        this.options = this.parse_option_list(this.$elem.data("affixcolumn-options"));
        
        this.top_adjust = 0;
        this.bottom_adjust = 0;
    }
    
    Behaviors.inherit(AffixColumn, Behaviors.Behavior);
    
    AffixColumn.QUERY = "[data-affixcolumn='column']";
    
    /* Calculate the height taken up by the AffixColumn if placed in normal
     * document flow.
     * 
     * The floating adjustments currently applied to the column may cause
     * invalid displacement height results to occur. For best results, call
     * clear_floating_adjustments to remove them, and then trigger a viewport
     * update from the Affix root once the height has been measured.
     */
    AffixColumn.prototype.displacement_height = function () {
        return this.$elem.height();
    };
    
    /* Change the top/bottom values that this column floats at.
     * 
     * Floating adjustments determine the safe area of space that this element
     * may float at without being overlapped or overlapping top or bottom rows.
     * 
     * These will override any top/bottom values set via CSS.
     */
    AffixColumn.prototype.set_floating_adjustments = function (globalTop, top, globalBottom, bottom) {
        this.top_adjust = top;
        this.bottom_adjust = bottom;
        
        this.global_top_adjust = globalTop;
        this.global_bottom_adjust = globalBottom;
    };
    
    /* Remove inline CSS applied to make floating adjustments visually present.
     * 
     * You must call this method before querying displacement_height, or you
     * will get invalid results. After calling this method, you must trigger a
     * viewport update by calling scroll_changed on the containing Affix root.
     */
    AffixColumn.prototype.clear_floating_adjustments = function () {
        this.$elem.css("top", "");
        this.$elem.css("bottom", "");
    };
    
    /* Return the element responsible for propagating our displacement height in
     * normal document flow.
     * 
     * By default, the height bearing element is our parent element. We do not
     * have a facility to override this currently.
     */
    AffixColumn.prototype.$height_bearing_element = function () {
        return this.$elem.parent();
    };
    
    AffixColumn.prototype.add_state = function (state) {
        this.$elem.addClass("is-AffixColumn--" + state);
    };
    
    AffixColumn.prototype.remove_state = function (state) {
        this.$elem.removeClass("is-AffixColumn--" + state);
    };
    
    /* Determine if an AffixColumn option applies given the current viewport.
     * 
     * Valid options include:
     * 
     *  - column: AffixColumn to be oriented vertically aside other columns.
     *    The tallest column is marked as "tallest" and considered the height
     *    bearing column, whereby it is expected to be positioned in normal
     *    document flow such that the Affix element can grab it's CSS height.
     * 
     *  - top: AffixColumn to be oriented above other columns. Top rows are
     *    given a CSS min-height equal to the sum of their childrens' heights
     *    and their children are assumed to float. This minimum height will be
     *    applied as the top value to any following tops or columns.
     *
     *  - bottom: AffixColumn to be oriented below other columns. Bottom rows
     *    are given a CSS min-height in the same fashion as top rows. This
     *    minimum height will be applied as the bottom value to any preceding
     *    bottoms or columns.
     * 
     *  - noheightbearing: Column-oriented AffixColumn to be disqualified from
     *    being marked as a height-bearing column.
     */
    AffixColumn.prototype.has_option = function (option_string) {
        var i;
        
        for (i = 0; i < this.options.length; i += 1) {
            if (this.options[i].media === null || window.matchMedia(this.options[i].media).matches) {
                //Column enabled by default
                if (option_string === "column" &&
                        this.options[i].options.indexOf("top") === -1 &&
                        this.options[i].options.indexOf("bottom") === -1) {
                    return true;
                }
                
                return this.options[i].options.indexOf(option_string) > -1;
            }
        }
        
        if (option_string === "column") {
            return true;
        } else {
            return false;
        }
    };
    
    AffixColumn.MATCH_MEDIA_QUERY_REGEX = /\(([\s\S]*)\)/g;
    
    /* Parse an option list.
     * 
     * The option list determines what options are active on a column. It is
     * comma separated. Each comma indicates a new option list for a particular
     * media query. The first media query to match determines the total option
     * set. The final option set may or may not have a media query; if it does
     * not, then it serves as the default option set.
     * 
     * This is very analagous to the sizes attribute of <img> tags in modern
     * browsers. Example format:
     * 
     *    (min-width: 450px) column noheightbearing, top
     */
    AffixColumn.prototype.parse_option_list = function (option_list_string) {
        var cases, i, j, rval = [], case_obj = {}, match;
        
        if (option_list_string === undefined) {
            option_list_string = "";
        }
        
        cases = option_list_string.split(",");
        
        for (i = 0; i < cases.length; i += 1) {
            case_obj = {};
            match = this.constructor.MATCH_MEDIA_QUERY_REGEX.exec(cases[i]);
            
            //Reset the string. Sharing regex objects is dirty...
            this.constructor.MATCH_MEDIA_QUERY_REGEX.lastIndex = 0;
            
            if (match === null || match.length === 0) {
                case_obj.options = cases[i].split(" ");
                case_obj.media = null;
            } else {
                case_obj.options = cases[i].slice(match[0]).split(" ");
                case_obj.media = match[0];
            }
            
            //Filter empty options
            for (j = 0; j < case_obj.options.length; j += 0) {
                if (case_obj.options[j] === "") {
                    case_obj.options.splice(j, 1);
                } else {
                    j += 1;
                }
            }
            
            rval.push(case_obj);
        }
        
        return rval;
    };
    
    /* Internal method used by Affix to communicate to it's children the new
     * parameters of the scroll viewport.
     */
    AffixColumn.prototype.viewport_changed = function (rootHeight, offsetTop, offsetBottom, scrollTop, scrollBottom) {
        var isTopAnchored = this.has_option("column") || this.has_option("top"),
            isBottomAnchored = this.has_option("anchorbottom") || this.has_option("bottom"),
            bottomStateAdjust = true,
            topStateAdjust = true,
            adjustWithoutGlobal = true;
        
        //Remove existing floating adjustments.
        //Otherwise, our displacement height is incorrect.
        this.clear_floating_adjustments();
        
        //Apply affix states.
        if (isTopAnchored && scrollTop + this.global_top_adjust < offsetTop ||
                isBottomAnchored && scrollBottom - this.displacement_height() < offsetTop) {
            this.add_state("top");
            this.remove_state("bottom");
            bottomStateAdjust = false;
        } else if (isTopAnchored && scrollTop + this.top_adjust + this.global_top_adjust + this.displacement_height() + this.bottom_adjust >= offsetBottom ||
                isBottomAnchored && scrollBottom >= offsetBottom) {
            this.remove_state("top");
            this.add_state("bottom");
            topStateAdjust = false;
        } else {
            this.remove_state("top");
            this.remove_state("bottom");
            adjustWithoutGlobal = false;
        }
        
        //Apply floating adjustments.
        if ((this.has_option("column") || this.has_option("top")) && topStateAdjust) {
            if (adjustWithoutGlobal) {
                this.$elem.css("top", this.top_adjust + "px");
            } else {
                this.$elem.css("top", this.top_adjust + this.global_top_adjust + "px");
            }
        }
        
        if ((this.has_option("column") || this.has_option("bottom")) && bottomStateAdjust) {
            if (adjustWithoutGlobal) {
                this.$elem.css("bottom", this.bottom_adjust + "px");
            } else {
                this.$elem.css("bottom", this.bottom_adjust + this.global_bottom_adjust + "px");
            }
        }
    };
    
    Behaviors.register_behavior(Affix);

    module.Affix = Affix;
    module.AffixColumn = AffixColumn;

    return module;
}));

/*global define, console, document, window*/
(function (root, factory) {
    "use strict";
    if (typeof define === 'function' && define.amd) {
        define("CollapseContent", ["jquery", "Behaviors"], factory);
    } else {
        root.CollapseContent = factory(root.jQuery, root.Behaviors);
    }
}(this, function ($, Behaviors) {
    "use strict";

    var module = {};

    function $do(that, target) {
        return function () {
            target.apply(that, arguments);
        };
    }

    function CollapseContentRegion(elem) {
        Behaviors.init(CollapseContentRegion, this, arguments);

        this.$elem = $(elem);
        this.visible = this.$elem.data("collapsecontent-region-visible") !== undefined;

        this.update_classes();
    }

    Behaviors.inherit(CollapseContentRegion, Behaviors.Behavior);

    CollapseContentRegion.QUERY = "[data-collapsecontent-region]";

    CollapseContentRegion.prototype.update_classes = function () {
        this.$elem.find("[data-collapsecontent-body]").each(function (index, body_elem) {
            if (this.visible) {
                $(body_elem).addClass("is-CollapseContent--visible");
                $(body_elem).removeClass("is-CollapseContent--hidden");
            } else {
                $(body_elem).removeClass("is-CollapseContent--visible");
                $(body_elem).addClass("is-CollapseContent--hidden");
            }
        }.bind(this));

        this.$elem.find("[data-collapsecontent-trigger]").each(function (index, trigger_elem) {
            if (this.visible) {
                $(trigger_elem).addClass("is-CollapseContent--visible");
                $(trigger_elem).removeClass("is-CollapseContent--hidden");
            } else {
                $(trigger_elem).removeClass("is-CollapseContent--visible");
                $(trigger_elem).addClass("is-CollapseContent--hidden");
            }
        }.bind(this));
    };

    CollapseContentRegion.prototype.make_visible = function () {
        this.visible = true;
        this.update_classes();
    };

    CollapseContentRegion.prototype.make_hidden = function () {
        this.visible = false;
        this.update_classes();
    };

    CollapseContentRegion.prototype.toggle = function () {
        this.visible = !this.visible;
        this.update_classes();

        // Fire custom event when toggles are activated
        newEvent = new $.Event({
            "type": "collapsecontent-toggle",
            "visible": this.visible,
            "target": this.$elem,
        });

        this.$elem.trigger(newEvent);
    };

    function CollapseContentTrigger(elem) {
        Behaviors.init(CollapseContentTrigger, this, arguments);

        this.$elem = $(elem);

        if (this.$elem.data("collapsecontent-trigger") !== undefined) {
            //Mode 1: Trigger explicitly specifies region to toggle.
            this.region = this.set_region($(this.$elem.data("collapsecontent-trigger"))[0]);
        } else if (this.$elem.attr("href") !== undefined) {
            //Mode 1: Trigger explicitly specifies region to toggle, as an href..
            this.region = this.set_region($(this.$elem.data("collapsecontent-trigger"))[0]);
        }

        if (this.region === undefined) {
            //Mode 2: Find parent element that qualifies as a region.
            this.region = this.set_region(this.$elem.parents().filter(CollapseContentRegion.QUERY)[0]);
        }

        if (this.region === undefined) {
            console.error("There is a CollapseContent trigger that neither points to a valid region nor is a child of a valid region..");
        }

        this.$elem.on("click", this.toggle_intent.bind(this));
    }

    Behaviors.inherit(CollapseContentTrigger, Behaviors.Behavior);

    CollapseContentTrigger.QUERY = "[data-collapsecontent-trigger]";

    CollapseContentTrigger.prototype.set_region = function (elem) {
        if (elem === undefined) {
            return;
        }

        return CollapseContentRegion.locate(elem);
    };

    CollapseContentTrigger.prototype.toggle_intent = function (evt) {
        if (evt) {
            evt.preventDefault();
        }
        
        this.region.toggle();
    };

    Behaviors.register_behavior(CollapseContentRegion);
    Behaviors.register_behavior(CollapseContentTrigger);

    module.CollapseContentRegion = CollapseContentRegion;
    module.CollapseContentTrigger = CollapseContentTrigger;

    return module;
}));

(window.SpaceStation.AjaxCart.AddToCartForm = function(AjaxCart, $, Behaviors, Shopify) {
    "use strict";

    /**
     * Find if a particular behavior has instances or not.
     * 
     * @param {*} Class The behavior to check.
     * @returns Whether or not the class has instances.
     */
    function has_instances(Class) {
        var carts = Class.find_markup($(document));
        
        return carts.length > 0;
    }

    /**
     * Behavior that attaches itself to all add-to-cart forms, submits the form
     * via AJAX, and then triggers an AJAX Cart update.
     */
    function AddToCartForm() {
        Behaviors.init(AddToCartForm, this, arguments);

        this.$elem.on("submit", this.submit_intent.bind(this));
    }

    Behaviors.inherit(AddToCartForm, Behaviors.Behavior);

    AddToCartForm.QUERY = "form[action^='/cart/add']";

    /**
     * Event handler for when the form is submitted.
     */
    AddToCartForm.prototype.submit_intent = function(evt) {
        var action = this.$elem.attr("action"),
            method = this.$elem.attr("method"),
            formdata = new FormData(this.$elem[0]);
        
        if (!has_instances(AjaxCart.MiniCart)) {
            return;
        }
        
        evt.preventDefault();

        $.ajax({
            url: "/cart/add.js",
            type: method.toUpperCase(),
            data: formdata,
            processData: false,
            contentType: false,
            dataType: "json",
            success: function(data, textStatus, jqXHR) {
                Shopify.onItemAdded(data);
            }.bind(this),
            error: function(jqXHR, textStatus, errorThrown) {
                Shopify.onError(jqXHR, textStatus);
            }.bind(this),
        });
    };

    Behaviors.register_behavior(AddToCartForm);
    
    return AddToCartForm;
}(window.SpaceStation.AjaxCart || {},
    window.jQuery,
    window.Behaviors,
    window.Shopify));
(window.SpaceStation.AjaxCart.CountryInput = function(AjaxCart, $, Behaviors) {
    "use strict";

    /**
     * Behavior that attaches itself to country input dropdowns.
     * 
     * Intended to work alongside a province input, and requires a CountryList
     * in order to work.
     */
    function CountryInput() {
        Behaviors.init(CountryInput, this, arguments);

        this.$elem.on("change", this.select_intent.bind(this));

        this.country_list = AjaxCart.CountryList.find_markup($(document))[0];
        if (this.country_list === undefined) {
            console.error("Country inputs require a valid Shopify country list in order to work.");
        }

        this.$shipping_form = this.$elem.parents().find(AjaxCart.Shipping.QUERY);
        this.shipping = AjaxCart.Shipping.find_markup(this.$shipping_form)[0];

        if (this.shipping === undefined) {
            console.error("Country inputs should only be placed within a shipping form");
        }

        this.$province_inputs = this.$shipping_form.find(AjaxCart.ProvinceInput.QUERY);

        //This has to be on a separate stack frame to avoid recursive construction
        window.setTimeout(function () {
            this.province_inputs = AjaxCart.ProvinceInput.find_markup(this.$province_inputs);
        }.bind(this), 0);

        this.populate();
    }

    Behaviors.inherit(CountryInput, Behaviors.Behavior);

    CountryInput.QUERY = "[data-ajaxcart-shipping-countryinput]";

    /**
     * Populate this country input with the current list of countries.
     */
    CountryInput.prototype.populate = function() {
        var countries = this.country_list.countries(), country_value;

        this.$elem.find("option[value]").remove();

        for (country_value in countries) {
            if (countries.hasOwnProperty(country_value) && country_value !== "---") {
                this.$elem.append($("<option value='" + country_value + "'>" + countries[country_value].label + "</option>"));
            }
        }
    }

    /**
     * Retrieve the currently selected country.
     */
    CountryInput.prototype.current_country = function() {
        return this.country_list.countries()[this.$elem.val()];
    }

    /**
     * Event handler for when someone selects a country.
     */
    CountryInput.prototype.select_intent = function() {
        var i;

        for (i = 0; i < this.province_inputs.length; i += 1) {
            this.province_inputs[i].populate();
        }
    }

    Behaviors.register_behavior(CountryInput);
    
    return CountryInput;
}(window.SpaceStation.AjaxCart, window.jQuery, window.Behaviors));
(window.SpaceStation.AjaxCart.CountryList = function($, Behaviors) {
    "use strict";

    /**
     * Static country and province source list.
     * 
     * This is intended to attach to an HTML template holding the markup of the
     * Liquid object `country_option_tags`; it then parses that markup to
     * provide a list of countries and provinces as understood by Shopify.
     * 
     * This behavior does nothing by itself.
     */
    function CountryList() {
        Behaviors.init(CountryList, this, arguments);

        if ("content" in this.$elem[0]) {
            this.$content = $(this.$elem[0].content);
        } else {
            this.$content = this.$elem.children();
        }
    }

    Behaviors.inherit(CountryList, Behaviors.Behavior);

    CountryList.QUERY = "[data-minicart-countrylist]";

    /**
     * Retrieve an associative array of all countries in the list.
     * 
     * Each country is an object listing it's value, user-facing label, and
     * it's provinces.
     */
    CountryList.prototype.countries = function() {
        var countries = {};

        if (this.country_list != undefined) {
            return this.country_list;
        }

        this.$content.find("option").each(function (index, option) {
            var $option = $(option),
                value = $option.attr("value"),
                label = $option.text(),
                provinces = $option.data("provinces");
            
            countries[value] = {
                "value": value,
                "label": label,
                "provinces": provinces
            };
        }.bind(this));

        this.country_list = countries;
        return countries;
    }

    Behaviors.register_behavior(CountryList);

    return CountryList;
}(window.jQuery, window.Behaviors));
(window.SpaceStation.AjaxCart.MiniCart = function(AjaxCart, $, Behaviors, betteroffcanvas, Shopify) {
    "use strict";

    /**
     * Core behavior for managing a minicart.
     * 
     * This behavior should locate onto the element which will actually contain
     * the contents of your minicart. It is responsible for keeping the
     * minicart contents in sync with cart changes. Any code that updates the
     * cart should either trigger a page reload or update the minicart using
     * this behavior.
     * 
     * This behavior can be attached to an Offcanvas target; the open event
     * will be used to kick off cart rendering.
     */
    function MiniCart() {
        Behaviors.init(MiniCart, this, arguments);

        this.money_format = this.$elem.data("minicart-moneyformat");
        this.friendly_error = this.$elem.data("minicart-friendlyerror");
        this.$elem.on("offcanvas-open", this.open_intent.bind(this));
        this.$elem.on("offcanvas-dismiss", this.close_intent.bind(this));

        this.open = false;
        this.last_cart = undefined;
    }
    
    Behaviors.inherit(MiniCart, Behaviors.Behavior);
    
    MiniCart.QUERY = "[data-minicart]";

    MiniCart.hooks = new Behaviors.Hooks();
    MiniCart.hooks.define_hook_type("alter_cart_data");

    /**
     * Find the first clickable toggle for this minicart.
     */
    MiniCart.prototype.find_first_toggle = function() {
        var my_id = this.$elem.attr("id");

        return $("[data-toggle='offcanvas'][data-target='#" + my_id + "']")[0];
    }

    /**
     * Programmatically open the minicart toggle.
     * 
     * @param {string|undefined} event_name The event name that triggered this
     * open. Standard event names will trigger a cart refresh upon opening the
     * toggle, as they indicate user interaction. If unspecified, then no
     * refresh will occur.
     */
    MiniCart.prototype.open_cart = function (event_name) {
        var toggle = this.find_first_toggle(),
            $toggle = $(toggle);

        if (toggle !== undefined && !this.open) {
            betteroffcanvas.dismissOpenOffcanvas();
            betteroffcanvas.initOffcanvas(this.$elem);
            betteroffcanvas.initOffcanvasToggle($toggle);
            betteroffcanvas.openOffcanvas(this.$elem, $(toggle), event_name ? event_name : "program");
        }
    }

    /**
     * Programmatically close the minicart toggle.
     */
    MiniCart.prototype.close_cart = function () {
        var toggle = this.find_first_toggle();

        if (toggle !== undefined && this.open) {
            betteroffcanvas.dismissOffcanvas(this.$elem);
        }
    }

    /**
     * Event handler which is fired whenever this is opened as an Offcanvas
     * target.
     */
    MiniCart.prototype.open_intent = function(evt) {
        this.open = true;

        if (evt.source_event_type !== "cart_update" && evt.source_event_type !== "program") {
            this.refresh();
        }
    }

    /**
     * Event handler which is fired whenever this is closed as an Offcanvas
     * target.
     */
    MiniCart.prototype.close_intent = function() {
        this.open = false;
        this.$elem.children().remove();
    }

    /**
     * Load and update the contents of the minicart.
     */
    MiniCart.prototype.refresh = function () {
        $.getJSON('/cart.js', function (cart, textStatus) {
            this.last_cart = cart;
            this.update_cart(cart);
        }.bind(this)).fail(function (jqXHR, textStatus, error) {
            this.update_cart_error(textStatus + ", ", error);
        }.bind(this));
    }

    /**
     * Event handler which is fired whenever the Shopify API gets new cart
     * information.
     */
    MiniCart.prototype.cart_update_intent = function(cart) {
        this.last_cart = cart;
        
        this.open_cart("cart_update");
        this.update_cart(cart);

        this.indicate_update_complete();
    }

    /**
     * Event handler which is fired whenever an item is added to the cart.
     */
    MiniCart.prototype.item_added_intent = function(line_item) {
        if (this.open) {
            this.refresh();
        } else {
            this.open_cart("item_added");
        }

        this.indicate_update_complete();
    }
    
    /**
     * Update the minicart with data retrieved from Shopify's API.
     */
    MiniCart.prototype.update_cart = function (data) {
        data.money_format = this.money_format;

        data = MiniCart.hooks.trigger("alter_cart_data", data, this);

        Behaviors.content_removal(this.$elem.children());
        this.$elem.html(AjaxCart.cart(data));
        Behaviors.content_ready(this.$elem.children());

        this.indicate_update_complete();
    }

    /**
     * Update the minicart with an error (such as load failure).
     */
    MiniCart.prototype.update_cart_error = function(error) {
        Behaviors.content_removal(this.$elem.children());
        this.$elem.html(AjaxCart.cart_error({
            "friendly_error": this.friendly_error,
            "error_message": error
        }));
        Behaviors.content_ready(this.$elem.children());

        this.indicate_update_complete();
    }

    /**
     * Mark the minicart as loading.
     */
    MiniCart.prototype.indicate_update = function() {
        this.$elem.addClass("is-AjaxCart--updating");
    }

    /**
     * Mark the minicart as no longer loading.
     */
    MiniCart.prototype.indicate_update_complete = function() {
        this.$elem.removeClass("is-AjaxCart--updating");
    }
    
    Behaviors.register_behavior(MiniCart);

    /**
     * Broadcaster factory that produces a function that calls a method on all
     * instances of a given behavior.
     * 
     * Intended to be used to funnel Shopify API event handlers to individual
     * behavior instances.
     * 
     * @param {*} Class The behavior to locate.
     * @param {*} method The behavior method to call.
     * @returns A broadcaster that calls all behaviors with the given method
     * name.
     */
    function broadcaster(Class, method) {
        return function () {
            var i, carts = Class.find_markup($(document));
    
            for (i = 0; i < carts.length; i += 1) {
                carts[i][method].apply(carts[i], arguments);
            }
        };
    }
    
    Shopify.onCartUpdate = broadcaster(MiniCart, "cart_update_intent");
    Shopify.onItemAdded = broadcaster(MiniCart, "item_added_intent");
    
    return MiniCart;
}(window.SpaceStation.AjaxCart,
    window.jQuery,
    window.Behaviors,
    window.betteroffcanvas,
    window.Shopify));
(window.SpaceStation.AjaxCart.Notification = function(AjaxCart, $, Behaviors, betteroffcanvas, Shopify) {
    "use strict";
    
    /**
     * Behavior that manages the notification widget on the minicart icon.
     */
    function Notification() {
        Behaviors.init(Notification, this, arguments);

        AjaxCart.MiniCart.hooks.attach("alter_cart_data", this.cart_update_intent.bind(this));
    }

    Behaviors.inherit(Notification, Behaviors.Behavior);

    Notification.QUERY = "[data-minicart-notification]";

    /**
     * Event handler for notifications.
     * 
     * @param {Object} data The cart data, assumed to come from `MiniCart`'s
     * cart hook implementation.
     */
    Notification.prototype.cart_update_intent = function(data) {
        this.$elem.text(data.item_count);
        
        if (data.item_count > 0) {
            this.$elem.show();
        } else {
            this.$elem.hide();
        }
    }

    Behaviors.register_behavior(Notification);

    return Notification;
}(window.SpaceStation.AjaxCart,
    window.jQuery,
    window.Behaviors,
    window.betteroffcanvas,
    window.Shopify));
(window.SpaceStation.AjaxCart.ProvinceInput = function(AjaxCart, $, Behaviors) {
    "use strict";

    /**
     * Behavior that attaches itself to province input dropdowns.
     * 
     * Intended to work alongside a country input which will feed it provinces
     * to use.
     */
    function ProvinceInput() {
        Behaviors.init(ProvinceInput, this, arguments);

        this.$shipping_form = this.$elem.parents().find(AjaxCart.Shipping.QUERY);
        this.shipping = AjaxCart.Shipping.find_markup(this.$shipping_form)[0];

        if (this.shipping === undefined) {
            console.error("Province inputs should only be placed within a shipping form");
        }

        this.$country_inputs = this.$shipping_form.find(AjaxCart.CountryInput.QUERY);

        //This has to be on a separate stack frame to avoid recursive construction
        window.setTimeout(function () {
            this.country_input = AjaxCart.CountryInput.find_markup(this.$country_inputs)[0];

            if (this.country_input === undefined) {
                console.error("Province inputs are useless without a country input");
            }

            this.populate();
        }.bind(this), 0);
    }

    Behaviors.inherit(ProvinceInput, Behaviors.Behavior);

    ProvinceInput.QUERY = "[data-ajaxcart-shipping-provinceinput]";

    /**
     * Populate this province input with the current list of provinces.
     */
    ProvinceInput.prototype.populate = function() {
        var country = this.country_input.current_country(), i;

        this.$elem.find("option[value]").remove();

        if (country !== undefined) {
            for (i = 0; i < country.provinces.length; i += 1) {
                if (country.provinces[i][0] !== "---") {
                    this.$elem.append($("<option value='" + country.provinces[i][0] + "'>" + country.provinces[i][1] + "</option>"));
                }
            }

            if (country.provinces.length === 1) {
                this.$elem.val(country.provinces[0][0]);
            }

            if (country.provinces.length <= 1) {
                this.$elem.hide();
            } else {
                this.$elem.show();
            }
        } else {
            this.$elem.hide();
        }
    }

    Behaviors.register_behavior(ProvinceInput);
    
    return ProvinceInput;
}(window.SpaceStation.AjaxCart, window.jQuery, window.Behaviors));
(window.SpaceStation.AjaxCart.Quantity = function(AjaxCart, $, Behaviors, Shopify) {
    "use strict";

    /**
     * Behavior that attaches itself to quantity selectors.
     * 
     * This behavior expects to be attached either directly to an input, or a
     * parent of that input. When the input is adjusted, the associated line
     * item will be updated and the minicart refreshed.
     */
    function Quantity() {
        Behaviors.init(Quantity, this, arguments);

        this.id = this.$elem.data("ajaxcart-quantity-lineitem");

        this.$target_input = this.$elem.filter("input");
        if (this.$target_input.length == 0) {
            this.$target_input = this.$elem.find("input");
        }

        this.initial_value = parseInt(this.$target_input.val());

        this.$target_input.on("change blur", this.change_intent.bind(this));

        this.minicart = AjaxCart.MiniCart.find_markup(this.$elem.parents())[0];
    }

    Behaviors.inherit(Quantity, Behaviors.Behavior);

    Quantity.QUERY = "[data-ajaxcart-quantity]";

    /**
     * Indicate that the quantity has changed according to some user-intent
     * action.
     * 
     * This intent is debounced: multiple repeated calls to `change_intent`
     * will not immediately change the resulting value in the cart.
     */
    Quantity.prototype.change_intent = function() {
        if (this.timeout !== undefined) {
            window.clearTimeout(this.timeout);
        }

        this.$elem.addClass("is-AjaxCart-item_quantity_selector--updating");

        this.timeout = window.setTimeout(this.debounced_change_intent.bind(this), 500);
    }

    Quantity.prototype.debounced_change_intent = function() {
        var new_qty = parseInt(this.$target_input.val());

        delete this.timeout;

        if (new_qty == this.initial_value || isNaN(new_qty)) {
            this.$elem.removeClass("is-AjaxCart-item_quantity_selector--updating");
            return;
        }

        if (this.minicart) {
            this.minicart.indicate_update();
        }

        $.ajax({
            url: "/cart/change.js",
            type: "POST",
            data: {
                quantity: new_qty,
                id: this.id
            },
            dataType: "json",
            success: function(data, textStatus, jqXHR) {
                Shopify.onCartUpdate(data);
            }.bind(this),
            error: function(jqXHR, textStatus, errorThrown) {
                Shopify.onError(jqXHR, textStatus);
            }.bind(this),
        })
    }

    Behaviors.register_behavior(Quantity);
    
    return Quantity
}(window.SpaceStation.AjaxCart || {},
    window.jQuery,
    window.Behaviors,
    window.Shopify));
(window.SpaceStation.AjaxCart.QuantityToggle = function(AjaxCart, Behaviors) {
    "use strict";

    /**
     * Behavior that attaches itself to a quantity increase/decrease button and
     * adjusts a neighboring quantity field.
     */
    function QuantityToggle() {
        Behaviors.init(QuantityToggle, this, arguments);

        this.$target_input = this.$elem.siblings().filter("input");
        this.adjustment = this.$elem.data("ajaxcart-quantitytoggle");

        this.$elem.on("click", this.quantity_toggle_intent.bind(this));
    }

    Behaviors.inherit(QuantityToggle, Behaviors.Behavior);

    QuantityToggle.QUERY = "[data-ajaxcart-quantitytoggle]";

    QuantityToggle.prototype.quantity_toggle_intent = function() {
        var i, qty_instances;

        this.$target_input.val(parseInt(this.$target_input.val()) + this.adjustment);

        qty_instances = AjaxCart.Quantity.find_markup(this.$elem.parents());

        for (i = 0; i < qty_instances.length; i += 1) {
            qty_instances[i].change_intent();
        }
    }

    Behaviors.register_behavior(QuantityToggle);
    
    return QuantityToggle;
}(window.SpaceStation.AjaxCart, window.Behaviors));
(window.SpaceStation.AjaxCart.Remove = function(AjaxCart, $, Behaviors, Shopify) {
    "use strict";

    /**
     * Behavior that attaches itself to remove buttons.
     */
    function Remove() {
        Behaviors.init(Remove, this, arguments);

        this.id = this.$elem.data("ajaxcart-remove-lineitem");

        this.$elem.on("click", this.remove_intent.bind(this));

        this.minicart = AjaxCart.MiniCart.find_markup(this.$elem.parents())[0];
    }

    Behaviors.inherit(Remove, Behaviors.Behavior);

    Remove.QUERY = "[data-ajaxcart-remove]";

    /**
     * When clicked, remove buttons should remove their associated line item.
     */
    Remove.prototype.remove_intent = function(evt) {
        evt.preventDefault();

        this.$elem.addClass("is-AjaxCart-item_remove--updating");

        if (this.minicart) {
            this.minicart.indicate_update();
        }

        $.ajax({
            url: "/cart/change.js",
            type: "POST",
            data: {
                quantity: 0,
                id: this.id
            },
            dataType: "json",
            success: function(data, textStatus, jqXHR) {
                Shopify.onCartUpdate(data);
            }.bind(this),
            error: function(jqXHR, textStatus, errorThrown) {
                Shopify.onError(jqXHR, textStatus);
            }.bind(this),
        });
    }

    Behaviors.register_behavior(Remove);
    
    return Remove;
}(window.SpaceStation.AjaxCart,
    window.jQuery,
    window.Behaviors,
    window.Shopify));
(window.SpaceStation.AjaxCart.Shipping = function(AjaxCart, $, Behaviors, Shopify, localStorage) {
    "use strict";

    /**
     * Behavior that manages estimated-shipping rates in the minicart.
     * 
     * Shopify provides an estimated shipping endpoint, but the customer needs
     * to provide a country, province, and postal code in an embedded form
     * before continuing.
     * 
     * Since this behavior will be part of a continuously-reloaded minicart,
     * we store the user's last-entered shipping data in local storage, and
     * retrieve it from there when we need to repopulate the form. Form
     * parameter names need to match the `/cart/shipping_rates.js` endpoint.
     */
    function Shipping() {
        Behaviors.init(Shipping, this, arguments);

        this.country_list = AjaxCart.CountryList.find_markup($(document))[0];
        if (this.country_list === undefined) {
            console.error("Shipping forms require a valid Shopify country list in order to work.");
        }

        this.$form = this.$elem.find("[data-ajaxcart-shipping-form]");
        this.$form.on("submit", this.edit_shipping_address_intent.bind(this));

        this.$price = this.$elem.find("[data-ajaxcart-shipping-price]");
        this.$destination = this.$elem.find("[data-ajaxcart-shipping-destination]");
        this.$edit_button = this.$elem.find("[data-ajaxcart-shipping-editbutton]");

        this.$edit_button.on("click", this.begin_edit_intent.bind(this));
        
        // These function calls may construct other behaviors, so we need to
        // end the stack frame...
        window.setTimeout(function () {
            AjaxCart.CountryInput.find_markup(this.$form);
            AjaxCart.ProvinceInput.find_markup(this.$form);

            // Oh, and since those inputs do the same thing, we have to wait
            // for them to resolve THEIR cyclic references before WE can use
            // them.
            window.setTimeout(function () {
                this.load_persisted_form_values();
                this.refresh_shipping_rate();
            }.bind(this), 0);
        }.bind(this), 0);
    }

    Behaviors.inherit(Shipping, Behaviors.Behavior);

    Shipping.QUERY = "[data-ajaxcart-shipping]";

    /**
     * Set the displayed price as shown to the user.
     * 
     * @param {string|undefined} price The current price, as a string.
     * 
     * An undefined price indicates that the price is indeterminate.
     */
    Shipping.prototype.set_price = function (price) {
        if (price != undefined) {
            this.$price.text(price);
        } else {
            this.$price.html("&mdash;");
        }
    }

    /**
     * Update the state of the shipping form based on whether or not we are
     * currently editing the edit form.
     * 
     * @param {bool} is_editing Whether or not we are currently in the 'edit'
     * mode.
     */
    Shipping.prototype.set_edit_state = function(is_editing) {
        this.edit_state = is_editing;

        if (is_editing) {
            this.$elem.addClass("is-AjaxCart-total--being_edited");
            this.$edit_button.addClass("is-AjaxCart-shipping_address_edit_button--being_edited");
            this.$form.addClass("is-AjaxCart-shipping_address_form--being_edited");
            this.set_price(undefined);
            this.populate_destination();
        } else {
            this.$elem.removeClass("is-AjaxCart-total--being_edited");
            this.$edit_button.removeClass("is-AjaxCart-shipping_address_edit_button--being_edited");
            this.$form.removeClass("is-AjaxCart-shipping_address_form--being_edited");
        }
    }

    /**
     * Set the displayed destination when the shipping address is not being
     * edited.
     * 
     * Components that are undefined will not be displayed to the user. If no
     * components are displayed then the destination indicator will be blank.
     * 
     * @param {string|undefined} method The shipping method selected.
     * 
     * Must be defined and have a name property in order to render the shipping
     * method.
     * 
     * @param {string|undefined} country The user's selected country value.
     * 
     * Must be defined and be a valid country as defined by Shopify in order to
     * render.
     * 
     * @param {string|undefined} province The user's selcted province value.
     * 
     * Must be defined and be a valid province of the selected country in order
     * to render.
     * 
     * @param {string|undefined} zip The user's ZIP input.
     * 
     * Must be defined in order to render.
     */
    Shipping.prototype.populate_destination = function(method, country, province, zip) {
        var method_name = "", components = [], countries = this.country_list.countries(),
            i;

        if (method && method.name) {
            components.push(method.name);
        }

        if (country && countries[country]) {
            components.push(countries[country].label);
        }

        if (country && province && countries[country]) {
            for (i = 0; i < countries[country].provinces.length; i += 1) {
                if (countries[country].provinces[0] === province) {
                    components.push(components[country].provinces[1]);
                }
            }
        }

        if (zip) {
            components.push(zip);
        }

        if (components.length > 0) {
            this.$destination.text("(" + components.join(", ") + ")");
        } else {
            this.$destination.text("");
        }
    }

    /**
     * Event handler for opening the edit form.
     * 
     * @param {*} evt The edit button click intent.
     */
    Shipping.prototype.begin_edit_intent = function(evt) {
        evt.preventDefault();
        this.set_edit_state(true);
    }

    /**
     * Retrieve the form values from the shipping form.
     * 
     * @returns A plain object of form values
     */
    Shipping.prototype.form_values = function() {
        var $inputs = this.$form.find("input[name], select[name], textarea[name]"),
            fval = {};
        
        $inputs.each(function (index, input_elem) {
            var $input_elem = $(input_elem),
                name = $input_elem.attr("name"),
                value = $input_elem.val();
            
            fval[name] = value;
        }.bind(this));
        
        return fval;
    }

    /**
     * Set one particular form value in the form.
     * 
     * All form elements with the given key must have been populated with those
     * values.
     * 
     * @param {string} key The name of the form value to change.
     * @param {string} value The value to set on all form elements matching the
     * key.
     */
    Shipping.prototype.set_form_value = function(key, value) {
        this.$form.find("input[name='" + key + "']").val(value.toString());
        this.$form.find("select[name='" + key + "']").val(value.toString());
        this.$form.find("textarea[name='" + key + "']").val(value.toString());
    }

    /**
     * Populate a list of input behaviors, and then set a form value.
     * 
     * @param {array} inputs A list of inputs to populate before changing the
     * value.
     * 
     * @param {string} key The name of the form value to change.
     * @param {string} value The value to set on all form elements matching the
     * key.
     */
    Shipping.prototype.populate_and_set_form_value = function(inputs, key, value) {
        var i;

        for (i = 0; i < inputs.length; i += 1) {
            inputs[i].populate();
        }

        this.set_form_value(key, value);
    }

    /**
     * Set the form values from a plain data object.
     * 
     * This function does not alter local storage or trigger user intents; you
     * will need to force an update if your intent was to, say, update the
     * calculated shipping rate.
     * 
     * @param {object} fval The form data as a plain object.
     * 
     * This parameter should have the properties `shipping_address[zip]`,
     * `shipping_address[country]`, and `shipping_address[province]` defined.
     * Any undefined property will cause the associated form value to not be
     * updated.
     */
    Shipping.prototype.set_form_values = function(fval) {
        var k,
            country_inputs = AjaxCart.CountryInput.find_markup(this.$form),
            province_inputs = AjaxCart.ProvinceInput.find_markup(this.$form);
        
        if (fval.hasOwnProperty("shipping_address[country]")) {
            this.populate_and_set_form_value(
                country_inputs,
                "shipping_address[country]",
                fval["shipping_address[country]"]
            );
        }
        
        if (fval.hasOwnProperty("shipping_address[province]")) {
            this.populate_and_set_form_value(
                province_inputs,
                "shipping_address[province]",
                fval["shipping_address[province]"]
            );
        }

        for (k in fval) {
            if (fval.hasOwnProperty(k) && fval[k] !== undefined && fval[k] !== null) {
                this.set_form_value(k, fval[k]);
            }
        }
    }

    /**
     * Store form data in local storage.
     */
    Shipping.prototype.persist_form_values = function() {
        var fval = this.form_values();

        try {
            localStorage.setItem("AjaxCart.shipping_addr", JSON.stringify(fval));
        } catch (exc) {
            console.log("Okay, fine, I didn't wanna store things anyway...");
        }
    }

    /**
     * Load form data from local storage and update the form.
     */
    Shipping.prototype.load_persisted_form_values = function() {
        var fval_string = localStorage.getItem("AjaxCart.shipping_addr"),
            fval = {};

        if (fval_string !== null) {
            fval = JSON.parse(fval_string);
        }

        this.set_form_values(fval);
    }

    /**
     * Event handler for submitting the form that allows customers to specify
     * their location.
     * 
     * @param {*} evt The form submission event.
     */
    Shipping.prototype.edit_shipping_address_intent = function(evt) {
        evt.preventDefault();

        this.persist_form_values();
        this.refresh_shipping_rate(Shopify.onError);
    }

    /**
     * Programmatically update the shipping rate.
     * 
     * @param {Function} error Error handler triggered if the shipping rate
     * could not be refreshed.
     */
    Shipping.prototype.refresh_shipping_rate = function(error) {
        var fval = this.form_values();

        this.$elem.addClass("is-AjaxCart-total--updating");
        
        $.ajax({
            url: "/cart/shipping_rates.json?",
            type: "GET",
            data: this.$form.serialize(),
            success: function(data, textStatus, jqXHR) {
                var i = 0, lowest_shipping_cost = Infinity, lowest_shipping_method;

                this.$elem.removeClass("is-AjaxCart-total--updating");

                for (i = 0; i < data.shipping_rates.length; i += 1) {
                    if (data.shipping_rates[i].price < lowest_shipping_cost) {
                        lowest_shipping_cost = parseFloat(data.shipping_rates[i].price);
                        lowest_shipping_method = i;
                    }
                }
                
                this.set_edit_state(false);
                this.set_price(lowest_shipping_cost);
                this.populate_destination(data.shipping_rates[lowest_shipping_method], fval.zip, fval.country, fval.province);
            }.bind(this),
            error: function() {
                this.$elem.removeClass("is-AjaxCart-total--updating");

                error.apply(this, arguments)
            }.bind(this),
        });
    }

    Behaviors.register_behavior(Shipping);

    return Shipping;
}(window.SpaceStation.AjaxCart,
    window.jQuery,
    window.Behaviors,
    window.Shopify,
    window.localStorage));
(function(Handlebars, Shopify) {
    "use strict";

    //TODO: comma/period radix swap for CHF, CZK, DKK, EUR, HRK, HUF
    var CURRENCIES = {
        "AED": {
            "symbol": "Dhs. ",
            "precision": 2,
        },
        "AUD": {
            "symbol": "$",
            "precision": 2
        },
        "CAD": {
            "symbol": "$",
            "precision": 2
        },
        "CHF": {
            "symbol": "CHF ",
            "precision": 2
        },
        "CZK": {
            "suffix": " Kč",
            "precision": 2
        },
        "DKK": {
            "suffix": " kr",
            "precision": 2
        },
        "EUR": {
            "symbol": "€",
            "precision": 2
        },
        "GBP": {
            "symbol": "£",
            "precision": 2
        },
        "HKD": {
            "symbol": "$",
            "precision": 2
        },
        "HRK": {
            "suffix": " kn",
            "precision": 2
        },
        "HUF": {
            "precision": 2 //HUF doesn't appear to render fractional digits for some reason...
        },
        "ILS": {
            "precision": 2
        },
        "ISK": {
            "suffix": " kr",
            "precision": 0
        },
        "JPY": {
            "symbol": "¥",
            "precision": 0
        },
        "MXN": {
            "symbol": "$",
            "precision": 2
        },
        "NZD": {
            "symbol": "$",
            "precision": 2
        },
        "SEK": {
            "suffix": " kr",
            "precision": 0
        },
        "SGD": {
            "symbol": "$",
            "precision": 2
        },
        "THB": {
            "suffix": " ฿", // no not bitcoin
            "precision": 2
        },
        "USD": {
            "symbol": "$",
            "precision": 2
        }
    };

    /**
     * Format a money value provided by Shopify's API.
     * 
     * This is also available to Handlebars code via the `AjaxCart_money`
     * helper.
     * 
     * @param {Number} value The money value, denominated in the smallest
     * possible unit of that currency.
     * 
     * For example, USD will be denominated in pennies: a USD value of 100
     * indicates $1.00.
     * 
     * @param {String|undefined} money_format The store's money format string.
     * 
     * If not provided, the one in `Shopify.money_format` will be used to
     * format the money value. Since Shopify does not provide a way to obtain
     * presentment currency format strings at this time, we assume USD format
     * and use text replacement hacks
     * 
     * @param {String} currency The current presentment currency the user has
     * selected.
     * 
     * If not provided. the one in `Shopify.currency.active` will be used.
     */
    function format_money_with_currency(value, money_format, currency) {
        if (!currency) {
            currency = Shopify.currency.active;
        }

        if (!money_format) {
            money_format = Shopify.money_format;
        }
        
        var currency_infos = CURRENCIES[currency];
        if (currency_infos) {
            if (currency_infos.symbol) {
                money_format = money_format.replace("$", currency_infos.symbol);
            } else {
                money_format = money_format.replace("$", "");
            }

            if (currency_infos.suffix) {
                money_format += currency_infos.suffix;
            }

            value = value * Math.pow(10, 2 - currency_infos.precision);
        } else {
            console.warn("Could not find currency " + currency);
        }
        
        return Shopify.formatMoney(value, money_format);
    }

    /**
     * This handler is a proxy for `Shopify.formatMoney`.
     */
    Handlebars.registerHelper("AjaxCart_money", function() {
        var a_args = Array.prototype.slice.call(arguments),
            options = a_args.pop(),
            value = a_args.shift(),
            money_format = a_args.shift(),
            currency = a_args.shift();
        
        return format_money_with_currency(value, money_format, currency);
    });
    
    /**
     * This handler emulates the `img_url` filter on Shopify's liquid
     * interpreter.
     * 
     * It works by exploiting the fact that the filter appears to just append
     * it's width/height parameter to the URL and let the CDN handle the
     * resize. Ergo, we can generate new URLs client-sided.
     * 
     * This does not support the crop, scale, or format parameters of the
     * original filter.
     */
    Handlebars.registerHelper("AjaxCart_img-url", function(url, desired_format) {
        if (!url) {
            return "#";
        }
        
        var url_and_query = url.split("?"),
            url_without_query = url_and_query[0],
            query = url_and_query.slice(1).join("?"),
            path_and_extension = url_without_query.split("."),
            path_without_extension = path_and_extension.slice(0, path_and_extension.length - 1).join("."),
            extension = path_and_extension[path_and_extension.length - 1];
        
        if (desired_format !== undefined && extension != "ico") {
            return path_without_extension + "_" + desired_format + "." + extension + "?" + query;
        } else {
            return path_without_extension + "." + extension + "?" + query;
        }
    });

    /**
     * This handler filters out default options from an options list.
     * 
     * For some reason, Shopify doesn't tell you if a product's options
     * actually make sense, so we have to just do this here.
     */
    Handlebars.registerHelper("AjaxCart_not-default-option", function (item, options) {
        if (item.name === "Title" && item.value === "Default Title") {
            return options.inverse(this);
        } else {
            return options.fn(this);
        }
    });

    window.SpaceStation.AjaxCart.CURRENCIES = CURRENCIES;
    window.SpaceStation.AjaxCart.format_money_with_currency = format_money_with_currency;
}(window.Handlebars, window.Shopify));
(function () {
  //this feature of this section not currently in use. when dropdown code is is made active, this code should be made active as well.
  // window.addEventListener("DOMContentLoaded", () => {
  //   const placeholderWrapper = document.querySelector(
  //     ".dwi__dropdown-placeholder"
  //   );
  //   const outerMost = document.querySelector(".dwi__dropdown");
  //   const placeholderText = document.querySelector(".dwi__option-text");
  //   const dropDownWrapper = document.querySelector(".dwi__dropdown-options");
  //   const arrow = document.querySelector(".dwi__arrow");
  //   const options = document.querySelectorAll(".dwi__dropdown-option");
  //   //Set Selected Option to LocalStorage to reference later
  //   const setLocalStorage = (value) => {
  //     localStorage.setItem("q1", value);
  //   };
  //   //Set initial value to option placeholder
  //   placeholderText.innerHTML = options[0].innerHTML;
  //   //Set initial value to LocalStorage
  //   let initValue = options[0].dataset.option;
  //   setLocalStorage(initValue);
  //   //Update value of option placeholder
  //   const selectedOptionHandler = (id, html, value) => {
  //     const text = html;
  //     placeholderText.innerHTML = text;
  //     statusHandler();
  //     setLocalStorage(value);
  //   };
  //   options.forEach((option) => {
  //     let id = option.id.split("-")[1];
  //     let html = option.innerHTML;
  //     let value = option.dataset.option;
  //     option.addEventListener(
  //       "click",
  //       (e) => {
  //         selectedOptionHandler(id, html, value);
  //       },
  //       { capture: true }
  //     );
  //   });
  //   //Drop and Raise DropDown
  //   let dropDownStatus = "closed";
  //   const statusHandler = () => {
  //     const secondClass = dropDownWrapper.classList[1];
  //     if (secondClass === "dwi__dropdown-closed") {
  //       dropDownStatus = "closed";
  //     } else {
  //       dropDownStatus = "open";
  //     }
  //     dropDownHandler();
  //   };
  //   const dropDownHandler = () => {
  //     if (dropDownStatus === "closed") {
  //       dropDownWrapper.classList.remove("dwi__dropdown-closed");
  //       dropDownWrapper.classList.add("dwi__dropdown-open");
  //       arrow.classList.add("dwi__flip-arrow");
  //     } else if (dropDownStatus === "open") {
  //       dropDownWrapper.classList.add("dwi__dropdown-closed");
  //       dropDownWrapper.classList.remove("dwi__dropdown-open");
  //       arrow.classList.remove("dwi__flip-arrow");
  //     }
  //   };
  //   const closeDropDown = () => {
  //     dropDownWrapper.classList.add("dwi__dropdown-closed");
  //     dropDownWrapper.classList.remove("dwi__dropdown-open");
  //     arrow.classList.remove("dwi__flip-arrow");
  //     dropDownStatus = "closed";
  //   };
  //   placeholderWrapper.addEventListener("click", statusHandler);
  //   outerMost.addEventListener("mouseleave", closeDropDown);
  // });
})();

/* Paginate.js
 * A progressively-enhancing infinite scroll library
 * ©2014 HUEMOR Designs All Rights Reserved
 */

/*global jQuery, define, console, window, document*/
(function (root, factory) {
    "use strict";
    if (typeof define === 'function' && define.amd) {
        define('depaginate', ['jquery', "Behaviors"], factory);
    } else if (root.jQuery) {
        root.PaginateJS = factory(root.jQuery, root.Behaviors);
    } else {
        console.error("No jQuery found. Load jQuery before this module or use an AMD-compliant loader.");
    }
}(this, function ($, Behaviors) {
    "use strict";
    
    var module = {};
    
    function Pager(elem, page_select_handler) {
        Behaviors.init(Pager, this, arguments);
        
        this.links = {};
        this.current = null;
        this.$pager = $(elem);
        this.min_page_count = Infinity;
        this.max_page_count = 0;
        
        this.$pager.addClass("is-Paginate--managed");

        this.page_select_handler = page_select_handler;

        this.features = this.$pager.data("paginate-features");

        if (this.features === undefined) {
            this.features = "replaceState";
        }

        console.log("Pager Features:" + this.features);
        this.features = this.features.split(" ");
    }
    
    Behaviors.inherit(Pager, Behaviors.Behavior);
    
    Pager.QUERY = "[data-paginate='pager']";
    
    Pager.DEFAULT_LINK = {
        "loaded": false,
        "requested": false,
        "pending": false,
        "current": false
    };
    
    Pager.prototype.is_page_loaded = function (pagenumber) {
        return this.links[pagenumber].loaded;
    };
    
    Pager.prototype.set_current_page = function (pagenumber) {
        var i = 0, pageid;
        
        if (this.current === pagenumber) {
            return;
        }
        
        this.current = pagenumber;
        this.links[pagenumber] = this.links[pagenumber] || $.extend({}, Pager.DEFAULT_LINK);
        
        for (pageid in this.links) {
            if (this.links.hasOwnProperty(pageid)) {
                this.links[pageid].current = pageid === pagenumber;
            }
        }
        
        if (this.links[pagenumber].$pagerContents !== undefined) {
            this.$pager.children().detach();
            this.$pager.append(this.links[pagenumber].$pagerContents);
        }
        
        if (this.links[pagenumber].href !== undefined) {
            if (this.features.indexOf("replaceState") > -1 && window.history.replaceState) {
                window.history.replaceState({transition: true, url: this.links[pagenumber].href}, "", this.links[pagenumber].href);
            }
        }
    };
    
    Pager.prototype.read_pager = function (pagerElem) {
        var $newPager = $(pagerElem),
            pagerThis = this;
        
        $newPager.find("[data-paginate='page']").each(function (index, pageElem) {
            var $newPage = $(pageElem),
                page = $newPage.data("paginate-page"),
                isCurrent = $newPage.data("paginate-current") !== undefined,
                href = $newPage.attr("href");
            
            pagerThis.links[page] = pagerThis.links[page] || $.extend({}, Pager.DEFAULT_LINK);
            
            pagerThis.links[page].href = href || pagerThis.links[page].href;
            pagerThis.links[page].current = isCurrent;
            
            if (isCurrent) {
                pagerThis.current = page;
            }
            
            if (pagerThis.links[page].pending) {
                pagerThis.load_page(page);
            }
            
            if (page > pagerThis.max_page_count) {
                pagerThis.max_page_count = page;
            }
            
            if (page < pagerThis.min_page_count) {
                pagerThis.min_page_count = page;
            }

            $newPage.on("click", function (evt) {
                evt.preventDefault();

                if (pagerThis.page_select_handler) {
                    pagerThis.page_select_handler(pagerThis, page);
                }
            });
        });
        
        this.links[this.current] = this.links[this.current] || $.extend({}, Pager.DEFAULT_LINK);
        this.links[this.current].$pagerContents = $newPager.children();
        
        if (this.links[this.current].$pagerContents !== undefined) {
            this.$pager.children().detach();
            this.$pager.append(this.links[this.current].$pagerContents);
        }
    };
    
    Pager.prototype.load_page = function (pagenumber, on_success, on_failure) {
        var paginateThis = this;
        
        if (this.links[pagenumber] === undefined || this.links[pagenumber].href === undefined) {
            this.links[pagenumber] = $.extend({}, this.links[pagenumber], Pager.DEFAULT_LINK);
            this.links[pagenumber].pending = true;
            this.links[pagenumber].on_success = on_success || this.links[pagenumber].on_success;
            this.links[pagenumber].on_failure = on_failure || this.links[pagenumber].on_failure;
            
            return;
        }
        
        if (this.links[pagenumber].requested || this.links[pagenumber].loaded) {
            return;
        }
        
        this.links[pagenumber].pending = false;
        this.links[pagenumber].requested = true;
        
        $.ajax({
            "url": this.links[pagenumber].href,
            "dataType": "html"
        }).done(function (data, textStatus, jqXHR) {
            if (paginateThis.links[pagenumber].on_success !== undefined) {
                paginateThis.links[pagenumber].on_success(data, textStatus, jqXHR);
            }
            
            if (on_success !== undefined) {
                on_success(data, textStatus, jqXHR);
            }
            
            paginateThis.links[pagenumber].loaded = true;
        }).fail(function (jqXHR, textStatus, errorThrown) {
            if (paginateThis.links[pagenumber].on_failure !== undefined) {
                paginateThis.links[pagenumber].on_failure(jqXHR, textStatus, errorThrown);
            }
            
            if (on_failure !== undefined) {
                on_failure(jqXHR, textStatus, errorThrown);
            }
        });
    };
    
    Pager.prototype.is_first_page = function (test_page) {
        return (test_page !== null && test_page === this.min_page_count);
    };
    
    Pager.prototype.is_last_page = function (test_page) {
        return (test_page !== null && test_page === this.max_page_count);
    };
    
    module.Pager = Pager;
    
    function Region(elem, on_region_scrolled) {
        var $extantRegion = $(elem);
        Behaviors.init(Region, this, arguments);
        
        this.name = $extantRegion.data("paginate-region");

        this.load_methods = $extantRegion.data("paginate-methods");

        if (this.load_methods === undefined) {
            this.load_methods = "scroll";
        }

        console.log("LoadMethods:" + this.load_methods);
        this.load_methods = this.load_methods.split(" ");

        this.features = $extantRegion.data("paginate-features");

        if (this.features === undefined) {
            this.features = "scrollOnLoad";
        }

        console.log("Region Features:" + this.features);
        this.features = this.features.split(" ");
        
        this.pages = {};
        this.pagenumbers = [];
        
        this.min_page_loaded = Infinity;
        this.max_page_loaded = 0;
        
        this.$region = $extantRegion;
        
        this.$parentScroller = null;
        this.lastScrollTop = 0;
        
        this.on_region_scrolled = on_region_scrolled;
        
        this.$region.addClass("is-Paginate--managed");
    }
    
    Behaviors.inherit(Region, Behaviors.Behavior);
    
    Region.QUERY = "[data-paginate='region']";
    
    /* Called to append a new page to the region.
     * 
     * Region contents will be extracted from the given region element and
     * appended to the existing region, such that any existing content belonging
     * to pages marked with a lower page number will appear before your page
     * content, and any existing content belonging to pages marked with a higher
     * page number will appear after your page content.
     * 
     * Already inserted pages will not be reinserted into the region.
     * 
     * As this function inserts content into the page, it will be presented to
     * Behaviors to ensure any Behaviors on the new page content can locate
     * correctly.
     * 
     * An event will be fired from the region's element called depaginate_load
     * which serves to indicate when a new page has loaded. Do not use this
     * event to check if new content has been added to the page, use Behaviors'
     * register_behavior or register_content_listener functions instead. This
     * event will be called before behaviors have been located on their
     * elements.
     */
    Region.prototype.read_page_region = function (pageNumber, regionElem) {
        var $newRegion = $(regionElem),
            itemSelector = $newRegion.data("paginate-selector") || "> *",
            prevPageNumberId = 0,
            nextPageNumberId = this.pagenumbers.length,
            nextPageNumber,
            prevPageNumber,
            pageAlreadyExists = false,
            i = 0,
            $newItems = $newRegion.find(itemSelector),
            $firstItem = $newItems.first(),
            $lastItem = $newItems.last(),
            oldPageTop = 0,
            newPageTop = 0,
            evt;
        
        if (this.firstVisiblePage !== undefined) {
            oldPageTop = this.page_top_position(this.firstVisiblePage);
        }

        for (i = 0; i < this.pagenumbers.length; i += 1) {
            if (this.pagenumbers[i] < pageNumber) {
                prevPageNumberId = i;
                prevPageNumber = this.pagenumbers[i];
            } else if (this.pagenumbers[i] === pageNumber) {
                pageAlreadyExists = true;
            } else {
                nextPageNumber = this.pagenumbers[i];
                nextPageNumberId = i;
                break;
            }
        }
        
        if (!pageAlreadyExists) {
            this.pagenumbers.splice(nextPageNumberId, 0, pageNumber);
            
            if (this.pages[prevPageNumber] !== undefined) {
                $newItems = $newItems.insertAfter(this.pages[prevPageNumber].$lastItem);
            } else if (this.pages[nextPageNumber] !== undefined) {
                $newItems = $newItems.insertBefore(this.pages[nextPageNumber].$firstItem);
            } //else do nothing since this obviously must be the original region
            
            $firstItem = $newItems.first();
            $lastItem = $newItems.last();
            
            this.pages[pageNumber] = this.pages[pageNumber] || {};
            this.pages[pageNumber].$newItems = $newItems;
            this.pages[pageNumber].$firstItem = $firstItem;
            this.pages[pageNumber].$lastItem = $lastItem;

            evt = jQuery.Event("depaginate_load");
            evt.region = this;
            evt.target = this.$region[0];
            evt.$newItems = $newItems;

            this.$region.trigger(evt);
            
            Behaviors.content_ready($newItems);
        }
        
        if (pageNumber < this.min_page_loaded) {
            this.min_page_loaded = pageNumber;
        }
        
        if (pageNumber > this.max_page_loaded) {
            this.max_page_loaded = pageNumber;
        }

        if (this.firstVisiblePage !== undefined) {
            newPageTop = this.page_top_position(this.firstVisiblePage);

            if (this.features.indexOf("scrollOnLoad") > -1) {
                window.setTimeout(
                    this.scroll_by_delta.bind(this, newPageTop - oldPageTop),
                    50
                );
            }
        }
    };
    
    Region.prototype.register_scroll_handler = function () {
        var cssOverflowX,
            regionThis = this;
        
        if (this.$parentScroller !== null) {
            this.$parentScroller.off("scroll.paginate");
        }

        this.$parentScroller = this.$region;

        while (this.$parentScroller.length !== 0 && this.$parentScroller.get(0) !== document) {
            cssOverflowX = this.$parentScroller.css("overflow-x");

            if (cssOverflowX === "visible" || cssOverflowX === "hidden") {
                this.$parentScroller = this.$parentScroller.parent();
            } else {
                break;
            }
        }
        
        regionThis.on_scroll({"target": this.$parentScroller[0]});
        this.$parentScroller.on("scroll.paginate", function (evt) {
            regionThis.on_scroll(evt);
        });

        this.lastScrollTop = this.$parentScroller.scrollTop();
    };
    
    Region.prototype.on_scroll = function (evt) {
        var $target = $(evt.target),
            scrollTop = $target.scrollTop(),
            scrollBottom = scrollTop + (evt.target !== document ? $target.height() : $(window).height()),
            targetTop = evt.target !== document ? $target.position().top : 0,
            targetAdjust = evt.target !== document ? scrollTop : 0,
            i = 0,
            firstVisibleTop = null,
            firstVisiblePage = null,
            lastVisiblePage = null,
            lastVisibleBottom = null,
            scrollDelta = scrollTop - this.lastScrollTop,
            stopOuterLoopSentinel = false,
            regionThis = this;
        
        this.lastScrollTop = scrollDelta;
        
        function pageEach(index, itemElem) {
            var $itemElem = $(itemElem),
                itemTop = targetAdjust + $itemElem.position().top - targetTop,
                itemBottom = itemTop + $itemElem.height(),
                isVisible = (scrollTop <= itemTop && itemTop <= scrollBottom) ||
                            (scrollTop <= itemBottom && itemBottom <= scrollBottom) ||
                            (itemTop <= scrollTop && scrollBottom <= itemBottom);
            
            if (!isVisible) {
                if (lastVisiblePage !== null) {
                    stopOuterLoopSentinel = true;
                }

                return true;
            }

            if (firstVisiblePage === null) {
                firstVisiblePage = regionThis.pagenumbers[i];
                firstVisibleTop = itemTop;
            }
            
            lastVisiblePage = regionThis.pagenumbers[i];
            lastVisibleBottom = itemTop + $itemElem.height();

            return false;
        }
        
        //Determine what pages are visible now
        if (this.pagenumbers.length === 0) {
            console.log("There are no page numbers.");
        }
        
        for (i = 0; i < this.pagenumbers.length; i += 1) {
            if (this.pages[this.pagenumbers[i]].$newItems === 0) {
                console.log("There are no pages within page " + this.pagenumbers[i]);
            }
            
            this.pages[this.pagenumbers[i]].$newItems.each(pageEach);
            
            if (stopOuterLoopSentinel) {
                stopOuterLoopSentinel = false;
                break;
            }
        }
        
        if (firstVisiblePage === null) {
            console.log("First visible page did NOT get set. Dropping the scroll event.");
            return;
        }
        
        this.firstVisiblePage = firstVisiblePage;
        this.lastVisiblePage = lastVisiblePage;
        this.firstVisibleTop = firstVisibleTop;
        this.lastVisibleBottom = lastVisibleBottom;

        if (this.load_methods.indexOf("scroll") > -1) {
            this.on_region_scrolled(this, scrollTop, scrollBottom, scrollDelta, firstVisiblePage, lastVisiblePage, firstVisibleTop, lastVisibleBottom);
        }
    };
    
    Region.prototype.first_loaded_page = function () {
        return this.min_page_loaded;
    };
    
    Region.prototype.last_loaded_page = function () {
        return this.max_page_loaded;
    };
    
    Region.prototype.set_additional_content_indicators = function (has_next_page, has_prev_page) {
        if (has_next_page) {
            this.$region.addClass("is-Paginate--has_next_page");
            this.$region.removeClass("is-Paginate--no_next_page");
        } else {
            this.$region.removeClass("is-Paginate--has_next_page");
            this.$region.addClass("is-Paginate--no_next_page");
        }
        
        if (has_prev_page) {
            this.$region.addClass("is-Paginate--has_prev_page");
            this.$region.removeClass("is-Paginate--no_prev_page");
        } else {
            this.$region.removeClass("is-Paginate--has_prev_page");
            this.$region.addClass("is-Paginate--no_prev_page");
        }
    };
    
    /* Returns the position of the top of a particular page.
     */
    Region.prototype.page_top_position = function (pagenumber) {
        var page = this.pages[pagenumber],
            $firstItem,
            measuredOffset,
            $parentScroller = this.$parentScroller,
            scrollerOffset = 0,
            encounteredScroller = false;
        
        if (page === undefined) {
            console.log("Missing page: " + pagenumber);
            console.log(this.pages);
            
            if (pagenumber < this.min_page_loaded || pagenumber === null) {
                pagenumber = this.min_page_loaded;
            }
            
            if (pagenumber > this.max_page_loaded) {
                pagenumber = this.max_page_loaded;
            }
            
            page = this.pages[pagenumber];
        }
        
        $firstItem = page.$firstItem;
        measuredOffset = $firstItem.offset().top;
        if ($parentScroller[0] !== document) {
            scrollerOffset = $parentScroller.offset().top;
        }
        
        return measuredOffset - scrollerOffset;
    };
    
    /* Scroll the region by a particular delta. */
    Region.prototype.scroll_by_delta = function (scrollDelta) {
        var $parentScroller = this.$parentScroller;
        
        $parentScroller.scrollTop($parentScroller.scrollTop() + scrollDelta);
    };
    
    Region.prototype.scroll_absolutely = function (scrollAbs) {
        var $parentScroller = this.$parentScroller;
        
        $parentScroller.scrollTop(scrollAbs);
    };
    
    module.Region = Region;
    
    function Paginate(elem) {
        var $extantPager = $(elem).find(Pager.QUERY),
            $extantRegions = $(elem).find(Region.QUERY),
            currentPage = $(elem).data("paginate-page"),
            paginateThis = this;
        
        Behaviors.init(Paginate, this, arguments);
        
        if ($extantPager.length === 0) {
            console.error("No pager was found in this paginage instance.");
            return;
        }
        
        if (this.$elem.attr('id') === undefined) {
            console.error("This paginate needs an id before it can be used.");
            return;
        }
        
        console.log("page: " + currentPage);
        
        this.$context = $(elem);
        this.id = this.$context.attr("id");
        
        function pshClosure() {
            paginateThis.page_select_handler.apply(paginateThis, arguments);
        }

        this.pager = Pager.locate($extantPager.get(0), pshClosure);
        
        if ($extantPager.data("paginate-count") === 1) {
            console.log("Not activating depaginate on a region with only one page.");
            return;
        }
        
        this.pager.set_current_page(currentPage);
        this.pager.read_pager($extantPager.get(0));
        
        this.regions = {};
        this.regionNames = [];
        
        this.currentPage = currentPage;
        
        function orsClosure() {
            paginateThis.on_region_scrolled.apply(paginateThis, arguments);
        }
        
        this.features = $extantPager.data("paginate-features");

        if (this.features === undefined) {
            this.features = "backScroll";
        }

        console.log("Paginate Features:" + this.features);
        this.features = this.features.split(" ");

        $extantRegions.each(function (index, elem) {
            var $extantRegion = $(elem),
                regionName = $extantRegion.data("paginate-region"),
                region,
                currentPage = paginateThis.currentPage;
            
            console.log("page: " + currentPage);
            
            function scrollBack() {
                console.log("Scrolling back the user to " + region.page_top_position(currentPage) + " (page: " + currentPage + ")");
                region.scroll_absolutely(region.page_top_position(currentPage));
            }
            
            paginateThis.regionNames.push(regionName);
            
            region = paginateThis.regions[regionName] || Region.locate(elem, orsClosure);
            paginateThis.regions[regionName] = region;
            
            region.read_page_region(currentPage, elem);
            region.register_scroll_handler();
            
            paginateThis.update_region_indicators(region);
            
            if (!paginateThis.pager.is_first_page(currentPage) && paginateThis.features.indexOf("backScroll") > -1) {
                //User pressed back button, scroll the region into view
                
                $(document).ready(scrollBack);
                $(window).on("load", function () {
                    window.setTimeout(scrollBack, 1500);
                });
            }
        });
    }
    
    Behaviors.inherit(Paginate, Behaviors.Behavior);
    
    Paginate.QUERY = "[data-paginate='paginate']";
    
    Paginate.prototype.page_load_success = function (data, textStatus, jqXHR) {
        var $data = $(data),
            i = 0,
            $dataPaginate,
            $dataRegion,
            $dataPager,
            region = null,
            paginateThis = this,
            next_page = 0;

        $dataPaginate = $data.find("#" + this.id);
        
        if ($dataPaginate.length === 0) {
            $dataPaginate = $data.filter("#" + this.id);
        }
        
        if ($dataPaginate.length === 0) {
            console.error("DEPAGINATE: The paginate context with ID " + this.id + " could not be found in the loaded page. Errors may result.");
        }
        
        next_page = $dataPaginate.data("paginate-page");

        for (i = 0; i < this.regionNames.length; i += 1) {
            $dataRegion = $dataPaginate.find("[data-paginate-region='" + this.regionNames[i] + "']");

            if ($dataRegion.length > 0) {
                region = this.regions[this.regionNames[i]];
                region.read_page_region(next_page, $dataRegion[0]);
            }
        }

        $dataPager = $dataPaginate.find(Pager.QUERY);
        $dataPager.each(function (index, pagerElem) {
            paginateThis.pager.read_pager(pagerElem);
        });

        this.pager.set_current_page(next_page);
        this.update_region_indicators(region);
    };

    Paginate.prototype.page_select_handler = function (pager, pagenumber) {
        var paginateThis = this;
        if (this.pager.is_page_loaded(pagenumber)) {
            return;
        }

        function on_success() {
            paginateThis.page_load_success.apply(paginateThis, arguments);
        }

        this.pager.load_page(pagenumber, on_success);
    };

    Paginate.prototype.on_region_scrolled = function (region, scrollTop, scrollBottom, scrollDelta, firstVisiblePage, lastVisiblePage, firstVisibleTop, lastVisibleBottom) {
        var visible_range = lastVisibleBottom - firstVisibleTop,
            visible_pagerange = lastVisiblePage - firstVisiblePage,
            average_page_size = visible_range / visible_pagerange,
            scroll_direction_down = scrollDelta > 0,
            should_load_page,
            next_page,
            paginateThis = this;
        
        function on_success() {
            paginateThis.page_load_success.apply(paginateThis, arguments);
        }
        
        if (scroll_direction_down) {
            should_load_page = scrollBottom + scrollDelta >= lastVisibleBottom;
            next_page = lastVisiblePage + 1;
            
            this.pager.set_current_page(lastVisiblePage);
        } else {
            should_load_page = scrollTop + scrollDelta < firstVisibleTop;
            next_page = firstVisiblePage - 1;
            
            this.pager.set_current_page(firstVisiblePage);
        }
        
        if (next_page < 0) {
            return;
        }
        
        if (should_load_page) {
            this.pager.load_page(next_page, on_success);
        }
    };
    
    Paginate.prototype.update_region_indicators = function (region) {
        region.set_additional_content_indicators(
            !this.pager.is_last_page(region.last_loaded_page()),
            !this.pager.is_first_page(region.first_loaded_page())
        );
    };
    
    module.Paginate = Paginate;
    
    Behaviors.register_behavior(Paginate);
    
    return module;
}));
/*global define,google,Promise*/
(function (root, factory) {
    "use strict";
    if (typeof define === 'function' && define.amd) {
        define("GoogleMap", ["jquery", "Behaviors"], factory);
    } else {
        root.GoogleMap = factory(root.jQuery, root.Behaviors);
    }
}(this, function ($, Behaviors) {
    "use strict";
    
    var module = {};
    
    function GoogleMap() {
        Behaviors.init(GoogleMap, this, arguments);
        
        this.load_gmaps().then(this.render_map.bind(this));
    }
    
    Behaviors.inherit(GoogleMap, Behaviors.Behavior);
    
    GoogleMap.QUERY = "[data-googlemap]";
    
    GoogleMap.prototype.center_specified_by_markup = function () {
        return this.$elem.data("googlemap-lat") !== undefined && this.$elem.data("googlemap-lng") !== undefined;
    };
    
    GoogleMap.prototype.determine_default_args = function () {
        var args = {
            center: {lat: 0, lng: 0},
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            disableDefaultUI: true,
            draggable: false,
            scrollwheel: false,
            zoom: 15
        };
        
        if (this.$elem.data("googlemap-draggable") !== undefined) {
            args.draggable = true;
        }
        
        if (this.$elem.data("googlemap-scrollzoom") !== undefined) {
            args.scrollwheel = true;
        }
        
        if (this.center_specified_by_markup()) {
            args.center = {lat: this.$elem.data("googlemap-lat"),
                           lng: this.$elem.data("googlemap-lng")};
        }
        
        if (this.$elem.data("googlemap-zoom") !== undefined) {
            args.zoom = this.$elem.data("googlemap-zoom");
        }
        
        return args;
    };
    
    GoogleMap.prototype.load_gmaps = function () {
        return Promise.resolve().then(function () {
            if (window.google) {
                return;
            } else {
                //TODO: Autoload Gmaps API
                throw new Error("Google Maps API not loaded at time of initialization.");
            }
        });
    };
    
    GoogleMap.prototype.render_map = function () {
        var $markers = this.$elem.find('[data-googlemap-marker]'), i;
        
        // create map
        this.map = new google.maps.Map(this.$elem[0], this.determine_default_args());
        
        this.map.markers = [];
        for (i = 0; i < $markers.length; i += 1) {
            this.add_marker($($markers[i]), this.map);
        }
        
        // center map
        this.center_map();
    };
    
    GoogleMap.prototype.add_marker = function ($marker) {
        var latlng = new google.maps.LatLng($marker.data('googlemap-lat'), $marker.data('googlemap-lng')),
            marker = new google.maps.Marker({
                position: latlng,
                map: this.map
            }),
            infowindow;
        
        this.map.markers.push(marker);
        
        // if marker contains HTML, add it to an infoWindow
        if ($marker.html()) {
            infowindow = new google.maps.InfoWindow({
                content		: $marker.html()
            });
            
            google.maps.event.addListener(marker, 'click', this.marker_click_intent.bind(this, marker, infowindow));
        }
    };
    
    GoogleMap.prototype.marker_click_intent = function (marker, infowindow) {
        infowindow.open(this.map, marker);
    };
    
    GoogleMap.prototype.center_map = function () {
        var i, marker, latlng, bounds = new google.maps.LatLngBounds();
        
        // loop through all markers and create bounds
        for (i = 0; i < this.map.markers.length; i += 1) {
            marker = this.map.markers[i];
            latlng = new google.maps.LatLng(marker.position.lat(), marker.position.lng());
            bounds.extend(latlng);
        }
        
        if (!this.center_specified_by_markup()) {
            if (this.map.markers.length === 1) {
                this.map.setCenter(bounds.getCenter());
            } else {
                this.map.fitBounds(bounds);
            }
        }
    };
    
    Behaviors.register_behavior(GoogleMap);
    
    module.GoogleMap = GoogleMap;
    
    return module;
}));
(function(){

  window.addEventListener('DOMContentLoaded', () => {
    const slides = document.querySelectorAll('.Hero__slide');
  const toggles = document.querySelectorAll('.Hero__nav-item');
  const slideCount = slides.length;
  

  const autoplayHandler = id => {
    slides.forEach(slide => {
        const slideID = slide.id.split('-')[3];
        if(id == slideID){
          slide.classList.add('Hero-selected-slide');
        } else {
          slide.classList.remove('Hero-selected-slide')
          
        }
      });
      toggles.forEach(toggle => {
        const toggleID = toggle.id.split('-')[4];
        if(id == toggleID){
          toggle.classList.add('Hero_nav-item-selected')
        } else {
          toggle.classList.remove('Hero_nav-item-selected')
        }
      })
  }
  

  const slideHandler = (e, id) => {
    e.preventDefault();
    slides.forEach(slide => {
        const slideID = slide.id.split('-')[3];
        if(id === slideID){
          slide.classList.add('Hero-selected-slide');
          
        } else {
          slide.classList.remove('Hero-selected-slide')
        }
      });
      toggles.forEach(toggle => {
        const toggleID = toggle.id.split('-')[4];
        if(id === toggleID){
          toggle.classList.add('Hero_nav-item-selected');
        } else {
          toggle.classList.remove('Hero_nav-item-selected')
        }
      })
      i = id;
  }

  let i = 0;
  const counterHandler = () => {
    if(i == 3){
      i = 1;
    } else {
      i++;
    }
     autoplayHandler(i);
  }
  //let myInt = setInterval(() => {
    //counterHandler()
  //}, 6500)
  

  toggles.forEach(toggle => {
    const toggleID = toggle.id.split('-')[4];
    toggle.addEventListener('click', (e) => slideHandler(e, toggleID))
  });
  });
}());
(function () {
  window.addEventListener("DOMContentLoaded", () => {
    $(document).ready(function () {
      $(".hba__slider").slick({
        arrows: false,
        draggable: true,
        swipe: true,
        slidesToShow: 1,
        slidesToScroll: 1,
        adaptiveHeight: true,
        asNavFor: ".hba__slider-nav",
      });
      $(".hba__slider-nav").slick({
        slidesToShow: "auto",
        asNavFor: ".hba__slider",
        dots: false,
        arrows: false,
        centerMode: true,
        focusOnSelect: true,
        useTransform: false,
      });
    });
  });
})();

(function () {
  $(document).ready(function () {
    $(".hpq__m-slider").slick({
      arrows: false,
      draggable: true,
      swipe: true,
      slidesToShow: 1,
      slidesToScroll: 1,
      adaptiveHeight: true,
      asNavFor: ".hpq__m-nav-slider",
    });
    $(".hpq__m-nav-slider").slick({
      slidesToShow: "auto",
      asNavFor: ".hpq__m-slider",
      dots: false,
      arrows: false,
      centerMode: true,
      focusOnSelect: true,
      useTransform: false,
    });
  });
})();

/*global define, console, document, window, Promise*/
(function (root, factory) {
    "use strict";
    if (typeof define === 'function' && define.amd) {
        define("PageTransition", ["jquery", "Behaviors", "Animations"], factory);
    } else {
        root.PageTransition = factory(root.jQuery, root.Behaviors, root.Animations);
    }
}(this, function ($, Behaviors, Animations) {
    "use strict";

    var module = {};

    function $do(that, target) {
        return function () {
            target.apply(that, arguments);
        };
    }

    /* A page transition region is an element on the page with a unique ID that
     * is the same from page load to page load. It is a good idea for there to
     * be only one page transition region covering as much is it can on the
     * page.
     *
     * An ID is mandatory for page transition regions.
     */
    function PageTransitionRegion(elem) {
        Behaviors.init(PageTransitionRegion, this, arguments);

        this.id = this.$elem.attr("id");

        this.$elem.on("click", this.navigation_intent.bind(this));

        this.claim_current_state();
        $(window).on("popstate", this.pop_state_intent.bind(this));
    }

    Behaviors.inherit(PageTransitionRegion, Behaviors.Behavior);

    PageTransitionRegion.QUERY = "[data-pagetransition-region]";
    
    /* Determine if we can transition to a new page or not.
     * 
     * This does not actually replace the content. Thus, you can make the check
     * without committing to the new page.
     */
    PageTransitionRegion.prototype.can_replace = function ($new_document) {
        var $other_region = $new_document.find("#" + this.id);
        if ($other_region.length === 0) {
            $other_region = $new_document.filter("#" + this.id);
        }
        
        if ($other_region.length === 0) {
            return false;
        }
        
        return true;
    };
    
    /* Prepare to replace the old content with the new one.
     */
    PageTransitionRegion.prototype.prepare_to_replace = function ($old_document) {
        Behaviors.content_removal($old_document.children().filter(":not([data-pagetransition-backdrop])"));
    };

    /* Replace current content with content pulled from a new page we're trying
     * to transition into.
     *
     * Returns false if we could not extract content from the new document.
     * In this case, calling method should perform a traditional navigation to
     * the new document.
     */
    PageTransitionRegion.prototype.replace = function ($new_document) {
        var $other_region = $new_document.find("#" + this.id), $children;
        if ($other_region.length === 0) {
            $other_region = $new_document.filter("#" + this.id);
        }

        if ($other_region.length === 0) {
            return false;
        }
        
        $children = $other_region.children().filter(":not([data-pagetransition-backdrop])");

        this.$elem.children().filter(":not([data-pagetransition-backdrop])").remove();
        this.$elem.append($children);
        $(window).scrollTop(0);
        
        Behaviors.content_ready($children.parent());

        return true;
    };

    /* Replace the backdrop element.
     *
     * This is replaced separately so that each page can specify it's own outro
     * backdrop without interrupting the incoming animation.
     *
     * This should only be called after the promise returned by transition_in
     * resolves.
     *
     * Returns false if we could not extract content from the new document.
     * In this case, calling method should perform a traditional navigation to
     * the new document.
     */
    PageTransitionRegion.prototype.replace_backdrop = function ($new_document) {
        var $other_region = $new_document.find("#" + this.id);
        if ($other_region.length === 0) {
            $other_region = $new_document.filter("#" + this.id);
        }

        if ($other_region.length === 0) {
            return false;
        }

        this.$elem.attr("class", $other_region.attr("class"));
        this.$elem.children().filter("[data-pagetransition-backdrop]").remove();
        this.$elem.append($other_region.children().filter("[data-pagetransition-backdrop]"));

        return true;
    };

    /* Change the browser URL to point to the new URL, and also fix relative
     * links such that they resolve correctly.
     *
     * The transition property in the pushState data indicates that this entry
     * was placed here by the PageTransitionRegion class. This lets us avoid
     * applying transitions to things that shouldn't get them.
     */
    PageTransitionRegion.prototype.replace_state = function (url) {
        window.history.pushState({transition: true, url: url}, "", url);
        this.claim_current_state();
    };
    
    /* Changes the document head to match what is present in the new document.
     * 
     * Currently, only title replacement is supported, but this function may
     * also be extended to 
     */
    PageTransitionRegion.prototype.replace_head = function ($new_document) {
        var $new_title = $new_document.filter("title"),
            $title = $("title");
        
        if ($new_title.length === 0) {
            $new_title = $new_document.find("title");
        }
        
        $title.text($new_title.text());
    };
    
    /* Retrigger analytics scripts if so marked.
     */
    PageTransitionRegion.prototype.replace_analytics = function () {
        var $reloadable_tags;
        
        //Step 1: Find tags marked for reloading.
        $reloadable_tags = $(this.constructor.RELOADABLE_SCRIPT_QUERY);
        
        //Step 2: Reinsert them, hopefully causing them to be included again.
        //We need to try this two separate ways based on if it's an inline
        //script or external.
        $reloadable_tags.detach();
        
        $reloadable_tags.each(function (index, elem) {
            var $elem = $(elem), src = $elem.attr("src");
            
            if (src !== undefined) {
                //External script, recreate the tag
                $elem.remove();
                $elem = $("<script></script>");
                $elem.attr("src", src);
            }
            
            $("body").append($elem);
        });
    };
    
    /* Indicates an analytics tag that can be retriggered for the new page load
     * by just reloading it's tag.
     */
    PageTransitionRegion.RELOADABLE_SCRIPT_QUERY = "[data-pagetransition-analytics='reloadable']";

    /* Claim the current history state for ourselves.
     *
     * By default, this is only called at the start of the page load.
     */
    PageTransitionRegion.prototype.claim_current_state = function () {
        var url = window.location.href;
        window.history.replaceState({transition: true, url: url}, "", url);
    };

    /* Determine if link is internal or external.
     *
     * The purpose of distinguishing between internal and external links is to
     * check if we can transition to them properly or not. We can only
     * transition into pages with compatible regions; so we assume that all
     * internal links will use the same compatible theming.
     *
     * Also, transitioning to an external page requires specially configured
     * web servers that allow CORS, which is a pain.
     *
     * Returns LINK_INTERNAL, LINK_EXTERNAL, LINK_POPUP, or LINK_HASH.
     */
    PageTransitionRegion.prototype.is_internal_link = function (url, $a) {
        var extRegex = new RegExp("(\/\/|:)"),
            hashRegex = new RegExp("^#"),
            domainRelativeHashRegex = new RegExp("^" + window.location.pathname + "/#"),
            protRelativeRegex = new RegExp("^//" + window.location.host),
            protAbsoluteRegex = new RegExp('^' + window.location.protocol + "//" + window.location.host),
            protRelativeHashRegex = new RegExp('^//' + window.location.host + window.location.pathname + "#"),
            absoluteHashRegex = new RegExp('^' + window.location.protocol + "//" + window.location.host + window.location.pathname + "#");

        if ($a.attr("target") !== undefined && $a.attr("target") !== "") {
            return PageTransitionRegion.LINK_POPUP;
        }
        
        if (hashRegex.test(url) || absoluteHashRegex.test(url) || protRelativeHashRegex.test(url) || domainRelativeHashRegex.test(url)) {
            return PageTransitionRegion.LINK_HASH;
        } else if (!extRegex.test(url) || protRelativeRegex.test(url) || protAbsoluteRegex.test(url)) {
            return PageTransitionRegion.LINK_INTERNAL;
        } else {
            return PageTransitionRegion.LINK_EXTERNAL;
        }
    };

    /* Transition out the current page.
     *
     * Returns a promise which resolves when the transition has completed.
     *
     * This default implementation uses a CSS class and waits for transitionEnd
     * events.
     */
    PageTransitionRegion.prototype.transition_out = function () {
        var aw;

        this.$elem.removeClass("is-PageTransition--transition_loading");
        this.$elem.addClass("is-PageTransition--transition_out");
        this.$elem.removeClass("is-PageTransition--transition_in");
        aw = new Animations.AnimationWatcher(this.$elem.find("[data-pagetransition-backdrop]"));

        return aw.promise;
    };

    /* Transition to a loading animation.
     *
     * Returns a promise which resolves when the transition has completed.
     *
     * This default implementation uses a CSS class and waits for transitionEnd
     * events.
     */
    PageTransitionRegion.prototype.transition_loading = function () {
        var aw;

        this.$elem.addClass("is-PageTransition--transition_loading");
        this.$elem.removeClass("is-PageTransition--transition_out");
        this.$elem.removeClass("is-PageTransition--transition_in");
        aw = new Animations.AnimationWatcher(this.$elem.find("[data-pagetransition-backdrop]"));

        return aw.promise;
    };

    /* Transition in the current page.
     *
     * Returns a promise which resolves when the transition has completed.
     *
     * This default implementation uses a CSS class and waits for transitionEnd
     * events.
     */
    PageTransitionRegion.prototype.transition_in = function () {
        var aw;

        this.$elem.removeClass("is-PageTransition--transition_loading");
        this.$elem.removeClass("is-PageTransition--transition_out");
        this.$elem.addClass("is-PageTransition--transition_in");
        aw = new Animations.AnimationWatcher(this.$elem.find("[data-pagetransition-backdrop]"));

        return aw.promise;
    };

    /* Transition to the "done" state, which should just have the site be
     * plainly visible.
     *
     * Returns a promise which resolves any final transitions have completed.
     * However, most transition effects should not be starting animations here,
     * so it may never resolve.
     *
     * This default implementation removes all CSS classes and waits for
     * transitionEnd events.
     */
    PageTransitionRegion.prototype.transition_done = function () {
        var aw;

        this.$elem.removeClass("is-PageTransition--transition_loading");
        this.$elem.removeClass("is-PageTransition--transition_out");
        this.$elem.removeClass("is-PageTransition--transition_in");
        aw = new Animations.AnimationWatcher(this.$elem.find("[data-pagetransition-backdrop]"));

        return aw.promise;
    };

    /* Given a URL, actually transition the page to a new page.
     *
     * The default method of transitioning the page is to:
     *
     *   1. AJAX the new page in
     *   2. Transition out the current page
     *   3. Call .replace() to get the new page's content in here.
     *   4. Transition in the new page
     *
     * Subclasses of PageTransitionRegion may implement more complicated
     * behavior based on their own individual requirements. Generally, however,
     * you will want to call .replace() to get the content in.
     *
     * If the replacement fails, we will attempt traditional navigation instead
     * of silently or catastrophically failing.
     */
    PageTransitionRegion.prototype.retrieve_document_by_url = function (url, isPopState) {
        var ajaxPromise = new Promise(function (resolve, reject) {
            $.get(url, undefined, resolve, "html");
        }),
            theData;

        return this.transition_out().then(function () {
            console.log("Out transition finished");
            this.transition_loading();
            return ajaxPromise;
        }.bind(this)).then(function (data) {
            this.prepare_to_replace(this.$elem);
            return new Promise(function (resolve, reject) {
                window.setTimeout(resolve.bind(this, data), 1);
            });
        }.bind(this)).then(function (data) {
            var couldReplace;

            console.log("Load finished");
            theData = data;

            couldReplace = this.can_replace($(theData));
            if (!couldReplace) {
                window.location.href = url;
                throw new Error("Location " + url + " does not have transitionable links!");
            } else if (isPopState !== true) {
                this.replace_state(url);
            }
            
            this.replace($(theData));
            this.replace_head($(theData));
            this.replace_analytics($(theData));
            
            return this.transition_in();
        }.bind(this)).then(function () {
            console.log("In transition finished");
            this.replace_backdrop($(theData));
            this.transition_done();
        }.bind(this));
    };

    /* Link which resolves to the same origin server. */
    PageTransitionRegion.LINK_INTERNAL = 0;

    /* Link which resolves to a different origin server. */
    PageTransitionRegion.LINK_EXTERNAL = 1;

    /* Link which resolves in another window */
    PageTransitionRegion.LINK_POPUP = 2;

    /* Link which resolves to the same page.
     * Also covers links which do JavaScripty things and should be buttons, but
     * aren't because some developers think their pages will always load with
     * the correct JS and don't consider fallback cases
     */
    PageTransitionRegion.LINK_HASH = 3;

    /* Event handler for when a link within the region is clicked.
     */
    PageTransitionRegion.prototype.navigation_intent = function (evt) {
        var $target = $(evt.target), $parent_tgt = $target.parents().filter("a"),
            href;

        if ($target.filter("a").length === 0) {
            $target = $parent_tgt;
        }

        if ($target.filter("a").length === 0) {
            //Not a link.
            return;
        }

        href = $target.attr("href");

        if (this.is_internal_link(href, $target) === PageTransitionRegion.LINK_INTERNAL) {
            //It's AJAX time!
            evt.preventDefault();
            this.retrieve_document_by_url(href);
        }
    };

    /* Event handler for when the user presses the back button. */
    PageTransitionRegion.prototype.pop_state_intent = function (evt) {
        if (evt.originalEvent.state !== undefined &&
                evt.originalEvent.state !== null &&
                evt.originalEvent.state.transition === true) {
            evt.preventDefault();
            this.retrieve_document_by_url(evt.originalEvent.state.url, true);
        }
    };

    Behaviors.register_behavior(PageTransitionRegion);

    module.PageTransitionRegion = PageTransitionRegion;

    return module;
}));

(function () {
  window.addEventListener("DOMContentLoaded", () => {
    //--Sticky Add To Cart
    const ATC = document.getElementById("Product__sticky-ATC");
    const form = document.getElementById("Product-form");
    const footer = document.getElementById("SiteFooter");
    let width = window.innerWidth;
    let height = window.innerHeight;
    window.addEventListener("resize", (e) => {
      width = window.innerWidth;
      height = window.innerHeight;
    });
    if (width < 870) {
      window.addEventListener("scroll", (e) => {
        const elRec = form.getBoundingClientRect();
        const footerRec = footer.getBoundingClientRect();

        if (elRec.bottom < 100) {
          ATC.classList.add("Product__sticky-ATC--open");
        } else {
          ATC.classList.remove("Product__sticky-ATC--open");
        }
        if (footerRec.top < height) {
          ATC.classList.remove("Product__sticky-ATC--open");
        }
      });
    }

    //--Size Picker
    const hiddenInputs = document.querySelectorAll(".product-opton");
    const circleOptions = document.querySelectorAll(
      ".Product-details__form-option"
    );
    const optionHandler = (id) => {
      const cID = id;
      circleOptions.forEach((cOption) => {
        const opID = cOption.dataset.key;
        if (cID == opID) {
          cOption.classList.add("Product-selected-option");
          cOption.children[0].style.fontWeight = "700";
        } else {
          cOption.classList.remove("Product-selected-option");
          cOption.children[0].style.fontWeight = "400";
        }
      });
      hiddenInputs.forEach((input) => {
        const iID = input.dataset.key;
        if (cID == iID) {
          input.selected = "selected";
        } else {
          input.selected = "";
        }
      });
    };
    circleOptions.forEach((option) => {
      option.addEventListener("click", (e) =>
        optionHandler(option.dataset.key)
      );
    });
    //--Sliders
    var galleryThumbs = new Swiper(".Product__slider-nav", {
      direction: "vertical",
      spaceBetween: 15,
      slidesPerView: "auto",
      freeMode: true,
      watchSlidesVisibility: true,
      watchSlidesProgress: true,
    });
    var galleryTop = new Swiper(".Product__slider", {
      spaceBetween: 10,
      slidesPerView: "auto",
      centeredSlides: true,
      loop: true,
      thumbs: {
        swiper: galleryThumbs,
      },
      breakpoints: {
        1000: {
          slidesPerView: 1,
        },
      },
    });

    //--Quantity Selector
    const input = document.getElementById("Product-qs-input");
    const placeholder = document.querySelector(".Product-qs-value-text");
    const plus = document.querySelector(".Product-qs-plus");
    const minus = document.querySelector(".Product-qs-minus");
    const incVal = () => {
      let value = input.value;
      const newVal = ++value;
      setNewVals(newVal);
    };
    const decVal = () => {
      let value = input.value;
      const newVal = --value;
      if (newVal < 1) {
        setNewVals(newVal);
      } else {
        setNewVals(newVal);
      }
    };
    const setNewVals = (newVal) => {
      const value = newVal;
      if (value < 1) {
        input.value = 1;
        placeholder.innerHTML = 1;
      } else {
        input.value = value;
        placeholder.innerHTML = value;
      }
    };
    plus.addEventListener("click", incVal);
    minus.addEventListener("click", decVal);

    //--Accordion
    const drawers = document.querySelectorAll(".pd__accordion-drawer");
    const drawerHandler = (id) => {
      const ID = id.split("-")[1];
      drawers.forEach((drawer) => {
        const dID = drawer.id.split("-")[1];
        if (ID == dID) {
          if (drawer.classList.length > 1) {
            closeAllDrawers();
          } else {
            drawer.classList.add("pd__accordion-drawer-open");
          }
        } else {
          drawer.classList.remove("pd__accordion-drawer-open");
        }
      });
    };
    const closeAllDrawers = () => {
      drawers.forEach((drawer) => {
        drawer.classList.remove("pd__accordion-drawer-open");
      });
    };
    drawers.forEach((drawer) => {
      drawer.addEventListener("click", (e) => drawerHandler(drawer.id));
    });

    //Ingredients
    $(document).ready(function () {
      $(".pi__slider").slick({
        arrows: false,
        draggable: true,
        swipe: true,
        slidesToShow: 3,
        slidesToScroll: 1,
        adaptiveHeight: true,
        infinite: true,
        autoplay: true,
        autoplaySpeed: 5000,
        asNavFor: ".pi__slider-nav",
        responsive: [
          {
            breakpoint: 768,
            settings: {
              arrows: false,
              draggable: true,
              swipe: true,
              slidesToShow: 1,
              slidesToScroll: 1,
              adaptiveHeight: true,
              infinite: true,
              autoplay: true,
              autoplaySpeed: 5000,
            },
          },
        ],
      });
      $(".pi__slider-nav").slick({
        slidesToShow: "auto",
        asNavFor: ".pi__slider",
        dots: false,
        arrows: false,
        centerMode: true,
        focusOnSelect: true,
        useTransform: false,
        responsive: [
          {
            breakpoint: 768,
            settings: {
              dots: false,
              arrows: false,
              centerMode: true,
              focusOnSelect: true,
              useTransform: true,
            },
          },
        ],
      });
    });
  });
})();

/*global define, console*/

(function (root, factory) {
    "use strict";
    if (typeof define === 'function' && define.amd) {
        define("ScrollEffects", ["jquery", "Behaviors"], factory);
    } else {
        root.ScrollEffects = factory(root.jQuery, root.Behaviors);
    }
}(this, function ($, Behaviors) {
    "use strict";

    var module = {};

    function ScrollEffects(elem) {
        Behaviors.init(ScrollEffects, this, arguments);

        this.$elem = $(elem);
        this.$scrollCtxt = $(window); //TODO: Allow CSS overflow scrolling
        
        this.scrollHandler = this.on_scroll_intent.bind(this);

        this.$scrollCtxt.on("scroll", this.scrollHandler);
    }

    Behaviors.inherit(ScrollEffects, Behaviors.Behavior);

    ScrollEffects.QUERY = "[data-scrolleffects]";
    ScrollEffects.THROTTLE_TIMEOUT = 200;
    
    /* Deinitialize our scroll handler if needed.
     */
    ScrollEffects.prototype.deinitialize = function () {
        this.$scrollCtxt.off("scroll", this.scrollHandler);
    };
    
    /* Return a list of all available scroll effect modes on this bit.
     */
    ScrollEffects.prototype.activation_modes = function () {
        return this.$elem.data("scrolleffects").split(" ");
    };

    ScrollEffects.prototype.update_css_classes = function () {
        var activation_modes = this.activation_modes(),
            active = false;

        if (this.isTopVisible && activation_modes.indexOf("top_visible") !== -1) {
            active = true;
        }

        if (this.isBottomVisible && activation_modes.indexOf("bottom_visible") !== -1) {
            active = true;
        }

        if (this.isVisible && activation_modes.indexOf("visible") !== -1) {
            active = true;
        }

        if (this.onceTopVisible && activation_modes.indexOf("top_visible_once") !== -1) {
            active = true;
        }

        if (this.onceBottomVisible && activation_modes.indexOf("bottom_visible_once") !== -1) {
            active = true;
        }

        if (this.onceVisible && activation_modes.indexOf("visible_once") !== -1) {
            active = true;
        }

        if (active) {
            this.$elem.addClass("is-ScrollEffects--active");
            this.$elem.removeClass("is-ScrollEffects--inactive");
        } else {
            this.$elem.removeClass("is-ScrollEffects--active");
            this.$elem.addClass("is-ScrollEffects--inactive");
        }
    };

    ScrollEffects.prototype.on_scroll_intent = function () {
        var top = this.$elem.offset().top,
            height = this.$elem.height(),
            bottom = top + height,
            contextOffset = this.$scrollCtxt.offset(),
            contextScrollTop = contextOffset !== undefined
                                ? contextOffset.top + this.$scrollCtxt.scrollTop()
                                : this.$scrollCtxt.scrollTop(),
            contextHeight = this.$scrollCtxt.height(),
            contextScrollBottom = contextScrollTop + contextHeight;

        this.isTopVisible = contextScrollTop <= top && top <= contextScrollBottom;
        this.isBottomVisible = contextScrollTop <= bottom && bottom <= contextScrollBottom;
        this.isVisible = this.isTopVisible || this.isBottomVisible
            || (top <= contextScrollTop && contextScrollTop <= bottom)
            || (top <= contextScrollBottom && contextScrollBottom <= bottom);

        this.onceTopVisible = this.onceTopVisible || this.isTopVisible;
        this.onceBottomVisible = this.onceBottomVisible || this.isBottomVisible;
        this.onceVisible = this.onceVisible || this.isVisible;

        this.top = top;
        this.bottom = bottom;
        this.contextScrollTop = contextScrollTop;
        this.contextScrollBottom = contextScrollBottom;

        this.update_css_classes();
    };

    Behaviors.register_behavior(ScrollEffects);

    function ScrollAlax() {
        Behaviors.init(ScrollAlax, this, arguments);

        this.$layers = this.$elem.find("li");
        this.depth = this.$elem.height() * -0.5;

        if (this.$elem.data('scrollalax-depthrange') === 'outside') {
            this.anim_scale = 1;
        } else {
            this.anim_scale = -1;
        }

        this.weights = this.weight_layers(this.$layers);

        this.on_scroll_intent();
    }

    Behaviors.inherit(ScrollAlax, ScrollEffects);

    ScrollAlax.QUERY = "[data-scrollalax]";

    /* Determine the weights of each layer on the parallax group. */
    ScrollAlax.prototype.weight_layers = function ($layers) {
        var min = Infinity, max = -Infinity, w = [];

        $layers.each(function (index, elem) {
            var depth = $(elem).data("scrollalax-depth");

            if (min > depth) {
                min = depth;
            }

            if (max < depth) {
                max = depth;
            }
        }.bind(this));

        $layers.each(function (index, elem) {
            var depth = $(elem).data("scrollalax-depth");

            if (this.anim_scale === -1) {
                w.push(-1 + (depth - min) / (max - min));
            } else {
                w.push((depth - min) / (max - min));
            }
        }.bind(this));

        return w;
    }

    /* Calculate X or Y positions of a layer. */
    ScrollAlax.prototype.apply_transform_css = function(style, index, xPct, yPct) {
        var pct_Xdrag = this.weights[index] * xPct * this.anim_scale,
            pct_Ydrag = this.weights[index] * yPct * this.anim_scale,
            xDisp = this.depth * pct_Xdrag * this.anim_scale,
            yDisp = this.depth * pct_Ydrag * this.anim_scale;

        //style.left = xDisp + "px";
        //style.top = yDisp + "px";

        style.transform = "translate3D(" + xDisp + "px, " + yDisp + "px, 0px)";
    };

    /* Update the scroll animation. */
    ScrollAlax.prototype.update_css_classes = function (evt) {
        this.$layers.each(function (index, layer_elem) {
            var pct_down = Math.max(Math.min((this.contextScrollTop - this.top) / this.$elem.height(), 1.0), 0.0),
                $layer_elem = $(layer_elem);

            this.apply_transform_css(layer_elem.style, index, 0, pct_down);
        }.bind(this));
    };

    Behaviors.register_behavior(ScrollAlax);

    module.ScrollEffects = ScrollEffects;
    module.ScrollAlax = ScrollAlax;

    return module;
}));

(function (root, factory) {
    "use strict";
    if (typeof define === 'function' && define.amd) {
        define("StaffGrid", ["jquery", "Behaviors"], factory);
    } else {
        root.StaffGrid = factory(root.jQuery, root.Behaviors);
    }
}(this, function ($, Behaviors) {
    "use strict";

    var module = {};
    
    function StaffGridSlider() {
        Behaviors.init(StaffGridSlider, this, arguments);
        
        this.$elem.slick({
            prevArrow: this.$elem.find('[data-staffgrid-prev]'),
            nextArrow: this.$elem.find('[data-staffgrid-next]')
        });
    }
    
    Behaviors.inherit(StaffGridSlider, Behaviors.Behavior);
    
    StaffGridSlider.QUERY = "[data-staffgrid-slider]";
    
    StaffGridSlider.prototype.goto = function (id, animate) {
        this.$elem.slick('slickGoTo', id, animate);
    }
    
    function StaffGridModal() {
        Behaviors.init(StaffGridModal, this, arguments);
        
        this.slider = StaffGridSlider.locate(this.$elem.find('[data-staffgrid-slider]'));
        this.$elem.on("offcanvas-open", this.modal_reveal_intent.bind(this));
    }
    
    Behaviors.inherit(StaffGridModal, Behaviors.Behavior);
    
    StaffGridModal.QUERY = "[data-staffgrid-modal]";
    
    StaffGridModal.prototype.modal_reveal_intent = function (evt) {
        var slideIndex = $(evt.originalEvent.toggle).data('staffgrid-slider-index');
        
        this.slider.goto(slideIndex, true);
    };
    
    Behaviors.register_behavior(StaffGridModal);
    Behaviors.register_behavior(StaffGridSlider);
    
    module.StaffGridModal = StaffGridModal;
    module.StaffGridSlider = StaffGridSlider;
    
    return module;
}));

/*global define, console, document, window*/
(function (root, factory) {
    "use strict";
    if (typeof define === 'function' && define.amd) {
        define("TabbedContent", ["jquery", "Behaviors"], factory);
    } else {
        root.TabbedContent = factory(root.jQuery, root.Behaviors);
    }
}(this, function ($, Behaviors) {
    "use strict";

    var module = {};

    function $do(that, target) {
        return function () {
            target.apply(that, arguments);
        };
    }

    function TabbedContentRegion(elem) {
        Behaviors.init(TabbedContentRegion, this, arguments);

        this.$elem = $(elem);
        this.id = this.$elem.attr("id");
        this.active = this.$elem.data("tabbedcontent-region-active") !== undefined;

        this.links = [];

        this.reflect_status();
    }

    Behaviors.inherit(TabbedContentRegion, Behaviors.Behavior);

    TabbedContentRegion.QUERY = "[data-tabbedcontent-region]";

    TabbedContentRegion.prototype.reflect_status = function (status) {
        var i;

        if (status === undefined) {
            status = this.active;
        }

        if (status) {
            this.$elem.addClass("is-TabbedContent--active");
            this.$elem.removeClass("is-TabbedContent--inactive");
        } else {
            this.$elem.removeClass("is-TabbedContent--active");
            this.$elem.addClass("is-TabbedContent--inactive");
        }

        for (i = 0; i < this.links.length; i += 1) {
            if (status) {
                this.links[i].addClass("is-TabbedContent--target_active");
                this.links[i].removeClass("is-TabbedContent--target_inactive");
            } else {
                this.links[i].removeClass("is-TabbedContent--target_active");
                this.links[i].addClass("is-TabbedContent--target_inactive");
            }
        }
    };

    TabbedContentRegion.prototype.add_incoming_link = function ($li) {
        this.links.push($li);
    };

    function TabbedContentSet(elem) {
        Behaviors.init(TabbedContentSet, this, arguments);

        this.$elem = $(elem);

        this.tabset_name = this.$elem.attr("data-tabbedcontent-set");
        if (this.tabset_name === undefined) {
            this.tabset_name = this.$elem.attr("id");
        }

        this.tab_members = {};
        this.list = [];

        this.find_links();
    }

    Behaviors.inherit(TabbedContentSet, Behaviors.Behavior);

    TabbedContentSet.QUERY = "[data-tabbedcontent-set]";

    TabbedContentSet.prototype.new_tab = function (id) {
        var $elem = $("#" + id);

        if ($elem.length === 0) {
            return false;
        }

        if (this.tab_members[id] === undefined) {
            this.tab_members[id] = {
                "toggles": [],
                "content": TabbedContentRegion.locate($elem)
            };
        }

        return true;
    };

    TabbedContentSet.prototype.set_active_tab = function (id) {
        var k;

        for (k in this.tab_members) {
            if (this.tab_members.hasOwnProperty(k)) {
                this.tab_members[k].content.active = k === id;
                this.tab_members[k].content.reflect_status();
            }
        }
    };

    TabbedContentSet.prototype.navigate_tab_intent = function (id, evt) {
        this.set_active_tab(id);

        if (evt) {
            evt.preventDefault();
        }
    };

    TabbedContentSet.prototype.import_list_item = function (li) {
        var $li = $(li),
            $link = $li.find("a"),
            href = $link.attr("href"),
            id;

        if ($link.length === 0) {
            return;
        }

        if (href.indexOf("#") !== -1) {
            id = href.slice(1);
        }

        if (id === undefined) {
            return;
        }

        if (this.tab_members[id] === undefined && !this.new_tab(id)) {
            return;
        }

        this.list.push({
            "li": $li,
            "id": id
        });
        this.tab_members[id].content.add_incoming_link($li);
        this.tab_members[id].content.reflect_status();
        $link.on("touchend click", this.navigate_tab_intent.bind(this, id));
    };

    TabbedContentSet.prototype.find_links = function () {
        var that = this;

        this.$elem.find("li").each(function (index, elem) {
            return that.import_list_item(elem);
        });
    };

    Behaviors.register_behavior(TabbedContentSet);

    module.TabbedContentSet = TabbedContentSet;

    return module;
}));

(function (root, factory) {
    "use strict";
    if (typeof define === 'function' && define.amd) {
        define("accountslidein", ["jquery", "betteroffcanvas"], factory);
    } else {
        // Browser globals
        root.accountslidein = factory(root.jQuery, root.betteroffcanvas);
    }
}(this, function ($, betteroffcanvas) {
    "use strict";
    "feel good";

    $('.Account_slide-login--button').click(function(){
        $(this).hide();
        $('.Account_slide-form--password').removeClass('Account_slide-form--visible')
        $('.Account_slide-form--login').addClass('Account_slide-form--visible');
        return false;
    });

    $('.Account_slide-password_recovery').click(function(){
        $('.Account_slide-login--button').show();
        $('.Account_slide-form--login').removeClass('Account_slide-form--visible');
        $('.Account_slide-form--password').addClass('Account_slide-form--visible');
        return false;
    });


    $('.Account_slide-close').click(function(){
        betteroffcanvas.dismissOffcanvas($('#SiteHeader-accounts'));
    });
}));

(function (root, factory) {
    "use strict";
    if (typeof define === 'function' && define.amd) {
        define("siteheader", ["jquery", "betteroffcanvas"], factory);
    } else {
        // Browser globals
        root.siteheader = factory(root.jQuery, root.betteroffcanvas);
    }
}(this, function ($, betteroffcanvas, ajaxCart, Handlebars) {
    "use strict";
    "feel good";

    function update_scroll() {
        var scrollTop = $(window).scrollTop(),
            $SiteHeader = $("[data-siteheader='siteheader']");

        if (scrollTop === 0) {
            $SiteHeader.addClass("is-SiteHeader--at_top");
            $SiteHeader.removeClass("is-SiteHeader--scrolled");
        } else {
            $SiteHeader.removeClass("is-SiteHeader--at_top");
            $SiteHeader.addClass("is-SiteHeader--scrolled");
        }
    };

    $(window).on("scroll", update_scroll);

    update_scroll();
}));

/*global define, window, document, Promise*/
(function (root, factory) {
    "use strict";
    if (typeof define === 'function' && define.amd) {
        define("VideoPlayer", ["jquery", "Behaviors"], factory);
    } else {
        root.VideoPlayer = factory(root.jQuery, root.Behaviors);
    }
}(this, function ($, Behaviors) {
    "use strict";

    var module = {};

    function VideoPlayer(elem) {
        Behaviors.init(VideoPlayer, this, arguments);

        this.$elem = $(elem);
        
        if (this.ready) {
            this.ready().then(this.locate_children.bind(this));
        } else {
            this.locate_children();
        }
    }

    Behaviors.inherit(VideoPlayer, Behaviors.Behavior);

    /* Returns a promise which resolves when the player is ready to accept
     * other API calls.
     *
     * Calling those other API calls outside of a then() block from the promise
     * returned by this function is a good way to have a bad time.
     *
     * By default, the video player is always ready.
     */
    VideoPlayer.prototype.ready = function () {
        return new Promise(function (resolve, reject) {
            resolve();
        });
    };

    //No QUERY is defined for the base VideoPlayer class as it is not intended
    //to be locatable. Derived classes should locate their VideoPlayer subclass
    //once it's attendant APIs have been loaded.
    //VideoPlayer.QUERY = "";

    VideoPlayer.prototype.locate_children = function () {
        var $parent_modal;
        
        this.playpause = VideoPlayer_playpause.find_markup(this.$elem, this);
        this.scrubbers = VideoPlayer_scrubber.find_markup(this.$elem, this);
        this.mute_btns = VideoPlayer_mute.find_markup(this.$elem, this);
        
        //This is an example of how to locate upwards
        $parent_modal = this.$elem.parents().filter(VideoPlayer_offcanvas.QUERY);
        
        if ($parent_modal.length > 0) {
            this.modal = VideoPlayer_offcanvas.locate($parent_modal[0], this);
        }
        
        //Now see if we're supposed to autoplay...
        if (this.$elem.data("videoplayer-autoplay") !== undefined) {
            this.play();

            if (this.$elem.data("videoplayer-loop") !== undefined) {
                this.add_statechange_listener(this.loopcheck.bind(this));
            }
        }
    };

    VideoPlayer.prototype.loopcheck = function () {
        Promise.all([this.is_paused(), this.get_current_time(), this.get_duration()]).then(function (values) {
            var is_paused = values[0];
            var current_time = values[1];
            var duration = values[2];

            if (is_paused && current_time === duration) {
                this.seek(0);
                this.play();
            }
        }.bind(this));
    };

    /* Determine if the video player is active.
     *
     * Most keyboard events only process on the active video's controls, not
     * other videos. This ensures that you can have multiple VideoPlayers
     * running without them all being controlled by the same limited set of
     * keyboard shortcuts.
     *
     * A video player is active if any of the following apply:
     *
     *  - The video is marked primary with [data-videoplayer-primary].
     *  - The video is currently playing.
     *  - The VideoPlayer element or one of it's children has keyboard focus.
     * 
     * This function returns a promise which resolves to the return value.
     */
    VideoPlayer.prototype.is_active = function () {
        return this.is_paused(function (is_paused) {
            if (this.$elem.data("videoplayer-primary") !== undefined) {
                return true;
            }

            if (!is_paused) {
                return true;
            }

            if (this.$elem.find(":focus").length > 0) {
                return true;
            }

            return false;
        }.bind(this));
    };

    /* Serves as a play/pause button for a connected VideoPlayer.
     */
    function VideoPlayer_playpause(elem, parent) {
        var that = this;

        Behaviors.init(VideoPlayer_playpause, that, arguments);

        that.parent = parent;

        that.parent.ready().then(function () {
            that.parent.add_statechange_listener(that.on_statechange.bind(that));
            that.$elem.on("click touchend", that.on_play_intent.bind(that));

            that.update_css_classes();
        });
    }

    Behaviors.inherit(VideoPlayer_playpause, Behaviors.Behavior);

    VideoPlayer_playpause.QUERY = "[data-videoplayer-playpause]";

    VideoPlayer_playpause.prototype.update_css_classes = function () {
        this.parent.is_paused().then(function (is_paused) {
            if (is_paused) {
                this.$elem.addClass("is-VideoPlayer--paused");
                this.$elem.removeClass("is-VideoPlayer--playing");
            } else {
                this.$elem.removeClass("is-VideoPlayer--paused");
                this.$elem.addClass("is-VideoPlayer--playing");
            }
        }.bind(this));
    };

    VideoPlayer_playpause.prototype.toggle_playback = function () {
        this.parent.is_paused().then(function (is_paused) {
            if (is_paused) {
                this.parent.play();
            } else {
                this.parent.pause();
            }
        }.bind(this));
    };

    VideoPlayer_playpause.prototype.on_statechange = function () {
        this.update_css_classes();
    };

    VideoPlayer_playpause.prototype.on_play_intent = function () {
        this.toggle_playback();
    };

    /* Allows a video modal to be started and stopped as the modal is opened
     * and closed.
     * 
     * Place this on the Offcanvas element that gets dismissed and/or opened.
     */
    function VideoPlayer_offcanvas(elem, parent) {
        var that = this;

        Behaviors.init(VideoPlayer_offcanvas, that, arguments);

        that.parent = parent;

        that.$elem.on("offcanvas-open", that.on_open_intent.bind(that));
        that.$elem.on("offcanvas-dismiss", that.on_dismiss_intent.bind(that));
    }

    Behaviors.inherit(VideoPlayer_offcanvas, Behaviors.Behavior);

    VideoPlayer_offcanvas.QUERY = "[data-videoplayer-offcanvas]";

    VideoPlayer_offcanvas.prototype.on_open_intent = function () {
        var that = this;

        that.parent.is_paused().then(function (is_paused) {
            if (is_paused) {
                that.parent.play();
            }
        });
    };

    VideoPlayer_offcanvas.prototype.on_dismiss_intent = function () {
        var that = this;

        that.parent.is_paused().then(function (is_paused) {
            if (!is_paused) {
                that.parent.pause();
            }
        });
    };

    /* Serves as a scrub bar for a connected VideoPlayer.
     *
     * A Scrubber contains additional elements inside of it that do not have an
     * associated behavior:
     *
     *  - [data-videoplayer-scrubberfill]: The filled range of the scrubber.
     *  - [data-videoplayer-scrubberknob]: A knob which indicates the current
     *     scrubber point.
     */
    function VideoPlayer_scrubber(elem, parent) {
        var err, that = this;

        Behaviors.init(VideoPlayer_scrubber, that, arguments);

        that.parent = parent;

        //EVENT STATE VARIABLES
        that.is_dragging = false;
        that.in_debounce = false;

        //OPTIONAL COMPONENTS
        that.$scrubfill = that.$elem.find("[data-videoplayer-scrubberfill]");
        that.$scrubknob = that.$elem.find("[data-videoplayer-scrubberknob]");

        that.parent.ready().then(function () {
            //EVENT HANDLERS
            that.$elem.on("mousedown touchstart", that.on_dragstart_intent.bind(that));
            that.$elem.on("mousemove touchmove", that.on_drag_intent.bind(that));
            $(document).on("mouseup touchend touchcancel", that.on_dragend_intent.bind(that));
            $(document).on("keydown", that.on_keyboard_nav.bind(that));

            err = that.parent.add_timeupdate_listener(that.on_timeupdate.bind(that));
            if (err === false) {
                window.setInterval(that.on_timeupdate.bind(that), 1000);
            }
        });

        that.update_scrubber();
    }

    Behaviors.inherit(VideoPlayer_scrubber, Behaviors.Behavior);

    VideoPlayer_scrubber.QUERY = "[data-videoplayer-scrubber]";

    VideoPlayer_scrubber.prototype.css_percent = function (value) {
        return (value * 100) + "%";
    };

    /* This defines the dynamic CSS properties that are applied to scrubber
     * elements.
     *
     * Specifically, fills get a width equal to the current play percentage;
     * knobs get a left position equal to the current play percentage.
     *
     * This assumes knobs and fills get positioned relative to the scrubber.
     */
    VideoPlayer_scrubber.prototype.update_scrubber = function () {
        var that = this, currentTime, ratio;
        
        that.parent.ready().then(function () {
            return that.parent.get_current_time();
        }.bind(this)).then(function (newCurrentTime) {
            currentTime = newCurrentTime;
            return that.parent.get_duration();
        }.bind(this)).then(function (duration) {
            ratio = 0;

            if (!isFinite(duration)) {
                //Livestreams always show as complete.
                ratio = 1;
            } else if (!isNaN(duration)) {
                ratio = currentTime / duration;
            }

            that.$scrubfill.css("width", that.css_percent(ratio));
            that.$scrubknob.css("left", that.css_percent(ratio));
        });
    };

    /* Given an X coordinate, calculate the corresponding video seek time and
     * return it.
     *
     * Input is in page co-ordinates. Input is scaled to output based on the
     * CSS width and position of the scrubber. Output is bounded within the
     * closed range [0, 1].
     * 
     * Returns a promise with the correct seek time.
     */
    VideoPlayer_scrubber.prototype.mouse_to_ctime = function (page_x) {
        return this.parent.get_duration().then(function (duration) {
            return (page_x - this.$elem.offset().left) / this.$elem.width() * duration;
        }.bind(this));
    };

    /* Seek the parent player, but only if the proposed new time is valid.
     */
    VideoPlayer_scrubber.prototype.seek_if_valid = function (newTime, isFinal) {
        if (isNaN(newTime) || !isFinite(newTime)) {
            return;
        }

        this.parent.seek(newTime, isFinal);
    };

    // Drag event filtering

    /* Start a drag operation; configuring the event filtering machinery to
     * only recognize the click or touch that started the event chain.
     */
    VideoPlayer_scrubber.prototype.start_drag = function (evt) {
        this.is_dragging = true;

        if (evt.changedTouches !== undefined && evt.changedTouches.length > 0) {
            this.drag_touch_id = evt.changedTouches[0].identifier;
            return evt.changedTouches[0].pageX;
        } else {
            this.drag_touch_id = undefined;
            return evt.pageX;
        }
    };

    /* Retrieves the Page X coordinate from an event, ensuring that the correct
     * finger is tracked across the entire event chain.
     *
     * Events will be ignored, and FALSE returned, if the event type that
     * started the drag does not match the given event; or, if it's a touch
     * event type, it will be ignored if there is no touch matching the current
     * one.
     */
    VideoPlayer_scrubber.prototype.validate_drag = function (evt) {
        var i;

        if (this.is_dragging) {
            if (this.drag_touch_id !== undefined) {
                if (evt.changedTouches !== undefined) {
                    for (i = 0; i < evt.changedTouches.length; i += 1) {
                        if (evt.changedTouches[i].identifier === this.drag_touch_id) {
                            return evt.changedTouches[i].pageX;
                        }
                    }
                }
            } else {
                if (evt.changedTouches === undefined) {
                    return evt.pageX;
                }
            }
        }

        return false;
    };

    /* Retrieves the Page X coordinate from an event and turns off further drag
     * processing.
     *
     * For the same reasons as validate_drag, non-matching events will not
     * cancel drag processing. This function returns FALSE if this event was
     * ignored.
     */
    VideoPlayer_scrubber.prototype.end_drag = function (evt) {
        var px = this.validate_drag(evt);
        if (px === false) {
            return px;
        }

        this.is_dragging = false;
        this.drag_touch_id = undefined;

        return px;
    };

    /* Process a drag event given the incoming Page X.
     *
     * If FALSE is given, indicating an event filtered by validate_drag, this
     * does nothing.
     */
    VideoPlayer_scrubber.prototype.handle_drag = function (pageX, final) {
        var newtime;

        if (pageX === false) {
            return;
        }

        return this.mouse_to_ctime(pageX).then(function (newtime) {
            this.seek_if_valid(newtime, final);
            this.update_scrubber();
        }.bind(this));
    };

    // Event handlers

    VideoPlayer_scrubber.prototype.on_timeupdate = function () {
        this.update_scrubber();
    };

    VideoPlayer_scrubber.prototype.on_dragstart_intent = function (evt) {
        this.handle_drag(this.start_drag(evt), false);
    };

    VideoPlayer_scrubber.prototype.on_drag_intent = function (evt) {
        this.handle_drag(this.validate_drag(evt), false);
    };

    VideoPlayer_scrubber.prototype.on_dragend_intent = function (evt) {
        this.handle_drag(this.end_drag(evt), true);
    };

    VideoPlayer_scrubber.prototype.on_keyboard_nav = function (evt) {
        var currentTime;
        
        this.parent.ready().then(function () {
            return this.parent.get_current_time();
        }.bind(this)).then(function (newCurrentTime) {
            currentTime = newCurrentTime;
            return this.parent.is_active();
        }.bind(this)).then(function (is_active) {
            if (!is_active) {
                return;
            }
            
            if (evt.keyCode === 37) { //LEFT
                evt.preventDefault();
                this.parent.seek(currentTime - 1.0);
                this.update_scrubber();
            } else if (evt.keyCode === 39) { // RIGHT
                evt.preventDefault();
                this.parent.seek(currentTime + 1.0);
                this.update_scrubber();
            }
        });
    };

    /* Serves as a play/pause button for a connected VideoPlayer.
     */
    function VideoPlayer_mute(elem, parent) {
        var that = this;
        
        Behaviors.init(VideoPlayer_mute, that, arguments);

        that.parent = parent;

        that.parent.ready().then(function () {
            that.$elem.on("click touchend", that.on_mute_intent.bind(that));

            that.update_css_classes();
        });
    }

    Behaviors.inherit(VideoPlayer_mute, Behaviors.Behavior);

    VideoPlayer_mute.QUERY = "[data-videoplayer-mute]";

    VideoPlayer_mute.prototype.update_css_classes = function () {
        this.parent.is_muted().then(function (is_muted) {
            if (is_muted) {
                this.$elem.addClass("is-VideoPlayer--muted");
                this.$elem.removeClass("is-VideoPlayer--audible");
            } else {
                this.$elem.removeClass("is-VideoPlayer--muted");
                this.$elem.addClass("is-VideoPlayer--audible");
            }
        }.bind(this));
    };

    VideoPlayer_mute.prototype.toggle_mute = function () {
        this.parent.is_muted().then(function (is_muted) {
            if (is_muted) {
                this.parent.unmute();
            } else {
                this.parent.mute();
            }
        }.bind(this));
    };

    VideoPlayer_mute.prototype.on_mute_intent = function () {
        this.toggle_mute();
        this.update_css_classes();
    };

    // Player API adaptations


    /* Thin implementation for a VideoPlayer that consumes an HTML5 video
     * directly. Also provides a good demonstration that the VideoPlayer APIs
     * are a very thin wrapper over HTMLMediaElement.
     */
    function VideoPlayer__html5(elem) {
        this.$video = $(elem).find("video");

        Behaviors.init(VideoPlayer__html5, this, arguments);
    }

    Behaviors.inherit(VideoPlayer__html5, VideoPlayer);

    VideoPlayer__html5.QUERY = "[data-videoplayer='html5']";

    /* Plays the video, if loaded.
     */
    VideoPlayer__html5.prototype.play = function () {
        this.$video[0].play();
    };

    /* Pauses the video.
     */
    VideoPlayer__html5.prototype.pause = function () {
        this.$video[0].pause();
    };

    /* Mute the video
     */
    VideoPlayer__html5.prototype.mute = function () {
        this.$video[0].muted = true;
    };

    /* Unmute the video
     */
    VideoPlayer__html5.prototype.unmute = function () {
        this.$video[0].muted = false;
    };

    /* Returns the current player position.
     * 
     * This function returns a promise which resolves to the current time.
     */
    VideoPlayer__html5.prototype.get_current_time = function () {
        return Promise.resolve(this.$video[0].currentTime);
    };

    /* Seek the video to the number of seconds indicated in time.
     */
    VideoPlayer__html5.prototype.seek = function (time) {
        this.$video[0].currentTime = time;
    };

    /* Check the video's duration.
     *
     * Returns the media's length in seconds.
     *
     * NaN is returned if the duration is unknown (check with isNaN).
     * Infinity is returned if this is a streaming video.
     * 
     * This function returns a promise which resolves to the aformentioned
     * return value.
     */
    VideoPlayer__html5.prototype.get_duration = function () {
        return Promise.resolve(this.$video[0].duration);
    };

    /* Check if the video is paused.
     * 
     * This function returns a promise which resolves to the aformentioned
     * return value.
     */
    VideoPlayer__html5.prototype.is_paused = function () {
        return Promise.resolve(this.$video[0].paused);
    };

    /* Check if the video is muted.
     * 
     * This function returns a promise which resolves to the aformentioned
     * return value.
     */
    VideoPlayer__html5.prototype.is_muted = function () {
        return Promise.resolve(this.$video[0].muted);
    };

    /* Check the volume of the video.
     * 
     * This function returns a promise which resolves to the aformentioned
     * return value.
     */
    VideoPlayer__html5.prototype.get_volume = function () {
        return Promise.resolve(this.$video[0].volume);
    };

    /* Register an event handler for changes to the video's playback state.
     *
     * This corresponds exactly to matching the playing, play, and pause events
     * and other video service APIs should ensure their event handler triggers
     * on similar conditions.
     */
    VideoPlayer__html5.prototype.add_statechange_listener = function (listen) {
        this.$video.on("playing play pause", listen);
    };

    /* Register an event handler for changes to the video's playback time.
     *
     * This corresponds to the timeupdate event on HTMLMediaElement. This event
     * is permitted not to register an event if it returns FALSE, indicating
     * that timeupdates are not provided by this player type.
     */
    VideoPlayer__html5.prototype.add_timeupdate_listener = function (listen) {
        this.$video.on("timeupdate", listen);
    };

    /* This VideoPlayer consumes a YouTube iframe using the YouTube API.
     * See https://developers.google.com/youtube/iframe_api_reference
     */
    function VideoPlayer__youtube(elem) {
        var that = this;

        Behaviors.init(VideoPlayer__youtube, that, arguments);

        this.$iframe = $(elem).find("iframe");
        this.id = this.$iframe.attr("id");
        if (this.id === undefined) {
            //Randomly generate an ID if one was not provided.
            this.id = "VideoPlayer-random_id--" + Math.random() * 1024 * 1024;
            this.$iframe.attr("id", this.id);
        }

        this.player_fully_loaded = false;
    }

    Behaviors.inherit(VideoPlayer__youtube, VideoPlayer);

    VideoPlayer__youtube.QUERY = "[data-videoplayer='youtube']";

    /* Install the YouTube API, if not already installed.
     *
     * This is an asynchronous operation, so we return a Promise that resolves
     * when YouTube's API is available. Invocation works like so:
     *
     * VideoPlayer__youtube.api().then(function () {
     *     //do stuff...
     * })
     */
    VideoPlayer__youtube.api = function () {
        if (VideoPlayer__youtube.install_promise === undefined) {
            VideoPlayer__youtube.install_promise = new Promise(function (resolve, reject) {
                var tag, firstScriptTag;

                tag = document.createElement("script");
                tag.src = "https://www.youtube.com/iframe_api";
                firstScriptTag = document.getElementsByTagName('script')[0];
                firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

                window.onYouTubeIframeAPIReady = VideoPlayer__youtube.api_ready_handler(resolve, reject);
            });
        }

        return VideoPlayer__youtube.install_promise;
    };

    /* Creates the function that gets called when the YouTube API is ready.
     */
    VideoPlayer__youtube.api_ready_handler = function (resolve, reject) {
        return function () {
            resolve();
        };
    };

    /* Returns a promise which resolves when the player is ready to accept
     * other API calls.
     *
     * Calling those other API calls outside of a then() block from the promise
     * returned by this function is a good way to have a bad time.
     */
    VideoPlayer__youtube.prototype.ready = function () {
        var that = this;
        
        if (that.ready_promise === undefined) {
            that.ready_promise = VideoPlayer__youtube.api().then(function () {
                that.player = new window.YT.Player(that.id, {
                    "playerVars": {
                        "enablejsapi": true
                    }
                });

                return new Promise(function (resolve, reject) {
                    if (that.player_fully_loaded) {
                        resolve();
                    } else {
                        that.player.addEventListener("onReady", function () {
                            that.player_fully_loaded = true;
                            resolve();
                        });
                    }
                });
            });
        }
        
        return that.ready_promise;
    };

    /* Plays the video, if loaded.
     */
    VideoPlayer__youtube.prototype.play = function () {
        this.ready().then(function () {
            this.player.playVideo();
        }.bind(this));
    };

    /* Pauses the video.
     */
    VideoPlayer__youtube.prototype.pause = function () {
        this.ready().then(function () {
            this.player.pauseVideo();
        }.bind(this));
    };

    /* Mute the video
     */
    VideoPlayer__youtube.prototype.mute = function () {
        this.ready().then(function () {
            this.player.mute();
        }.bind(this));
    };

    /* Unmute the video
     */
    VideoPlayer__youtube.prototype.unmute = function () {
        this.ready().then(function () {
            this.player.unMute();
        }.bind(this));
    };

    /* Returns the current player position.
     * 
     * This function returns a promise which resolves to the current time.
     */
    VideoPlayer__youtube.prototype.get_current_time = function () {
        return this.ready().then(function () {
            return this.player.getCurrentTime();
        }.bind(this));
    };

    /* Seek the video to the number of seconds indicated in time.
     *
     * The seek_commit parameter should be FALSE if and only if the seek
     * resulted from a mousedrag and you expect to get more seek operations.
     */
    VideoPlayer__youtube.prototype.seek = function (time, seek_commit) {
        return this.ready().then(function () {
            return this.player.seekTo(time, seek_commit);
        }.bind(this));
    };

    /* Check the video's duration.
     *
     * Returns the media's length in seconds.
     *
     * NaN is returned if the duration is unknown (check with isNaN).
     * Infinity is returned if this is a streaming video.
     *
     * SPEC VIOLATION: YouTube does not indicate if the player is playing a
     * live event, so live-streaming players will have incorrect duration info.
     * 
     * This function returns a promise which resolves to the aformentioned
     * return value.
     */
    VideoPlayer__youtube.prototype.get_duration = function () {
        return this.ready().then(function () {
            var duration = this.player.getDuration();

            if (duration === 0) {
                return NaN;
            }

            return duration;
        }.bind(this));
    };

    /* Check if the video is paused.
     *
     * TODO: We naively interpret YouTube's player state, does player state 2
     * correspond to HTMLMediaElement/VideoPlayer__html5's .paused attribute?
     * Or are there other player states that count as paused by HTML5?
     * 
     * This function returns a promise which resolves to the aformentioned
     * return value.
     */
    VideoPlayer__youtube.prototype.is_paused = function () {
        return this.ready().then(function () {
            var ps = this.player.getPlayerState();
            return ps === 2 || ps === -1 || ps === 5;
        }.bind(this));
    };

    /* Check if the video is muted.
     * 
     * This function returns a promise which resolves to the aformentioned
     * return value.
     */
    VideoPlayer__youtube.prototype.is_muted = function () {
        return this.ready().then(function () {
            return this.player.isMuted();
        }.bind(this));
    };

    /* Check the volume of the video.
     *
     * YouTube works in percentage units for some reason.
     * 
     * This function returns a promise which resolves to the aformentioned
     * return value.
     */
    VideoPlayer__youtube.prototype.get_volume = function () {
        return this.ready().then(function () {
            return this.player.getVolume() / 100;
        }.bind(this));
    };

    /* Register an event handler for changes to the video's playback state.
     *
     * This corresponds exactly to matching the playing, play, and pause events
     * and other video service APIs should ensure their event handler triggers
     * on similar conditions.
     */
    VideoPlayer__youtube.prototype.add_statechange_listener = function (listen) {
        this.ready().then(function () {
            this.player.addEventListener("onStateChange", listen);
        }.bind(this));
    };

    /* Register an event handler for changes to the video's playback time.
     *
     * YouTube doesn't have this event type for some reason.
     */
    VideoPlayer__youtube.prototype.add_timeupdate_listener = function (listen) {
        return false;
    };

    VideoPlayer__youtube.content_ready = function ($context) {
        var Class = this;

        if ($context.find(Class.QUERY).length > 0) {
            Class.api().then(function () {
                Class.find_markup($context);
            });
        }
    };
    
    /* This VideoPlayer consumes a Vimeo iframe using their player controller.
     * See https://github.com/vimeo/player.js
     */
    function VideoPlayer__vimeo(elem) {
        var that = this;

        Behaviors.init(VideoPlayer__vimeo, that, arguments);
        
        this.ready();
    }

    VideoPlayer__vimeo.QUERY = "[data-videoplayer='vimeo']";
    
    Behaviors.inherit(VideoPlayer__vimeo, VideoPlayer);
    
    /* Install the Vimeo API, if not already installed.
     *
     * This is an asynchronous operation, so we return a Promise that resolves
     * when Vimeo's API is available. Invocation works like so:
     *
     * VideoPlayer__vimeo.api().then(function () {
     *     //do stuff...
     * })
     */
    VideoPlayer__vimeo.api = function () {
        if (VideoPlayer__vimeo.install_promise === undefined) {
            VideoPlayer__vimeo.install_promise = new Promise(function (resolve, reject) {
                var tag, firstScriptTag;

                tag = document.createElement("script");
                tag.src = "https://player.vimeo.com/api/player.js";
                tag.onload = VideoPlayer__vimeo.api_ready_handler(resolve, reject);
                tag.async = true;
                firstScriptTag = document.getElementsByTagName('script')[0];
                firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
            });
        }

        return VideoPlayer__vimeo.install_promise;
    };

    /* Creates the function that gets called when the Vimeo API is ready.
     */
    VideoPlayer__vimeo.api_ready_handler = function (resolve, reject) {
        function wait_for_vimeo() {
            if (window.Vimeo !== undefined) {
                resolve();
            } else {
                window.setTimeout(wait_for_vimeo, 10);
            }
        }
        
        return wait_for_vimeo;
    };
    
    /* Returns a promise which resolves when the player is ready to accept
     * other API calls.
     *
     * Calling those other API calls outside of a then() block from the promise
     * returned by this function is a good way to have a bad time.
     */
    VideoPlayer__vimeo.prototype.ready = function () {
        var that = this;
        
        if (this.ready_promise === undefined) {
            this.ready_promise = VideoPlayer__vimeo.api().then(function () {
                this.player = new window.Vimeo.Player(this.$elem);
            }.bind(this));
        }
        
        return this.ready_promise;
    };

    /* Plays the video, if loaded.
     */
    VideoPlayer__vimeo.prototype.play = function () {
        return this.ready().then(function () {
            this.player.play();
        }.bind(this));
    };

    /* Pauses the video.
     */
    VideoPlayer__vimeo.prototype.pause = function () {
        return this.ready().then(function () {
            this.player.pause();
        }.bind(this));
    };

    /* Mute the video
     */
    VideoPlayer__vimeo.prototype.mute = function () {
        return this.ready().then(function () {
            return this.player.getVolume();
        }.bind(this)).then(function (volume) {
            this.preMuteVolume = volume;
            this.player.setVolume(0);
        }.bind(this));
    };

    /* Unmute the video
     */
    VideoPlayer__vimeo.prototype.unmute = function () {
        return this.ready().then(function () {
            return this.player.setVolume(this.preMuteVolume || 1.0);
        }.bind(this));
    };

    /* Returns the current player position.
     * 
     * This function returns a promise which resolves to the current time.
     */
    VideoPlayer__vimeo.prototype.get_current_time = function () {
        return this.ready().then(function () {
            return this.player.getCurrentTime();
        }.bind(this));
    };

    /* Seek the video to the number of seconds indicated in time.
     *
     * The seek_commit parameter should be FALSE if and only if the seek
     * resulted from a mousedrag and you expect to get more seek operations.
     * 
     * As a unique quirk of the Vimeo API, the returned promise will resolve
     * to the actual seek time adopted by the player.
     */
    VideoPlayer__vimeo.prototype.seek = function (time, seek_commit) {
        return this.ready().then(function () {
            return this.player.setCurrentTime(time);
        }.bind(this));
    };

    /* Check the video's duration.
     *
     * Returns the media's length in seconds.
     *
     * NaN is returned if the duration is unknown (check with isNaN).
     * Infinity is returned if this is a streaming video.
     * 
     * This function returns a promise which resolves to the aformentioned
     * return value.
     */
    VideoPlayer__vimeo.prototype.get_duration = function () {
        return this.ready().then(function () {
            return this.player.getDuration();
        }.bind(this));
    };

    /* Check if the video is paused.
     * 
     * This function returns a promise which resolves to the aformentioned
     * return value.
     */
    VideoPlayer__vimeo.prototype.is_paused = function () {
        return this.ready().then(function () {
            return this.player.getPaused();
        }.bind(this));
    };

    /* Check if the video is muted.
     * 
     * This function returns a promise which resolves to the aformentioned
     * return value.
     */
    VideoPlayer__vimeo.prototype.is_muted = function () {
        return this.ready().then(function () {
            return this.get_volume();
        }.bind(this)).then(function (volume) {
            return volume === 0.0;
        }.bind(this));
    };

    /* Check the volume of the video.
     * 
     * This function returns a promise which resolves to the aformentioned
     * return value.
     */
    VideoPlayer__vimeo.prototype.get_volume = function () {
        return this.ready().then(function () {
            return this.player.getVolume();
        }.bind(this));
    };

    /* Register an event handler for changes to the video's playback state.
     *
     * This corresponds exactly to matching the playing, play, and pause events
     * and other video service APIs should ensure their event handler triggers
     * on similar conditions.
     */
    VideoPlayer__vimeo.prototype.add_statechange_listener = function (listen) {
        return this.ready().then(function () {
            return this.player.on("play", listen);
            return this.player.on("pause", listen);
            return this.player.on("ended", listen);
        }.bind(this));
    };

    /* Register an event handler for changes to the video's playback time.
     */
    VideoPlayer__vimeo.prototype.add_timeupdate_listener = function (listen) {
        return this.ready().then(function () {
            return this.player.on("timeupdate", listen);
        }.bind(this));
    };
    
    VideoPlayer__vimeo.content_ready = function ($context) {
        var Class = this;

        if ($context.find(Class.QUERY).length > 0) {
            Class.api().then(function () {
                Class.find_markup($context);
            });
        }
    };

    Behaviors.register_behavior(VideoPlayer__html5);
    Behaviors.register_behavior(VideoPlayer__youtube);
    Behaviors.register_behavior(VideoPlayer__vimeo);
    
    module.VideoPlayer = VideoPlayer;
    module.VideoPlayer_playpause = VideoPlayer_playpause;
    module.VideoPlayer_scrubber = VideoPlayer_scrubber;
    module.VideoPlayer_mute = VideoPlayer_mute;
    module.VideoPlayer_offcanvas = VideoPlayer_offcanvas;
    module.VideoPlayer__html5 = VideoPlayer__html5;
    module.VideoPlayer__youtube = VideoPlayer__youtube;
    module.VideoPlayer__vimeo = VideoPlayer__vimeo;
    return module;
}));

(window.SpaceStation.Collection = function (Collection, $, betteroffcanvas, Behaviors) {
    "use strict";
    var cbk = function(){};

    /**
     * Behavior that latches onto quick-view toggle links.
     * 
     * Most of the heavy lifting of this is handled by betteroffcanvas: ergo,
     * each QuickView should also be a valid offcanvas toggle whose target is
     * some kind of modal. The content of that modal will be replaced with the
     * quickview page.
     */
    function QuickView() {
        Behaviors.init(QuickView, this, arguments);

        this.quickview_url = this.$elem.data("quickview");
        this.$modal = $(this.$elem.data("target"));
        this.$content = this.$modal.find("[data-quickview-content]");

        if (this.$content.length > 0) {
            this.$modal.on("offcanvas-open", this.modal_open_intent.bind(this));
            this.$modal.on("offcanvas-dismiss", this.modal_close_intent.bind(this));
        }
    }

    Behaviors.inherit(QuickView, Behaviors.Behavior);

    QuickView.QUERY = "[data-quickview]";

    /**
     * Event handler fired when the associated modal is opened.
     * 
     * @param {Object} evt An offcanvas-open event.
     */
    QuickView.prototype.modal_open_intent = function (evt) {
        if (!evt.originalEvent.toggle.is(this.$elem)) {
            return;
        }

        Behaviors.content_removal(this.$content.children());
        this.$content.children().remove();
        
        $.ajax({
            url: this.quickview_url,
            dataType: "html"
        }).done(function (data, textStatus, jqXHR) {
            this.$content.append($(data));
            this.$content.find("#admin_bar_iframe").remove();
            Behaviors.content_ready(this.$content.children());

            cbk(this.$modal, this.$content);
        }.bind(this)).error(function (jqXHR, textStatus, errorThrown) {
            Shopify.onError(jqXHR, textStatus);
        }.bind(this));
    }

    /**
     * Event handler fired with the associated modal is dismissed.
     * 
     * @param {Object} evt An offcanvas-dismiss event.
     */
    QuickView.prototype.modal_close_intent = function (evt) {
        if (!evt.originalEvent.target.is(this.$modal)) {
            return;
        }

        Behaviors.content_removal(this.$content.children());
        this.$content.children().remove();
    }

    Behaviors.register_behavior(QuickView);

    /**
     * Hook the opening of new quickviews.
     * 
     * @param {Function} newcbk The callback to call.
     * 
     * This function will always be called with a jQuery object of the modal
     * that was opened, and a jQuery holding the content element that had the
     * product's data shoved into it.
     */
    function setCallback(newcbk) {
        cbk = newcbk;
    }

    Collection.setCallback = setCallback;
    Collection.QuickView = QuickView;
    
    return Collection;
}(window.SpaceStation.Collection || {},
    window.jQuery,
    window.betteroffcanvas,
    window.Behaviors));